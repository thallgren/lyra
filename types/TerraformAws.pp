# this file is generated
type TerraformAws = TypeSet[{
  pcore_uri => 'http://puppet.com/2016.1/pcore',
  pcore_version => '1.0.0',
  name_authority => 'http://puppet.com/2016.1/runtime',
  name => 'TerraformAws',
  version => '0.1.0',
  types => {
    Aws_acm_certificate => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['domain_name', 'subject_alternative_names', 'validation_method'],
          'providedAttributes' => ['arn', 'certificate_body', 'certificate_chain', 'domain_name', 'domain_validation_options', 'private_key', 'subject_alternative_names', 'tags', 'validation_emails', 'validation_method']
        }
      },
      attributes => {
        'aws_acm_certificate_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_body' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_chain' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_validation_options' => {
          'type' => Optional[Array[Aws_acm_certificate_domain_validation_options_1]],
          'value' => undef
        },
        'private_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subject_alternative_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'validation_emails' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'validation_method' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_acm_certificateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_acm_certificate_domain_validation_options_1 => {
      attributes => {
        'domain_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_record_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_record_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_record_value' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_acm_certificate_validation => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['certificate_arn', 'validation_record_fqdns'],
          'providedAttributes' => ['validation_record_fqdns']
        }
      },
      attributes => {
        'aws_acm_certificate_validation_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_arn' => String,
        'validation_record_fqdns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_acm_certificate_validationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_acmpca_certificate_authority => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'certificate', 'certificate_chain', 'certificate_signing_request', 'enabled', 'not_after', 'not_before', 'revocation_configuration', 'serial', 'status', 'tags', 'type']
        }
      },
      attributes => {
        'aws_acmpca_certificate_authority_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_authority_configuration' => Array[Aws_acmpca_certificate_authority_certificate_authority_configuration_2],
        'certificate_chain' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_signing_request' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'not_after' => {
          'type' => Optional[String],
          'value' => undef
        },
        'not_before' => {
          'type' => Optional[String],
          'value' => undef
        },
        'revocation_configuration' => {
          'type' => Optional[Array[Aws_acmpca_certificate_authority_revocation_configuration_4]],
          'value' => undef
        },
        'serial' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_acmpca_certificate_authorityHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_acmpca_certificate_authority_certificate_authority_configuration_2 => {
      attributes => {
        'key_algorithm' => String,
        'signing_algorithm' => String,
        'subject' => Array[Aws_acmpca_certificate_authority_certificate_authority_configuration_2_subject_3]
      }
    },
    Aws_acmpca_certificate_authority_certificate_authority_configuration_2_subject_3 => {
      attributes => {
        'common_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'country' => {
          'type' => Optional[String],
          'value' => undef
        },
        'distinguished_name_qualifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'generation_qualifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'given_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'initials' => {
          'type' => Optional[String],
          'value' => undef
        },
        'locality' => {
          'type' => Optional[String],
          'value' => undef
        },
        'organization' => {
          'type' => Optional[String],
          'value' => undef
        },
        'organizational_unit' => {
          'type' => Optional[String],
          'value' => undef
        },
        'pseudonym' => {
          'type' => Optional[String],
          'value' => undef
        },
        'state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'surname' => {
          'type' => Optional[String],
          'value' => undef
        },
        'title' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_acmpca_certificate_authority_revocation_configuration_4 => {
      attributes => {
        'crl_configuration' => {
          'type' => Optional[Array[Aws_acmpca_certificate_authority_revocation_configuration_4_crl_configuration_5]],
          'value' => undef
        }
      }
    },
    Aws_acmpca_certificate_authority_revocation_configuration_4_crl_configuration_5 => {
      attributes => {
        'custom_cname' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'expiration_in_days' => Integer,
        's3_bucket_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_alb => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['internal', 'load_balancer_type', 'name', 'name_prefix', 'subnet_mapping'],
          'providedAttributes' => ['access_logs', 'arn', 'arn_suffix', 'dns_name', 'enable_cross_zone_load_balancing', 'enable_deletion_protection', 'enable_http2', 'idle_timeout', 'internal', 'ip_address_type', 'load_balancer_type', 'name', 'name_prefix', 'security_groups', 'subnet_mapping', 'subnets', 'tags', 'vpc_id', 'zone_id']
        }
      },
      attributes => {
        'aws_alb_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'access_logs' => {
          'type' => Optional[Array[Aws_alb_access_logs_6]],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn_suffix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dns_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_cross_zone_load_balancing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_deletion_protection' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_http2' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'idle_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'internal' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ip_address_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'load_balancer_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnet_mapping' => {
          'type' => Optional[Array[Aws_alb_subnet_mapping_7]],
          'value' => undef
        },
        'subnets' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'zone_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_albHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_alb_access_logs_6 => {
      attributes => {
        'bucket' => String,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_alb_listener => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['load_balancer_arn'],
          'providedAttributes' => ['arn', 'certificate_arn', 'protocol', 'ssl_policy']
        }
      },
      attributes => {
        'aws_alb_listener_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_action' => Array[Aws_alb_listener_default_action_8],
        'load_balancer_arn' => String,
        'port' => Integer,
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssl_policy' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_alb_listenerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_alb_listener_certificate => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['certificate_arn', 'listener_arn']
        }
      },
      attributes => {
        'aws_alb_listener_certificate_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_arn' => String,
        'listener_arn' => String
      }
    },
    Aws_alb_listener_certificateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_alb_listener_default_action_8 => {
      attributes => {
        'authenticate_cognito' => {
          'type' => Optional[Array[Aws_alb_listener_default_action_8_authenticate_cognito_9]],
          'value' => undef
        },
        'authenticate_oidc' => {
          'type' => Optional[Array[Aws_alb_listener_default_action_8_authenticate_oidc_10]],
          'value' => undef
        },
        'fixed_response' => {
          'type' => Optional[Array[Aws_alb_listener_default_action_8_fixed_response_11]],
          'value' => undef
        },
        'order' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'redirect' => {
          'type' => Optional[Array[Aws_alb_listener_default_action_8_redirect_12]],
          'value' => undef
        },
        'target_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_alb_listener_default_action_8_authenticate_cognito_9 => {
      attributes => {
        'authentication_request_extra_params' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'on_unauthenticated_request' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_cookie_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'user_pool_arn' => String,
        'user_pool_client_id' => String,
        'user_pool_domain' => String
      }
    },
    Aws_alb_listener_default_action_8_authenticate_oidc_10 => {
      attributes => {
        'authentication_request_extra_params' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'authorization_endpoint' => String,
        'client_id' => String,
        'client_secret' => String,
        'issuer' => String,
        'on_unauthenticated_request' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_cookie_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'token_endpoint' => String,
        'user_info_endpoint' => String
      }
    },
    Aws_alb_listener_default_action_8_fixed_response_11 => {
      attributes => {
        'content_type' => String,
        'message_body' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_alb_listener_default_action_8_redirect_12 => {
      attributes => {
        'host' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'query' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => String
      }
    },
    Aws_alb_listener_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['listener_arn', 'priority'],
          'providedAttributes' => ['arn', 'priority']
        }
      },
      attributes => {
        'aws_alb_listener_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'action' => Array[Aws_alb_listener_rule_action_13],
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'condition' => Array[Aws_alb_listener_rule_condition_18],
        'listener_arn' => String,
        'priority' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_alb_listener_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_alb_listener_rule_action_13 => {
      attributes => {
        'authenticate_cognito' => {
          'type' => Optional[Array[Aws_alb_listener_rule_action_13_authenticate_cognito_14]],
          'value' => undef
        },
        'authenticate_oidc' => {
          'type' => Optional[Array[Aws_alb_listener_rule_action_13_authenticate_oidc_15]],
          'value' => undef
        },
        'fixed_response' => {
          'type' => Optional[Array[Aws_alb_listener_rule_action_13_fixed_response_16]],
          'value' => undef
        },
        'order' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'redirect' => {
          'type' => Optional[Array[Aws_alb_listener_rule_action_13_redirect_17]],
          'value' => undef
        },
        'target_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_alb_listener_rule_action_13_authenticate_cognito_14 => {
      attributes => {
        'authentication_request_extra_params' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'on_unauthenticated_request' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_cookie_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'user_pool_arn' => String,
        'user_pool_client_id' => String,
        'user_pool_domain' => String
      }
    },
    Aws_alb_listener_rule_action_13_authenticate_oidc_15 => {
      attributes => {
        'authentication_request_extra_params' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'authorization_endpoint' => String,
        'client_id' => String,
        'client_secret' => String,
        'issuer' => String,
        'on_unauthenticated_request' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_cookie_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'token_endpoint' => String,
        'user_info_endpoint' => String
      }
    },
    Aws_alb_listener_rule_action_13_fixed_response_16 => {
      attributes => {
        'content_type' => String,
        'message_body' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_alb_listener_rule_action_13_redirect_17 => {
      attributes => {
        'host' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'query' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => String
      }
    },
    Aws_alb_listener_rule_condition_18 => {
      attributes => {
        'field' => {
          'type' => Optional[String],
          'value' => undef
        },
        'values' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_alb_subnet_mapping_7 => {
      attributes => {
        'allocation_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => String
      }
    },
    Aws_alb_target_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix', 'port', 'protocol', 'target_type', 'vpc_id'],
          'providedAttributes' => ['arn', 'arn_suffix', 'deregistration_delay', 'health_check', 'name', 'name_prefix', 'port', 'protocol', 'proxy_protocol_v2', 'slow_start', 'stickiness', 'tags', 'target_type', 'vpc_id']
        }
      },
      attributes => {
        'aws_alb_target_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn_suffix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deregistration_delay' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'health_check' => {
          'type' => Optional[Array[Aws_alb_target_group_health_check_19]],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'proxy_protocol_v2' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'slow_start' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'stickiness' => {
          'type' => Optional[Array[Aws_alb_target_group_stickiness_20]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'target_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_alb_target_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_alb_target_group_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'port', 'target_group_arn', 'target_id'],
          'providedAttributes' => ['availability_zone', 'port']
        }
      },
      attributes => {
        'aws_alb_target_group_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'target_group_arn' => String,
        'target_id' => String
      }
    },
    Aws_alb_target_group_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_alb_target_group_health_check_19 => {
      attributes => {
        'healthy_threshold' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'matcher' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'unhealthy_threshold' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_alb_target_group_stickiness_20 => {
      attributes => {
        'cookie_duration' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_ami => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['architecture', 'ena_support', 'ephemeral_block_device', 'image_location', 'kernel_id', 'manage_ebs_snapshots', 'name', 'ramdisk_id', 'root_device_name', 'sriov_net_support', 'virtualization_type'],
          'providedAttributes' => ['architecture', 'description', 'ebs_block_device', 'ena_support', 'ephemeral_block_device', 'image_location', 'kernel_id', 'manage_ebs_snapshots', 'ramdisk_id', 'root_device_name', 'root_snapshot_id', 'sriov_net_support', 'tags', 'virtualization_type']
        }
      },
      attributes => {
        'aws_ami_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'architecture' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ebs_block_device' => {
          'type' => Optional[Array[Aws_ami_ebs_block_device_21]],
          'value' => undef
        },
        'ena_support' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ephemeral_block_device' => {
          'type' => Optional[Array[Aws_ami_ephemeral_block_device_22]],
          'value' => undef
        },
        'image_location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kernel_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'manage_ebs_snapshots' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'ramdisk_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_device_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sriov_net_support' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'virtualization_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_amiHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ami_copy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['encrypted', 'ephemeral_block_device', 'kms_key_id', 'manage_ebs_snapshots', 'name', 'source_ami_id', 'source_ami_region'],
          'providedAttributes' => ['architecture', 'description', 'ebs_block_device', 'ena_support', 'encrypted', 'ephemeral_block_device', 'image_location', 'kernel_id', 'kms_key_id', 'manage_ebs_snapshots', 'ramdisk_id', 'root_device_name', 'root_snapshot_id', 'sriov_net_support', 'tags', 'virtualization_type']
        }
      },
      attributes => {
        'aws_ami_copy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'architecture' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ebs_block_device' => {
          'type' => Optional[Array[Aws_ami_copy_ebs_block_device_23]],
          'value' => undef
        },
        'ena_support' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ephemeral_block_device' => {
          'type' => Optional[Array[Aws_ami_copy_ephemeral_block_device_24]],
          'value' => undef
        },
        'image_location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kernel_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'manage_ebs_snapshots' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'ramdisk_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_device_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_ami_id' => String,
        'source_ami_region' => String,
        'sriov_net_support' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'virtualization_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ami_copyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ami_copy_ebs_block_device_23 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ami_copy_ephemeral_block_device_24 => {
      attributes => {
        'device_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'virtual_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ami_ebs_block_device_21 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_name' => String,
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ami_ephemeral_block_device_22 => {
      attributes => {
        'device_name' => String,
        'virtual_name' => String
      }
    },
    Aws_ami_from_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['ephemeral_block_device', 'manage_ebs_snapshots', 'name', 'snapshot_without_reboot', 'source_instance_id'],
          'providedAttributes' => ['architecture', 'description', 'ebs_block_device', 'ena_support', 'ephemeral_block_device', 'image_location', 'kernel_id', 'manage_ebs_snapshots', 'ramdisk_id', 'root_device_name', 'root_snapshot_id', 'snapshot_without_reboot', 'sriov_net_support', 'tags', 'virtualization_type']
        }
      },
      attributes => {
        'aws_ami_from_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'architecture' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ebs_block_device' => {
          'type' => Optional[Array[Aws_ami_from_instance_ebs_block_device_25]],
          'value' => undef
        },
        'ena_support' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ephemeral_block_device' => {
          'type' => Optional[Array[Aws_ami_from_instance_ephemeral_block_device_26]],
          'value' => undef
        },
        'image_location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kernel_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'manage_ebs_snapshots' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'ramdisk_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_device_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'snapshot_without_reboot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'source_instance_id' => String,
        'sriov_net_support' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'virtualization_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ami_from_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ami_from_instance_ebs_block_device_25 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ami_from_instance_ephemeral_block_device_26 => {
      attributes => {
        'device_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'virtual_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ami_launch_permission => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['account_id', 'image_id']
        }
      },
      attributes => {
        'aws_ami_launch_permission_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'account_id' => String,
        'image_id' => String
      }
    },
    Aws_ami_launch_permissionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_account => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['cloudwatch_role_arn', 'throttle_settings']
        }
      },
      attributes => {
        'aws_api_gateway_account_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cloudwatch_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'throttle_settings' => {
          'type' => Optional[Array[Aws_api_gateway_account_throttle_settings_27]],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_accountHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_account_throttle_settings_27 => {
      attributes => {
        'burst_limit' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'rate_limit' => {
          'type' => Optional[Float],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_api_key => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'value'],
          'providedAttributes' => ['created_date', 'description', 'enabled', 'last_updated_date', 'stage_key', 'value']
        }
      },
      attributes => {
        'aws_api_gateway_api_key_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'last_updated_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'stage_key' => {
          'type' => Optional[Array[Aws_api_gateway_api_key_stage_key_28]],
          'value' => undef
        },
        'value' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_api_keyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_api_key_stage_key_28 => {
      attributes => {
        'rest_api_id' => String,
        'stage_name' => String
      }
    },
    Aws_api_gateway_authorizer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['rest_api_id'],
          'providedAttributes' => ['authorizer_credentials', 'authorizer_result_ttl_in_seconds', 'authorizer_uri', 'identity_source', 'identity_validation_expression', 'provider_arns', 'type']
        }
      },
      attributes => {
        'aws_api_gateway_authorizer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'authorizer_credentials' => {
          'type' => Optional[String],
          'value' => undef
        },
        'authorizer_result_ttl_in_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'authorizer_uri' => {
          'type' => Optional[String],
          'value' => undef
        },
        'identity_source' => {
          'type' => Optional[String],
          'value' => undef
        },
        'identity_validation_expression' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'provider_arns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'rest_api_id' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_authorizerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_base_path_mapping => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['api_id', 'base_path', 'domain_name', 'stage_name'],
          'providedAttributes' => ['base_path', 'stage_name']
        }
      },
      attributes => {
        'aws_api_gateway_base_path_mapping_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'api_id' => String,
        'base_path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name' => String,
        'stage_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_base_path_mappingHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_client_certificate => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['created_date', 'description', 'expiration_date', 'pem_encoded_certificate']
        }
      },
      attributes => {
        'aws_api_gateway_client_certificate_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'expiration_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'pem_encoded_certificate' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_client_certificateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_deployment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['rest_api_id', 'stage_description', 'stage_name', 'variables'],
          'providedAttributes' => ['created_date', 'description', 'execution_arn', 'invoke_url', 'stage_description', 'variables']
        }
      },
      attributes => {
        'aws_api_gateway_deployment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'execution_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'invoke_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'rest_api_id' => String,
        'stage_description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stage_name' => String,
        'variables' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_deploymentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_documentation_part => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['location', 'rest_api_id']
        }
      },
      attributes => {
        'aws_api_gateway_documentation_part_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'location' => Array[Aws_api_gateway_documentation_part_location_29],
        'properties' => String,
        'rest_api_id' => String
      }
    },
    Aws_api_gateway_documentation_partHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_documentation_part_location_29 => {
      attributes => {
        'method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_api_gateway_documentation_version => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['rest_api_id', 'version'],
          'providedAttributes' => ['description']
        }
      },
      attributes => {
        'aws_api_gateway_documentation_version_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'rest_api_id' => String,
        'version' => String
      }
    },
    Aws_api_gateway_documentation_versionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_domain_name => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['certificate_body', 'certificate_chain', 'certificate_private_key', 'domain_name'],
          'providedAttributes' => ['certificate_arn', 'certificate_body', 'certificate_chain', 'certificate_name', 'certificate_private_key', 'certificate_upload_date', 'cloudfront_domain_name', 'cloudfront_zone_id', 'endpoint_configuration', 'regional_certificate_arn', 'regional_certificate_name', 'regional_domain_name', 'regional_zone_id']
        }
      },
      attributes => {
        'aws_api_gateway_domain_name_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_body' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_chain' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_private_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_upload_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloudfront_domain_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloudfront_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name' => String,
        'endpoint_configuration' => {
          'type' => Optional[Array[Aws_api_gateway_domain_name_endpoint_configuration_30]],
          'value' => undef
        },
        'regional_certificate_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'regional_certificate_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'regional_domain_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'regional_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_domain_nameHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_domain_name_endpoint_configuration_30 => {
      attributes => {
        'types' => Array[String]
      }
    },
    Aws_api_gateway_gateway_response => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['response_type', 'rest_api_id'],
          'providedAttributes' => ['response_parameters', 'response_templates', 'status_code']
        }
      },
      attributes => {
        'aws_api_gateway_gateway_response_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'response_parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'response_templates' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'response_type' => String,
        'rest_api_id' => String,
        'status_code' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_gateway_responseHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_integration => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['credentials', 'http_method', 'integration_http_method', 'passthrough_behavior', 'resource_id', 'rest_api_id', 'type'],
          'providedAttributes' => ['cache_key_parameters', 'cache_namespace', 'connection_id', 'connection_type', 'content_handling', 'credentials', 'integration_http_method', 'passthrough_behavior', 'request_parameters', 'request_parameters_in_json', 'request_templates', 'timeout_milliseconds', 'uri']
        }
      },
      attributes => {
        'aws_api_gateway_integration_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cache_key_parameters' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'cache_namespace' => {
          'type' => Optional[String],
          'value' => undef
        },
        'connection_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'connection_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content_handling' => {
          'type' => Optional[String],
          'value' => undef
        },
        'credentials' => {
          'type' => Optional[String],
          'value' => undef
        },
        'http_method' => String,
        'integration_http_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'passthrough_behavior' => {
          'type' => Optional[String],
          'value' => undef
        },
        'request_parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'request_parameters_in_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'request_templates' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'resource_id' => String,
        'rest_api_id' => String,
        'timeout_milliseconds' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'type' => String,
        'uri' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_integrationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_integration_response => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['http_method', 'resource_id', 'rest_api_id'],
          'providedAttributes' => ['content_handling', 'response_parameters', 'response_parameters_in_json', 'response_templates', 'selection_pattern']
        }
      },
      attributes => {
        'aws_api_gateway_integration_response_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'content_handling' => {
          'type' => Optional[String],
          'value' => undef
        },
        'http_method' => String,
        'resource_id' => String,
        'response_parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'response_parameters_in_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'response_templates' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'rest_api_id' => String,
        'selection_pattern' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => String
      }
    },
    Aws_api_gateway_integration_responseHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_method => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['http_method', 'resource_id', 'rest_api_id'],
          'providedAttributes' => ['api_key_required', 'authorization_scopes', 'authorizer_id', 'request_models', 'request_parameters', 'request_parameters_in_json', 'request_validator_id']
        }
      },
      attributes => {
        'aws_api_gateway_method_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'api_key_required' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'authorization' => String,
        'authorization_scopes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'authorizer_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'http_method' => String,
        'request_models' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'request_parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'request_parameters_in_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'request_validator_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_id' => String,
        'rest_api_id' => String
      }
    },
    Aws_api_gateway_methodHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_method_response => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['http_method', 'resource_id', 'rest_api_id'],
          'providedAttributes' => ['response_models', 'response_parameters', 'response_parameters_in_json']
        }
      },
      attributes => {
        'aws_api_gateway_method_response_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'http_method' => String,
        'resource_id' => String,
        'response_models' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'response_parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'response_parameters_in_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'rest_api_id' => String,
        'status_code' => String
      }
    },
    Aws_api_gateway_method_responseHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_method_settings => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['method_path', 'rest_api_id', 'stage_name']
        }
      },
      attributes => {
        'aws_api_gateway_method_settings_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'method_path' => String,
        'rest_api_id' => String,
        'settings' => Array[Aws_api_gateway_method_settings_settings_31],
        'stage_name' => String
      }
    },
    Aws_api_gateway_method_settingsHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_method_settings_settings_31 => {
      attributes => {
        'cache_data_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'cache_ttl_in_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'caching_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'data_trace_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'logging_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'metrics_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'require_authorization_for_cache_control' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'throttling_burst_limit' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'throttling_rate_limit' => {
          'type' => Optional[Float],
          'value' => undef
        },
        'unauthorized_cache_control_header_strategy' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_model => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['content_type', 'name', 'rest_api_id'],
          'providedAttributes' => ['description', 'schema']
        }
      },
      attributes => {
        'aws_api_gateway_model_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'content_type' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'rest_api_id' => String,
        'schema' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_modelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_request_validator => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['rest_api_id'],
          'providedAttributes' => ['validate_request_body', 'validate_request_parameters']
        }
      },
      attributes => {
        'aws_api_gateway_request_validator_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'rest_api_id' => String,
        'validate_request_body' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'validate_request_parameters' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_request_validatorHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_resource => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['rest_api_id'],
          'providedAttributes' => ['path']
        }
      },
      attributes => {
        'aws_api_gateway_resource_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'parent_id' => String,
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path_part' => String,
        'rest_api_id' => String
      }
    },
    Aws_api_gateway_resourceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_rest_api => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['api_key_source', 'binary_media_types', 'body', 'created_date', 'description', 'endpoint_configuration', 'execution_arn', 'minimum_compression_size', 'policy', 'root_resource_id']
        }
      },
      attributes => {
        'aws_api_gateway_rest_api_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'api_key_source' => {
          'type' => Optional[String],
          'value' => undef
        },
        'binary_media_types' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'body' => {
          'type' => Optional[String],
          'value' => undef
        },
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint_configuration' => {
          'type' => Optional[Array[Aws_api_gateway_rest_api_endpoint_configuration_32]],
          'value' => undef
        },
        'execution_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'minimum_compression_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => String,
        'policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_resource_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_rest_apiHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_rest_api_endpoint_configuration_32 => {
      attributes => {
        'types' => Array[String]
      }
    },
    Aws_api_gateway_stage => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['rest_api_id', 'stage_name'],
          'providedAttributes' => ['access_log_settings', 'cache_cluster_enabled', 'cache_cluster_size', 'client_certificate_id', 'description', 'documentation_version', 'execution_arn', 'invoke_url', 'tags', 'variables', 'xray_tracing_enabled']
        }
      },
      attributes => {
        'aws_api_gateway_stage_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'access_log_settings' => {
          'type' => Optional[Array[Aws_api_gateway_stage_access_log_settings_33]],
          'value' => undef
        },
        'cache_cluster_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'cache_cluster_size' => {
          'type' => Optional[String],
          'value' => undef
        },
        'client_certificate_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deployment_id' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'documentation_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'execution_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'invoke_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'rest_api_id' => String,
        'stage_name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'variables' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'xray_tracing_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_stageHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_stage_access_log_settings_33 => {
      attributes => {
        'destination_arn' => String,
        'format' => String
      }
    },
    Aws_api_gateway_usage_plan => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['api_stages', 'description', 'product_code', 'quota_settings', 'throttle_settings']
        }
      },
      attributes => {
        'aws_api_gateway_usage_plan_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'api_stages' => {
          'type' => Optional[Array[Aws_api_gateway_usage_plan_api_stages_34]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'product_code' => {
          'type' => Optional[String],
          'value' => undef
        },
        'quota_settings' => {
          'type' => Optional[Array[Aws_api_gateway_usage_plan_quota_settings_35]],
          'value' => undef
        },
        'throttle_settings' => {
          'type' => Optional[Array[Aws_api_gateway_usage_plan_throttle_settings_36]],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_usage_planHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_usage_plan_api_stages_34 => {
      attributes => {
        'api_id' => String,
        'stage' => String
      }
    },
    Aws_api_gateway_usage_plan_key => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['key_id', 'key_type', 'usage_plan_id'],
          'providedAttributes' => ['name', 'value']
        }
      },
      attributes => {
        'aws_api_gateway_usage_plan_key_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'key_id' => String,
        'key_type' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'usage_plan_id' => String,
        'value' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_usage_plan_keyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_api_gateway_usage_plan_quota_settings_35 => {
      attributes => {
        'limit' => Integer,
        'offset' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'period' => String
      }
    },
    Aws_api_gateway_usage_plan_throttle_settings_36 => {
      attributes => {
        'burst_limit' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'rate_limit' => {
          'type' => Optional[Float],
          'value' => undef
        }
      }
    },
    Aws_api_gateway_vpc_link => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['target_arns'],
          'providedAttributes' => ['description']
        }
      },
      attributes => {
        'aws_api_gateway_vpc_link_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'target_arns' => Array[String]
      }
    },
    Aws_api_gateway_vpc_linkHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_app_cookie_stickiness_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cookie_name', 'lb_port', 'load_balancer', 'name']
        }
      },
      attributes => {
        'aws_app_cookie_stickiness_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cookie_name' => String,
        'lb_port' => Integer,
        'load_balancer' => String,
        'name' => String
      }
    },
    Aws_app_cookie_stickiness_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appautoscaling_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['alarms', 'name', 'scalable_dimension', 'service_namespace'],
          'providedAttributes' => ['adjustment_type', 'alarms', 'arn', 'cooldown', 'metric_aggregation_type', 'min_adjustment_magnitude', 'policy_type', 'step_adjustment', 'step_scaling_policy_configuration', 'target_tracking_scaling_policy_configuration']
        }
      },
      attributes => {
        'aws_appautoscaling_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'adjustment_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'alarms' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cooldown' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'metric_aggregation_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'min_adjustment_magnitude' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => String,
        'policy_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_id' => String,
        'scalable_dimension' => String,
        'service_namespace' => String,
        'step_adjustment' => {
          'type' => Optional[Array[Aws_appautoscaling_policy_step_adjustment_37]],
          'value' => undef
        },
        'step_scaling_policy_configuration' => {
          'type' => Optional[Array[Aws_appautoscaling_policy_step_scaling_policy_configuration_38]],
          'value' => undef
        },
        'target_tracking_scaling_policy_configuration' => {
          'type' => Optional[Array[Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40]],
          'value' => undef
        }
      }
    },
    Aws_appautoscaling_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appautoscaling_policy_step_adjustment_37 => {
      attributes => {
        'metric_interval_lower_bound' => {
          'type' => Optional[String],
          'value' => undef
        },
        'metric_interval_upper_bound' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scaling_adjustment' => Integer
      }
    },
    Aws_appautoscaling_policy_step_scaling_policy_configuration_38 => {
      attributes => {
        'adjustment_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cooldown' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'metric_aggregation_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'min_adjustment_magnitude' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'step_adjustment' => {
          'type' => Optional[Array[Aws_appautoscaling_policy_step_scaling_policy_configuration_38_step_adjustment_39]],
          'value' => undef
        }
      }
    },
    Aws_appautoscaling_policy_step_scaling_policy_configuration_38_step_adjustment_39 => {
      attributes => {
        'metric_interval_lower_bound' => {
          'type' => Optional[String],
          'value' => undef
        },
        'metric_interval_upper_bound' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scaling_adjustment' => Integer
      }
    },
    Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40 => {
      attributes => {
        'customized_metric_specification' => {
          'type' => Optional[Array[Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41]],
          'value' => undef
        },
        'disable_scale_in' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'predefined_metric_specification' => {
          'type' => Optional[Array[Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_predefined_metric_specification_43]],
          'value' => undef
        },
        'scale_in_cooldown' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'scale_out_cooldown' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'target_value' => Float
      }
    },
    Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41 => {
      attributes => {
        'dimensions' => {
          'type' => Optional[Array[Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41_dimensions_42]],
          'value' => undef
        },
        'metric_name' => String,
        'namespace' => String,
        'statistic' => String,
        'unit' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41_dimensions_42 => {
      attributes => {
        'name' => String,
        'value' => String
      }
    },
    Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_predefined_metric_specification_43 => {
      attributes => {
        'predefined_metric_type' => String,
        'resource_label' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_appautoscaling_scheduled_action => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['end_time', 'name', 'resource_id', 'scalable_dimension', 'scalable_target_action', 'schedule', 'service_namespace', 'start_time'],
          'providedAttributes' => ['arn', 'end_time', 'scalable_dimension', 'scalable_target_action', 'schedule', 'start_time']
        }
      },
      attributes => {
        'aws_appautoscaling_scheduled_action_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'end_time' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'resource_id' => String,
        'scalable_dimension' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scalable_target_action' => {
          'type' => Optional[Array[Aws_appautoscaling_scheduled_action_scalable_target_action_44]],
          'value' => undef
        },
        'schedule' => {
          'type' => Optional[String],
          'value' => undef
        },
        'service_namespace' => String,
        'start_time' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_appautoscaling_scheduled_actionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appautoscaling_scheduled_action_scalable_target_action_44 => {
      attributes => {
        'max_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'min_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_appautoscaling_target => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['resource_id', 'scalable_dimension', 'service_namespace'],
          'providedAttributes' => ['role_arn']
        }
      },
      attributes => {
        'aws_appautoscaling_target_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'max_capacity' => Integer,
        'min_capacity' => Integer,
        'resource_id' => String,
        'role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scalable_dimension' => String,
        'service_namespace' => String
      }
    },
    Aws_appautoscaling_targetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appmesh_mesh => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'created_date', 'last_updated_date']
        }
      },
      attributes => {
        'aws_appmesh_mesh_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'last_updated_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_appmesh_meshHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appmesh_route => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['mesh_name', 'name', 'virtual_router_name'],
          'providedAttributes' => ['arn', 'created_date', 'last_updated_date']
        }
      },
      attributes => {
        'aws_appmesh_route_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'last_updated_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'mesh_name' => String,
        'name' => String,
        'spec' => Array[Aws_appmesh_route_spec_45],
        'virtual_router_name' => String
      }
    },
    Aws_appmesh_routeHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appmesh_route_spec_45 => {
      attributes => {
        'http_route' => {
          'type' => Optional[Array[Aws_appmesh_route_spec_45_http_route_46]],
          'value' => undef
        }
      }
    },
    Aws_appmesh_route_spec_45_http_route_46 => {
      attributes => {
        'action' => Array[Aws_appmesh_route_spec_45_http_route_46_action_47],
        'match' => Array[Aws_appmesh_route_spec_45_http_route_46_match_49]
      }
    },
    Aws_appmesh_route_spec_45_http_route_46_action_47 => {
      attributes => {
        'weighted_target' => Array[Aws_appmesh_route_spec_45_http_route_46_action_47_weighted_target_48]
      }
    },
    Aws_appmesh_route_spec_45_http_route_46_action_47_weighted_target_48 => {
      attributes => {
        'virtual_node' => String,
        'weight' => Integer
      }
    },
    Aws_appmesh_route_spec_45_http_route_46_match_49 => {
      attributes => {
        'prefix' => String
      }
    },
    Aws_appmesh_virtual_node => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['mesh_name', 'name'],
          'providedAttributes' => ['arn', 'created_date', 'last_updated_date']
        }
      },
      attributes => {
        'aws_appmesh_virtual_node_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'last_updated_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'mesh_name' => String,
        'name' => String,
        'spec' => Array[Aws_appmesh_virtual_node_spec_50]
      }
    },
    Aws_appmesh_virtual_nodeHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appmesh_virtual_node_spec_50 => {
      attributes => {
        'backends' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'listener' => {
          'type' => Optional[Array[Aws_appmesh_virtual_node_spec_50_listener_51]],
          'value' => undef
        },
        'service_discovery' => {
          'type' => Optional[Array[Aws_appmesh_virtual_node_spec_50_service_discovery_53]],
          'value' => undef
        }
      }
    },
    Aws_appmesh_virtual_node_spec_50_listener_51 => {
      attributes => {
        'port_mapping' => Array[Aws_appmesh_virtual_node_spec_50_listener_51_port_mapping_52]
      }
    },
    Aws_appmesh_virtual_node_spec_50_listener_51_port_mapping_52 => {
      attributes => {
        'port' => Integer,
        'protocol' => String
      }
    },
    Aws_appmesh_virtual_node_spec_50_service_discovery_53 => {
      attributes => {
        'dns' => Array[Aws_appmesh_virtual_node_spec_50_service_discovery_53_dns_54]
      }
    },
    Aws_appmesh_virtual_node_spec_50_service_discovery_53_dns_54 => {
      attributes => {
        'service_name' => String
      }
    },
    Aws_appmesh_virtual_router => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['mesh_name', 'name'],
          'providedAttributes' => ['arn', 'created_date', 'last_updated_date']
        }
      },
      attributes => {
        'aws_appmesh_virtual_router_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'last_updated_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'mesh_name' => String,
        'name' => String,
        'spec' => Array[Aws_appmesh_virtual_router_spec_55]
      }
    },
    Aws_appmesh_virtual_routerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appmesh_virtual_router_spec_55 => {
      attributes => {
        'service_names' => Array[String]
      }
    },
    Aws_appsync_api_key => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['description', 'expires', 'key']
        }
      },
      attributes => {
        'aws_appsync_api_key_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'api_id' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'expires' => {
          'type' => Optional[String],
          'value' => undef
        },
        'key' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_appsync_api_keyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appsync_datasource => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'description', 'dynamodb_config', 'elasticsearch_config', 'http_config', 'lambda_config', 'service_role_arn']
        }
      },
      attributes => {
        'aws_appsync_datasource_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'api_id' => String,
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dynamodb_config' => {
          'type' => Optional[Array[Aws_appsync_datasource_dynamodb_config_56]],
          'value' => undef
        },
        'elasticsearch_config' => {
          'type' => Optional[Array[Aws_appsync_datasource_elasticsearch_config_57]],
          'value' => undef
        },
        'http_config' => {
          'type' => Optional[Array[Aws_appsync_datasource_http_config_58]],
          'value' => undef
        },
        'lambda_config' => {
          'type' => Optional[Array[Aws_appsync_datasource_lambda_config_59]],
          'value' => undef
        },
        'name' => String,
        'service_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_appsync_datasourceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appsync_datasource_dynamodb_config_56 => {
      attributes => {
        'region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'table_name' => String,
        'use_caller_credentials' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_appsync_datasource_elasticsearch_config_57 => {
      attributes => {
        'endpoint' => String,
        'region' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_appsync_datasource_http_config_58 => {
      attributes => {
        'endpoint' => String
      }
    },
    Aws_appsync_datasource_lambda_config_59 => {
      attributes => {
        'function_arn' => String
      }
    },
    Aws_appsync_graphql_api => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'log_config', 'openid_connect_config', 'uris', 'user_pool_config']
        }
      },
      attributes => {
        'aws_appsync_graphql_api_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'authentication_type' => String,
        'log_config' => {
          'type' => Optional[Array[Aws_appsync_graphql_api_log_config_60]],
          'value' => undef
        },
        'name' => String,
        'openid_connect_config' => {
          'type' => Optional[Array[Aws_appsync_graphql_api_openid_connect_config_61]],
          'value' => undef
        },
        'uris' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'user_pool_config' => {
          'type' => Optional[Array[Aws_appsync_graphql_api_user_pool_config_62]],
          'value' => undef
        }
      }
    },
    Aws_appsync_graphql_apiHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_appsync_graphql_api_log_config_60 => {
      attributes => {
        'cloudwatch_logs_role_arn' => String,
        'field_log_level' => String
      }
    },
    Aws_appsync_graphql_api_openid_connect_config_61 => {
      attributes => {
        'auth_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'client_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iat_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'issuer' => String
      }
    },
    Aws_appsync_graphql_api_user_pool_config_62 => {
      attributes => {
        'app_id_client_regex' => {
          'type' => Optional[String],
          'value' => undef
        },
        'aws_region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_action' => String,
        'user_pool_id' => String
      }
    },
    Aws_athena_database => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket', 'name'],
          'providedAttributes' => ['encryption_configuration', 'force_destroy']
        }
      },
      attributes => {
        'aws_athena_database_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'bucket' => String,
        'encryption_configuration' => {
          'type' => Optional[Array[Aws_athena_database_encryption_configuration_63]],
          'value' => undef
        },
        'force_destroy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_athena_databaseHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_athena_database_encryption_configuration_63 => {
      attributes => {
        'encryption_option' => String,
        'kms_key' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_athena_named_query => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['database', 'description', 'name', 'query'],
          'providedAttributes' => ['description']
        }
      },
      attributes => {
        'aws_athena_named_query_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'database' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'query' => String
      }
    },
    Aws_athena_named_queryHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_autoscaling_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['alb_target_group_arn', 'autoscaling_group_name', 'elb'],
          'providedAttributes' => ['alb_target_group_arn', 'elb']
        }
      },
      attributes => {
        'aws_autoscaling_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'alb_target_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'autoscaling_group_name' => String,
        'elb' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_autoscaling_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'availability_zones', 'default_cooldown', 'desired_capacity', 'enabled_metrics', 'force_delete', 'health_check_grace_period', 'health_check_type', 'initial_lifecycle_hook', 'launch_configuration', 'launch_template', 'load_balancers', 'metrics_granularity', 'min_elb_capacity', 'mixed_instances_policy', 'name', 'name_prefix', 'placement_group', 'protect_from_scale_in', 'service_linked_role_arn', 'suspended_processes', 'tag', 'tags', 'target_group_arns', 'termination_policies', 'vpc_zone_identifier', 'wait_for_capacity_timeout', 'wait_for_elb_capacity']
        }
      },
      attributes => {
        'aws_autoscaling_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'default_cooldown' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'desired_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'enabled_metrics' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'force_delete' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'health_check_grace_period' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'health_check_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'initial_lifecycle_hook' => {
          'type' => Optional[Array[Aws_autoscaling_group_initial_lifecycle_hook_64]],
          'value' => undef
        },
        'launch_configuration' => {
          'type' => Optional[String],
          'value' => undef
        },
        'launch_template' => {
          'type' => Optional[Array[Aws_autoscaling_group_launch_template_65]],
          'value' => undef
        },
        'load_balancers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'max_size' => Integer,
        'metrics_granularity' => {
          'type' => Optional[String],
          'value' => undef
        },
        'min_elb_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'min_size' => Integer,
        'mixed_instances_policy' => {
          'type' => Optional[Array[Aws_autoscaling_group_mixed_instances_policy_66]],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'placement_group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protect_from_scale_in' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'service_linked_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'suspended_processes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tag' => {
          'type' => Optional[Array[Aws_autoscaling_group_tag_71]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Array[Hash[String, String]]],
          'value' => undef
        },
        'target_group_arns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'termination_policies' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'vpc_zone_identifier' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'wait_for_capacity_timeout' => {
          'type' => Optional[String],
          'value' => undef
        },
        'wait_for_elb_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_autoscaling_group_initial_lifecycle_hook_64 => {
      attributes => {
        'default_result' => {
          'type' => Optional[String],
          'value' => undef
        },
        'heartbeat_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'lifecycle_transition' => String,
        'name' => String,
        'notification_metadata' => {
          'type' => Optional[String],
          'value' => undef
        },
        'notification_target_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_group_launch_template_65 => {
      attributes => {
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'version' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_group_mixed_instances_policy_66 => {
      attributes => {
        'instances_distribution' => {
          'type' => Optional[Array[Aws_autoscaling_group_mixed_instances_policy_66_instances_distribution_67]],
          'value' => undef
        },
        'launch_template' => Array[Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68]
      }
    },
    Aws_autoscaling_group_mixed_instances_policy_66_instances_distribution_67 => {
      attributes => {
        'on_demand_allocation_strategy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'on_demand_base_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'on_demand_percentage_above_base_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'spot_allocation_strategy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'spot_instance_pools' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'spot_max_price' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68 => {
      attributes => {
        'launch_template_specification' => Array[Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_launch_template_specification_69],
        'override' => {
          'type' => Optional[Array[Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_override_70]],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_launch_template_specification_69 => {
      attributes => {
        'launch_template_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'launch_template_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'version' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_override_70 => {
      attributes => {
        'instance_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_group_tag_71 => {
      attributes => {
        'key' => String,
        'propagate_at_launch' => Boolean,
        'value' => String
      }
    },
    Aws_autoscaling_lifecycle_hook => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['default_result', 'heartbeat_timeout', 'notification_metadata', 'notification_target_arn', 'role_arn']
        }
      },
      attributes => {
        'aws_autoscaling_lifecycle_hook_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'autoscaling_group_name' => String,
        'default_result' => {
          'type' => Optional[String],
          'value' => undef
        },
        'heartbeat_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'lifecycle_transition' => String,
        'name' => String,
        'notification_metadata' => {
          'type' => Optional[String],
          'value' => undef
        },
        'notification_target_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_lifecycle_hookHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_autoscaling_notification => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['topic_arn']
        }
      },
      attributes => {
        'aws_autoscaling_notification_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'group_names' => Array[String],
        'notifications' => Array[String],
        'topic_arn' => String
      }
    },
    Aws_autoscaling_notificationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_autoscaling_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['autoscaling_group_name', 'name'],
          'providedAttributes' => ['adjustment_type', 'arn', 'cooldown', 'estimated_instance_warmup', 'metric_aggregation_type', 'min_adjustment_magnitude', 'min_adjustment_step', 'policy_type', 'scaling_adjustment', 'step_adjustment', 'target_tracking_configuration']
        }
      },
      attributes => {
        'aws_autoscaling_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'adjustment_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'autoscaling_group_name' => String,
        'cooldown' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'estimated_instance_warmup' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'metric_aggregation_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'min_adjustment_magnitude' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'min_adjustment_step' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => String,
        'policy_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scaling_adjustment' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'step_adjustment' => {
          'type' => Optional[Array[Aws_autoscaling_policy_step_adjustment_72]],
          'value' => undef
        },
        'target_tracking_configuration' => {
          'type' => Optional[Array[Aws_autoscaling_policy_target_tracking_configuration_73]],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_autoscaling_policy_step_adjustment_72 => {
      attributes => {
        'metric_interval_lower_bound' => {
          'type' => Optional[String],
          'value' => undef
        },
        'metric_interval_upper_bound' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scaling_adjustment' => Integer
      }
    },
    Aws_autoscaling_policy_target_tracking_configuration_73 => {
      attributes => {
        'customized_metric_specification' => {
          'type' => Optional[Array[Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74]],
          'value' => undef
        },
        'disable_scale_in' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'predefined_metric_specification' => {
          'type' => Optional[Array[Aws_autoscaling_policy_target_tracking_configuration_73_predefined_metric_specification_76]],
          'value' => undef
        },
        'target_value' => Float
      }
    },
    Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74 => {
      attributes => {
        'metric_dimension' => {
          'type' => Optional[Array[Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74_metric_dimension_75]],
          'value' => undef
        },
        'metric_name' => String,
        'namespace' => String,
        'statistic' => String,
        'unit' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74_metric_dimension_75 => {
      attributes => {
        'name' => String,
        'value' => String
      }
    },
    Aws_autoscaling_policy_target_tracking_configuration_73_predefined_metric_specification_76 => {
      attributes => {
        'predefined_metric_type' => String,
        'resource_label' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_schedule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['autoscaling_group_name', 'scheduled_action_name'],
          'providedAttributes' => ['arn', 'desired_capacity', 'end_time', 'max_size', 'min_size', 'recurrence', 'start_time']
        }
      },
      attributes => {
        'aws_autoscaling_schedule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'autoscaling_group_name' => String,
        'desired_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'end_time' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'min_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'recurrence' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scheduled_action_name' => String,
        'start_time' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_autoscaling_scheduleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_batch_compute_environment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['compute_environment_name', 'type'],
          'providedAttributes' => ['arn', 'compute_resources', 'ecc_cluster_arn', 'ecs_cluster_arn', 'state', 'status', 'status_reason']
        }
      },
      attributes => {
        'aws_batch_compute_environment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'compute_environment_name' => String,
        'compute_resources' => {
          'type' => Optional[Array[Aws_batch_compute_environment_compute_resources_77]],
          'value' => undef
        },
        'ecc_cluster_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ecs_cluster_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'service_role' => String,
        'state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_reason' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_batch_compute_environmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_batch_compute_environment_compute_resources_77 => {
      attributes => {
        'bid_percentage' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'desired_vcpus' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ec2_key_pair' => {
          'type' => Optional[String],
          'value' => undef
        },
        'image_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_role' => String,
        'instance_type' => Array[String],
        'max_vcpus' => Integer,
        'min_vcpus' => Integer,
        'security_group_ids' => Array[String],
        'spot_iam_fleet_role' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnets' => Array[String],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_batch_job_definition => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['container_properties', 'name', 'parameters', 'retry_strategy', 'timeout', 'type'],
          'providedAttributes' => ['arn', 'container_properties', 'parameters', 'retry_strategy', 'revision', 'timeout']
        }
      },
      attributes => {
        'aws_batch_job_definition_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'container_properties' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'retry_strategy' => {
          'type' => Optional[Array[Aws_batch_job_definition_retry_strategy_78]],
          'value' => undef
        },
        'revision' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'timeout' => {
          'type' => Optional[Array[Aws_batch_job_definition_timeout_79]],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_batch_job_definitionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_batch_job_definition_retry_strategy_78 => {
      attributes => {
        'attempts' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_batch_job_definition_timeout_79 => {
      attributes => {
        'attempt_duration_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_batch_job_queue => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_batch_job_queue_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'compute_environments' => Array[String],
        'name' => String,
        'priority' => Integer,
        'state' => String
      }
    },
    Aws_batch_job_queueHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_budgets_budget => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['account_id', 'name', 'name_prefix'],
          'providedAttributes' => ['account_id', 'cost_filters', 'cost_types', 'name', 'name_prefix', 'time_period_end']
        }
      },
      attributes => {
        'aws_budgets_budget_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'account_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'budget_type' => String,
        'cost_filters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'cost_types' => {
          'type' => Optional[Array[Aws_budgets_budget_cost_types_80]],
          'value' => undef
        },
        'limit_amount' => String,
        'limit_unit' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'time_period_end' => {
          'type' => Optional[String],
          'value' => undef
        },
        'time_period_start' => String,
        'time_unit' => String
      }
    },
    Aws_budgets_budgetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_budgets_budget_cost_types_80 => {
      attributes => {
        'include_credit' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'include_discount' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'include_other_subscription' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'include_recurring' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'include_refund' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'include_subscription' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'include_support' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'include_tax' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'include_upfront' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'use_amortized' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'use_blended' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_cloud9_environment_ec2 => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['automatic_stop_time_minutes', 'instance_type', 'owner_arn', 'subnet_id'],
          'providedAttributes' => ['arn', 'automatic_stop_time_minutes', 'description', 'owner_arn', 'subnet_id', 'type']
        }
      },
      attributes => {
        'aws_cloud9_environment_ec2_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'automatic_stop_time_minutes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_type' => String,
        'name' => String,
        'owner_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloud9_environment_ec2Handler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudformation_stack => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['disable_rollback', 'name', 'on_failure', 'timeout_in_minutes'],
          'providedAttributes' => ['capabilities', 'disable_rollback', 'iam_role_arn', 'notification_arns', 'on_failure', 'outputs', 'parameters', 'policy_body', 'policy_url', 'tags', 'template_body', 'template_url', 'timeout_in_minutes']
        }
      },
      attributes => {
        'aws_cloudformation_stack_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'capabilities' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'disable_rollback' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iam_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'notification_arns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'on_failure' => {
          'type' => Optional[String],
          'value' => undef
        },
        'outputs' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'policy_body' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'template_body' => {
          'type' => Optional[String],
          'value' => undef
        },
        'template_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'timeout_in_minutes' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_cloudformation_stackHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudfront_distribution => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['active_trusted_signers', 'aliases', 'arn', 'cache_behavior', 'caller_reference', 'comment', 'custom_error_response', 'default_root_object', 'domain_name', 'etag', 'hosted_zone_id', 'http_version', 'in_progress_validation_batches', 'is_ipv6_enabled', 'last_modified_time', 'logging_config', 'ordered_cache_behavior', 'price_class', 'retain_on_delete', 'status', 'tags', 'web_acl_id']
        }
      },
      attributes => {
        'aws_cloudfront_distribution_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'active_trusted_signers' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'aliases' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cache_behavior' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_cache_behavior_81]],
          'value' => undef
        },
        'caller_reference' => {
          'type' => Optional[String],
          'value' => undef
        },
        'comment' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_error_response' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_custom_error_response_85]],
          'value' => undef
        },
        'default_cache_behavior' => Array[Aws_cloudfront_distribution_default_cache_behavior_86],
        'default_root_object' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => Boolean,
        'etag' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hosted_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'http_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'in_progress_validation_batches' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'is_ipv6_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'last_modified_time' => {
          'type' => Optional[String],
          'value' => undef
        },
        'logging_config' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_logging_config_90]],
          'value' => undef
        },
        'ordered_cache_behavior' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_ordered_cache_behavior_91]],
          'value' => undef
        },
        'origin' => Array[Aws_cloudfront_distribution_origin_95],
        'price_class' => {
          'type' => Optional[String],
          'value' => undef
        },
        'restrictions' => Array[Aws_cloudfront_distribution_restrictions_99],
        'retain_on_delete' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'viewer_certificate' => Array[Aws_cloudfront_distribution_viewer_certificate_101],
        'web_acl_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distributionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudfront_distribution_cache_behavior_81 => {
      attributes => {
        'allowed_methods' => Array[String],
        'cached_methods' => Array[String],
        'compress' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'default_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'field_level_encryption_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'forwarded_values' => Array[Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82],
        'lambda_function_association' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_cache_behavior_81_lambda_function_association_84]],
          'value' => undef
        },
        'max_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'min_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'path_pattern' => String,
        'smooth_streaming' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'target_origin_id' => String,
        'trusted_signers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'viewer_protocol_policy' => String
      }
    },
    Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82 => {
      attributes => {
        'cookies' => Array[Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82_cookies_83],
        'headers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'query_string' => Boolean,
        'query_string_cache_keys' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82_cookies_83 => {
      attributes => {
        'forward' => String,
        'whitelisted_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distribution_cache_behavior_81_lambda_function_association_84 => {
      attributes => {
        'event_type' => String,
        'include_body' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'lambda_arn' => String
      }
    },
    Aws_cloudfront_distribution_custom_error_response_85 => {
      attributes => {
        'error_caching_min_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'error_code' => Integer,
        'response_code' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'response_page_path' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distribution_default_cache_behavior_86 => {
      attributes => {
        'allowed_methods' => Array[String],
        'cached_methods' => Array[String],
        'compress' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'default_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'field_level_encryption_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'forwarded_values' => Array[Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87],
        'lambda_function_association' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_default_cache_behavior_86_lambda_function_association_89]],
          'value' => undef
        },
        'max_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'min_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'smooth_streaming' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'target_origin_id' => String,
        'trusted_signers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'viewer_protocol_policy' => String
      }
    },
    Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87 => {
      attributes => {
        'cookies' => Array[Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87_cookies_88],
        'headers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'query_string' => Boolean,
        'query_string_cache_keys' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87_cookies_88 => {
      attributes => {
        'forward' => String,
        'whitelisted_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distribution_default_cache_behavior_86_lambda_function_association_89 => {
      attributes => {
        'event_type' => String,
        'include_body' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'lambda_arn' => String
      }
    },
    Aws_cloudfront_distribution_logging_config_90 => {
      attributes => {
        'bucket' => String,
        'include_cookies' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distribution_ordered_cache_behavior_91 => {
      attributes => {
        'allowed_methods' => Array[String],
        'cached_methods' => Array[String],
        'compress' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'default_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'field_level_encryption_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'forwarded_values' => Array[Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92],
        'lambda_function_association' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_ordered_cache_behavior_91_lambda_function_association_94]],
          'value' => undef
        },
        'max_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'min_ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'path_pattern' => String,
        'smooth_streaming' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'target_origin_id' => String,
        'trusted_signers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'viewer_protocol_policy' => String
      }
    },
    Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92 => {
      attributes => {
        'cookies' => Array[Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92_cookies_93],
        'headers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'query_string' => Boolean,
        'query_string_cache_keys' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92_cookies_93 => {
      attributes => {
        'forward' => String,
        'whitelisted_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distribution_ordered_cache_behavior_91_lambda_function_association_94 => {
      attributes => {
        'event_type' => String,
        'include_body' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'lambda_arn' => String
      }
    },
    Aws_cloudfront_distribution_origin_95 => {
      attributes => {
        'custom_header' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_origin_95_custom_header_96]],
          'value' => undef
        },
        'custom_origin_config' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_origin_95_custom_origin_config_97]],
          'value' => undef
        },
        'domain_name' => String,
        'origin_id' => String,
        'origin_path' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_origin_config' => {
          'type' => Optional[Array[Aws_cloudfront_distribution_origin_95_s3_origin_config_98]],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_distribution_origin_95_custom_header_96 => {
      attributes => {
        'name' => String,
        'value' => String
      }
    },
    Aws_cloudfront_distribution_origin_95_custom_origin_config_97 => {
      attributes => {
        'http_port' => Integer,
        'https_port' => Integer,
        'origin_keepalive_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'origin_protocol_policy' => String,
        'origin_read_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'origin_ssl_protocols' => Array[String]
      }
    },
    Aws_cloudfront_distribution_origin_95_s3_origin_config_98 => {
      attributes => {
        'origin_access_identity' => String
      }
    },
    Aws_cloudfront_distribution_restrictions_99 => {
      attributes => {
        'geo_restriction' => Array[Aws_cloudfront_distribution_restrictions_99_geo_restriction_100]
      }
    },
    Aws_cloudfront_distribution_restrictions_99_geo_restriction_100 => {
      attributes => {
        'locations' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'restriction_type' => String
      }
    },
    Aws_cloudfront_distribution_viewer_certificate_101 => {
      attributes => {
        'acm_certificate_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloudfront_default_certificate' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iam_certificate_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'minimum_protocol_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssl_support_method' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_origin_access_identity => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['caller_reference', 'cloudfront_access_identity_path', 'comment', 'etag', 'iam_arn', 's3_canonical_user_id']
        }
      },
      attributes => {
        'aws_cloudfront_origin_access_identity_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'caller_reference' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloudfront_access_identity_path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'comment' => {
          'type' => Optional[String],
          'value' => undef
        },
        'etag' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_canonical_user_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_origin_access_identityHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudfront_public_key => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['encoded_key', 'name', 'name_prefix'],
          'providedAttributes' => ['caller_reference', 'comment', 'etag', 'name', 'name_prefix']
        }
      },
      attributes => {
        'aws_cloudfront_public_key_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'caller_reference' => {
          'type' => Optional[String],
          'value' => undef
        },
        'comment' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encoded_key' => String,
        'etag' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudfront_public_keyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudhsm_v2_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['hsm_type', 'source_backup_identifier', 'subnet_ids'],
          'providedAttributes' => ['cluster_certificates', 'cluster_id', 'cluster_state', 'security_group_id', 'source_backup_identifier', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_cloudhsm_v2_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_certificates' => {
          'type' => Optional[Array[Aws_cloudhsm_v2_cluster_cluster_certificates_102]],
          'value' => undef
        },
        'cluster_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hsm_type' => String,
        'security_group_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_backup_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_ids' => Array[String],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudhsm_v2_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudhsm_v2_cluster_cluster_certificates_102 => {
      attributes => {
        'aws_hardware_certificate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_certificate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_csr' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hsm_certificate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'manufacturer_hardware_certificate' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudhsm_v2_hsm => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'cluster_id', 'ip_address', 'subnet_id'],
          'providedAttributes' => ['availability_zone', 'hsm_eni_id', 'hsm_id', 'hsm_state', 'ip_address', 'subnet_id']
        }
      },
      attributes => {
        'aws_cloudhsm_v2_hsm_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_id' => String,
        'hsm_eni_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hsm_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hsm_state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudhsm_v2_hsmHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudtrail => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'cloud_watch_logs_group_arn', 'cloud_watch_logs_role_arn', 'enable_log_file_validation', 'enable_logging', 'event_selector', 'home_region', 'include_global_service_events', 'is_multi_region_trail', 'is_organization_trail', 'kms_key_id', 's3_key_prefix', 'sns_topic_name', 'tags']
        }
      },
      attributes => {
        'aws_cloudtrail_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloud_watch_logs_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloud_watch_logs_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_log_file_validation' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_logging' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'event_selector' => {
          'type' => Optional[Array[Aws_cloudtrail_event_selector_103]],
          'value' => undef
        },
        'home_region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'include_global_service_events' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'is_multi_region_trail' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'is_organization_trail' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        's3_bucket_name' => String,
        's3_key_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sns_topic_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_cloudtrailHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudtrail_event_selector_103 => {
      attributes => {
        'data_resource' => {
          'type' => Optional[Array[Aws_cloudtrail_event_selector_103_data_resource_104]],
          'value' => undef
        },
        'include_management_events' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'read_write_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudtrail_event_selector_103_data_resource_104 => {
      attributes => {
        'type' => String,
        'values' => Array[String]
      }
    },
    Aws_cloudwatch_dashboard => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['dashboard_arn']
        }
      },
      attributes => {
        'aws_cloudwatch_dashboard_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'dashboard_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dashboard_body' => String,
        'dashboard_name' => String
      }
    },
    Aws_cloudwatch_dashboardHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_event_permission => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['statement_id'],
          'providedAttributes' => ['action', 'condition']
        }
      },
      attributes => {
        'aws_cloudwatch_event_permission_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'action' => {
          'type' => Optional[String],
          'value' => undef
        },
        'condition' => {
          'type' => Optional[Array[Aws_cloudwatch_event_permission_condition_105]],
          'value' => undef
        },
        'principal' => String,
        'statement_id' => String
      }
    },
    Aws_cloudwatch_event_permissionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_event_permission_condition_105 => {
      attributes => {
        'key' => String,
        'type' => String,
        'value' => String
      }
    },
    Aws_cloudwatch_event_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'description', 'event_pattern', 'is_enabled', 'name', 'name_prefix', 'role_arn', 'schedule_expression']
        }
      },
      attributes => {
        'aws_cloudwatch_event_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'event_pattern' => {
          'type' => Optional[String],
          'value' => undef
        },
        'is_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'schedule_expression' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudwatch_event_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_event_target => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['rule', 'target_id'],
          'providedAttributes' => ['batch_target', 'ecs_target', 'input', 'input_path', 'input_transformer', 'kinesis_target', 'role_arn', 'run_command_targets', 'sqs_target', 'target_id']
        }
      },
      attributes => {
        'aws_cloudwatch_event_target_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => String,
        'batch_target' => {
          'type' => Optional[Array[Aws_cloudwatch_event_target_batch_target_106]],
          'value' => undef
        },
        'ecs_target' => {
          'type' => Optional[Array[Aws_cloudwatch_event_target_ecs_target_107]],
          'value' => undef
        },
        'input' => {
          'type' => Optional[String],
          'value' => undef
        },
        'input_path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'input_transformer' => {
          'type' => Optional[Array[Aws_cloudwatch_event_target_input_transformer_109]],
          'value' => undef
        },
        'kinesis_target' => {
          'type' => Optional[Array[Aws_cloudwatch_event_target_kinesis_target_110]],
          'value' => undef
        },
        'role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'rule' => String,
        'run_command_targets' => {
          'type' => Optional[Array[Aws_cloudwatch_event_target_run_command_targets_111]],
          'value' => undef
        },
        'sqs_target' => {
          'type' => Optional[Array[Aws_cloudwatch_event_target_sqs_target_112]],
          'value' => undef
        },
        'target_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudwatch_event_targetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_event_target_batch_target_106 => {
      attributes => {
        'array_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'job_attempts' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'job_definition' => String,
        'job_name' => String
      }
    },
    Aws_cloudwatch_event_target_ecs_target_107 => {
      attributes => {
        'group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'launch_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_configuration' => {
          'type' => Optional[Array[Aws_cloudwatch_event_target_ecs_target_107_network_configuration_108]],
          'value' => undef
        },
        'platform_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'task_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'task_definition_arn' => String
      }
    },
    Aws_cloudwatch_event_target_ecs_target_107_network_configuration_108 => {
      attributes => {
        'assign_public_ip' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnets' => Array[String]
      }
    },
    Aws_cloudwatch_event_target_input_transformer_109 => {
      attributes => {
        'input_paths' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'input_template' => String
      }
    },
    Aws_cloudwatch_event_target_kinesis_target_110 => {
      attributes => {
        'partition_key_path' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudwatch_event_target_run_command_targets_111 => {
      attributes => {
        'key' => String,
        'values' => Array[String]
      }
    },
    Aws_cloudwatch_event_target_sqs_target_112 => {
      attributes => {
        'message_group_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudwatch_log_destination => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_cloudwatch_log_destination_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'role_arn' => String,
        'target_arn' => String
      }
    },
    Aws_cloudwatch_log_destinationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_log_destination_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['destination_name']
        }
      },
      attributes => {
        'aws_cloudwatch_log_destination_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'access_policy' => String,
        'destination_name' => String
      }
    },
    Aws_cloudwatch_log_destination_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_log_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'kms_key_id', 'name', 'name_prefix', 'retention_in_days', 'tags']
        }
      },
      attributes => {
        'aws_cloudwatch_log_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'retention_in_days' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_cloudwatch_log_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_log_metric_filter => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['log_group_name', 'name']
        }
      },
      attributes => {
        'aws_cloudwatch_log_metric_filter_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'log_group_name' => String,
        'metric_transformation' => Array[Aws_cloudwatch_log_metric_filter_metric_transformation_113],
        'name' => String,
        'pattern' => String
      }
    },
    Aws_cloudwatch_log_metric_filterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_log_metric_filter_metric_transformation_113 => {
      attributes => {
        'default_value' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'namespace' => String,
        'value' => String
      }
    },
    Aws_cloudwatch_log_resource_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['policy_name']
        }
      },
      attributes => {
        'aws_cloudwatch_log_resource_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'policy_document' => String,
        'policy_name' => String
      }
    },
    Aws_cloudwatch_log_resource_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_log_stream => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['log_group_name', 'name'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_cloudwatch_log_stream_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_group_name' => String,
        'name' => String
      }
    },
    Aws_cloudwatch_log_streamHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_log_subscription_filter => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['destination_arn', 'log_group_name', 'name'],
          'providedAttributes' => ['distribution', 'role_arn']
        }
      },
      attributes => {
        'aws_cloudwatch_log_subscription_filter_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'destination_arn' => String,
        'distribution' => {
          'type' => Optional[String],
          'value' => undef
        },
        'filter_pattern' => String,
        'log_group_name' => String,
        'name' => String,
        'role_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudwatch_log_subscription_filterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cloudwatch_metric_alarm => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['alarm_name'],
          'providedAttributes' => ['actions_enabled', 'alarm_actions', 'alarm_description', 'arn', 'datapoints_to_alarm', 'dimensions', 'evaluate_low_sample_count_percentiles', 'extended_statistic', 'insufficient_data_actions', 'ok_actions', 'statistic', 'treat_missing_data', 'unit']
        }
      },
      attributes => {
        'aws_cloudwatch_metric_alarm_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'actions_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'alarm_actions' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'alarm_description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'alarm_name' => String,
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'comparison_operator' => String,
        'datapoints_to_alarm' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'dimensions' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'evaluate_low_sample_count_percentiles' => {
          'type' => Optional[String],
          'value' => undef
        },
        'evaluation_periods' => Integer,
        'extended_statistic' => {
          'type' => Optional[String],
          'value' => undef
        },
        'insufficient_data_actions' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'metric_name' => String,
        'namespace' => String,
        'ok_actions' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'period' => Integer,
        'statistic' => {
          'type' => Optional[String],
          'value' => undef
        },
        'threshold' => Float,
        'treat_missing_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'unit' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cloudwatch_metric_alarmHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codebuild_project => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'badge_enabled', 'badge_url', 'build_timeout', 'cache', 'description', 'encryption_key', 'secondary_artifacts', 'secondary_sources', 'tags', 'timeout', 'vpc_config']
        }
      },
      attributes => {
        'aws_codebuild_project_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'artifacts' => Array[Aws_codebuild_project_artifacts_114],
        'badge_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'badge_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'build_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cache' => {
          'type' => Optional[Array[Aws_codebuild_project_cache_115]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encryption_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'environment' => Array[Aws_codebuild_project_environment_116],
        'name' => String,
        'secondary_artifacts' => {
          'type' => Optional[Array[Aws_codebuild_project_secondary_artifacts_118]],
          'value' => undef
        },
        'secondary_sources' => {
          'type' => Optional[Array[Aws_codebuild_project_secondary_sources_119]],
          'value' => undef
        },
        'service_role' => String,
        'source' => Array[Aws_codebuild_project_source_121],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'vpc_config' => {
          'type' => Optional[Array[Aws_codebuild_project_vpc_config_123]],
          'value' => undef
        }
      }
    },
    Aws_codebuild_projectHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codebuild_project_artifacts_114 => {
      attributes => {
        'encryption_disabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'namespace_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'packaging' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_codebuild_project_cache_115 => {
      attributes => {
        'location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codebuild_project_environment_116 => {
      attributes => {
        'certificate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'compute_type' => String,
        'environment_variable' => {
          'type' => Optional[Array[Aws_codebuild_project_environment_116_environment_variable_117]],
          'value' => undef
        },
        'image' => String,
        'privileged_mode' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_codebuild_project_environment_116_environment_variable_117 => {
      attributes => {
        'name' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'value' => String
      }
    },
    Aws_codebuild_project_secondary_artifacts_118 => {
      attributes => {
        'artifact_identifier' => String,
        'encryption_disabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'namespace_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'packaging' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_codebuild_project_secondary_sources_119 => {
      attributes => {
        'auth' => {
          'type' => Optional[Array[Aws_codebuild_project_secondary_sources_119_auth_120]],
          'value' => undef
        },
        'buildspec' => {
          'type' => Optional[String],
          'value' => undef
        },
        'git_clone_depth' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'insecure_ssl' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'report_build_status' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'source_identifier' => String,
        'type' => String
      }
    },
    Aws_codebuild_project_secondary_sources_119_auth_120 => {
      attributes => {
        'resource' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_codebuild_project_source_121 => {
      attributes => {
        'auth' => {
          'type' => Optional[Array[Aws_codebuild_project_source_121_auth_122]],
          'value' => undef
        },
        'buildspec' => {
          'type' => Optional[String],
          'value' => undef
        },
        'git_clone_depth' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'insecure_ssl' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'report_build_status' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_codebuild_project_source_121_auth_122 => {
      attributes => {
        'resource' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_codebuild_project_vpc_config_123 => {
      attributes => {
        'security_group_ids' => Array[String],
        'subnets' => Array[String],
        'vpc_id' => String
      }
    },
    Aws_codebuild_webhook => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['project_name'],
          'providedAttributes' => ['branch_filter', 'payload_url', 'secret', 'url']
        }
      },
      attributes => {
        'aws_codebuild_webhook_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'branch_filter' => {
          'type' => Optional[String],
          'value' => undef
        },
        'payload_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'project_name' => String,
        'secret' => {
          'type' => Optional[String],
          'value' => undef
        },
        'url' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codebuild_webhookHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codecommit_repository => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['repository_name'],
          'providedAttributes' => ['arn', 'clone_url_http', 'clone_url_ssh', 'default_branch', 'description', 'repository_id']
        }
      },
      attributes => {
        'aws_codecommit_repository_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'clone_url_http' => {
          'type' => Optional[String],
          'value' => undef
        },
        'clone_url_ssh' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_branch' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'repository_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'repository_name' => String
      }
    },
    Aws_codecommit_repositoryHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codecommit_trigger => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['repository_name', 'trigger'],
          'providedAttributes' => ['configuration_id']
        }
      },
      attributes => {
        'aws_codecommit_trigger_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'configuration_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'repository_name' => String,
        'trigger' => Array[Aws_codecommit_trigger_trigger_124]
      }
    },
    Aws_codecommit_triggerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codecommit_trigger_trigger_124 => {
      attributes => {
        'branches' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'destination_arn' => String,
        'events' => Array[String],
        'name' => String
      }
    },
    Aws_codedeploy_app => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['compute_platform', 'name'],
          'providedAttributes' => ['compute_platform', 'unique_id']
        }
      },
      attributes => {
        'aws_codedeploy_app_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'compute_platform' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'unique_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_appHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codedeploy_deployment_config => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['compute_platform', 'deployment_config_name', 'minimum_healthy_hosts', 'traffic_routing_config'],
          'providedAttributes' => ['compute_platform', 'deployment_config_id', 'minimum_healthy_hosts', 'traffic_routing_config']
        }
      },
      attributes => {
        'aws_codedeploy_deployment_config_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'compute_platform' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deployment_config_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deployment_config_name' => String,
        'minimum_healthy_hosts' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_config_minimum_healthy_hosts_125]],
          'value' => undef
        },
        'traffic_routing_config' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_config_traffic_routing_config_126]],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_configHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codedeploy_deployment_config_minimum_healthy_hosts_125 => {
      attributes => {
        'type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'value' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_config_traffic_routing_config_126 => {
      attributes => {
        'time_based_canary' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_canary_127]],
          'value' => undef
        },
        'time_based_linear' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_linear_128]],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_canary_127 => {
      attributes => {
        'interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'percentage' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_linear_128 => {
      attributes => {
        'interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'percentage' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['deployment_group_name'],
          'providedAttributes' => ['alarm_configuration', 'auto_rollback_configuration', 'autoscaling_groups', 'blue_green_deployment_config', 'deployment_config_name', 'deployment_style', 'ec2_tag_filter', 'ec2_tag_set', 'ecs_service', 'load_balancer_info', 'on_premises_instance_tag_filter', 'trigger_configuration']
        }
      },
      attributes => {
        'aws_codedeploy_deployment_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'alarm_configuration' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_alarm_configuration_129]],
          'value' => undef
        },
        'app_name' => String,
        'auto_rollback_configuration' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_auto_rollback_configuration_130]],
          'value' => undef
        },
        'autoscaling_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'blue_green_deployment_config' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_blue_green_deployment_config_131]],
          'value' => undef
        },
        'deployment_config_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deployment_group_name' => String,
        'deployment_style' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_deployment_style_135]],
          'value' => undef
        },
        'ec2_tag_filter' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_ec2_tag_filter_136]],
          'value' => undef
        },
        'ec2_tag_set' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_ec2_tag_set_137]],
          'value' => undef
        },
        'ecs_service' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_ecs_service_139]],
          'value' => undef
        },
        'load_balancer_info' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_load_balancer_info_140]],
          'value' => undef
        },
        'on_premises_instance_tag_filter' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_on_premises_instance_tag_filter_147]],
          'value' => undef
        },
        'service_role_arn' => String,
        'trigger_configuration' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_trigger_configuration_148]],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codedeploy_deployment_group_alarm_configuration_129 => {
      attributes => {
        'alarms' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ignore_poll_alarm_failure' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_auto_rollback_configuration_130 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'events' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_blue_green_deployment_config_131 => {
      attributes => {
        'deployment_ready_option' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_blue_green_deployment_config_131_deployment_ready_option_132]],
          'value' => undef
        },
        'green_fleet_provisioning_option' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_blue_green_deployment_config_131_green_fleet_provisioning_option_133]],
          'value' => undef
        },
        'terminate_blue_instances_on_deployment_success' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_blue_green_deployment_config_131_terminate_blue_instances_on_deployment_success_134]],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_blue_green_deployment_config_131_deployment_ready_option_132 => {
      attributes => {
        'action_on_timeout' => {
          'type' => Optional[String],
          'value' => undef
        },
        'wait_time_in_minutes' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_blue_green_deployment_config_131_green_fleet_provisioning_option_133 => {
      attributes => {
        'action' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_blue_green_deployment_config_131_terminate_blue_instances_on_deployment_success_134 => {
      attributes => {
        'action' => {
          'type' => Optional[String],
          'value' => undef
        },
        'termination_wait_time_in_minutes' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_deployment_style_135 => {
      attributes => {
        'deployment_option' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deployment_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_ec2_tag_filter_136 => {
      attributes => {
        'key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'value' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_ec2_tag_set_137 => {
      attributes => {
        'ec2_tag_filter' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_ec2_tag_set_137_ec2_tag_filter_138]],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_ec2_tag_set_137_ec2_tag_filter_138 => {
      attributes => {
        'key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'value' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_ecs_service_139 => {
      attributes => {
        'cluster_name' => String,
        'service_name' => String
      }
    },
    Aws_codedeploy_deployment_group_load_balancer_info_140 => {
      attributes => {
        'elb_info' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_load_balancer_info_140_elb_info_141]],
          'value' => undef
        },
        'target_group_info' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_info_142]],
          'value' => undef
        },
        'target_group_pair_info' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143]],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_load_balancer_info_140_elb_info_141 => {
      attributes => {
        'name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_info_142 => {
      attributes => {
        'name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143 => {
      attributes => {
        'prod_traffic_route' => Array[Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_prod_traffic_route_144],
        'target_group' => Array[Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_target_group_145],
        'test_traffic_route' => {
          'type' => Optional[Array[Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_test_traffic_route_146]],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_prod_traffic_route_144 => {
      attributes => {
        'listener_arns' => Array[String]
      }
    },
    Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_target_group_145 => {
      attributes => {
        'name' => String
      }
    },
    Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_test_traffic_route_146 => {
      attributes => {
        'listener_arns' => Array[String]
      }
    },
    Aws_codedeploy_deployment_group_on_premises_instance_tag_filter_147 => {
      attributes => {
        'key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'value' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codedeploy_deployment_group_trigger_configuration_148 => {
      attributes => {
        'trigger_events' => Array[String],
        'trigger_name' => String,
        'trigger_target_arn' => String
      }
    },
    Aws_codepipeline => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_codepipeline_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'artifact_store' => Array[Aws_codepipeline_artifact_store_149],
        'name' => String,
        'role_arn' => String,
        'stage' => Array[Aws_codepipeline_stage_151]
      }
    },
    Aws_codepipelineHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codepipeline_artifact_store_149 => {
      attributes => {
        'encryption_key' => {
          'type' => Optional[Array[Aws_codepipeline_artifact_store_149_encryption_key_150]],
          'value' => undef
        },
        'location' => String,
        'type' => String
      }
    },
    Aws_codepipeline_artifact_store_149_encryption_key_150 => {
      attributes => {
        'id' => String,
        'type' => String
      }
    },
    Aws_codepipeline_stage_151 => {
      attributes => {
        'action' => Array[Aws_codepipeline_stage_151_action_152],
        'name' => String
      }
    },
    Aws_codepipeline_stage_151_action_152 => {
      attributes => {
        'category' => String,
        'configuration' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'input_artifacts' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'output_artifacts' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'owner' => String,
        'provider' => String,
        'role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'run_order' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'version' => String
      }
    },
    Aws_codepipeline_webhook => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['authentication', 'authentication_configuration', 'filter', 'name', 'target_action', 'target_pipeline'],
          'providedAttributes' => ['authentication_configuration', 'url']
        }
      },
      attributes => {
        'aws_codepipeline_webhook_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'authentication' => String,
        'authentication_configuration' => {
          'type' => Optional[Array[Aws_codepipeline_webhook_authentication_configuration_153]],
          'value' => undef
        },
        'filter' => Array[Aws_codepipeline_webhook_filter_154],
        'name' => String,
        'target_action' => String,
        'target_pipeline' => String,
        'url' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codepipeline_webhookHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_codepipeline_webhook_authentication_configuration_153 => {
      attributes => {
        'allowed_ip_range' => {
          'type' => Optional[String],
          'value' => undef
        },
        'secret_token' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_codepipeline_webhook_filter_154 => {
      attributes => {
        'json_path' => String,
        'match_equals' => String
      }
    },
    Aws_cognito_identity_pool => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['developer_provider_name', 'identity_pool_name'],
          'providedAttributes' => ['allow_unauthenticated_identities', 'arn', 'cognito_identity_providers', 'developer_provider_name', 'openid_connect_provider_arns', 'saml_provider_arns', 'supported_login_providers']
        }
      },
      attributes => {
        'aws_cognito_identity_pool_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allow_unauthenticated_identities' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cognito_identity_providers' => {
          'type' => Optional[Array[Aws_cognito_identity_pool_cognito_identity_providers_155]],
          'value' => undef
        },
        'developer_provider_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'identity_pool_name' => String,
        'openid_connect_provider_arns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'saml_provider_arns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'supported_login_providers' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_cognito_identity_poolHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cognito_identity_pool_cognito_identity_providers_155 => {
      attributes => {
        'client_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'provider_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'server_side_token_check' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_cognito_identity_pool_roles_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['identity_pool_id', 'roles'],
          'providedAttributes' => ['role_mapping']
        }
      },
      attributes => {
        'aws_cognito_identity_pool_roles_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'identity_pool_id' => String,
        'role_mapping' => {
          'type' => Optional[Array[Aws_cognito_identity_pool_roles_attachment_role_mapping_156]],
          'value' => undef
        },
        'roles' => Hash[String, String]
      }
    },
    Aws_cognito_identity_pool_roles_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cognito_identity_pool_roles_attachment_role_mapping_156 => {
      attributes => {
        'ambiguous_role_resolution' => {
          'type' => Optional[String],
          'value' => undef
        },
        'identity_provider' => String,
        'mapping_rule' => {
          'type' => Optional[Array[Aws_cognito_identity_pool_roles_attachment_role_mapping_156_mapping_rule_157]],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_cognito_identity_pool_roles_attachment_role_mapping_156_mapping_rule_157 => {
      attributes => {
        'claim' => String,
        'match_type' => String,
        'role_arn' => String,
        'value' => String
      }
    },
    Aws_cognito_identity_provider => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['user_pool_id'],
          'providedAttributes' => ['attribute_mapping', 'idp_identifiers']
        }
      },
      attributes => {
        'aws_cognito_identity_provider_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'attribute_mapping' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'idp_identifiers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'provider_details' => Hash[String, String],
        'provider_name' => String,
        'provider_type' => String,
        'user_pool_id' => String
      }
    },
    Aws_cognito_identity_providerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cognito_resource_server => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['identifier', 'name', 'user_pool_id'],
          'providedAttributes' => ['scope', 'scope_identifiers']
        }
      },
      attributes => {
        'aws_cognito_resource_server_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'identifier' => String,
        'name' => String,
        'scope' => {
          'type' => Optional[Array[Aws_cognito_resource_server_scope_158]],
          'value' => undef
        },
        'scope_identifiers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'user_pool_id' => String
      }
    },
    Aws_cognito_resource_serverHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cognito_resource_server_scope_158 => {
      attributes => {
        'scope_description' => String,
        'scope_name' => String
      }
    },
    Aws_cognito_user_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'user_pool_id'],
          'providedAttributes' => ['description', 'precedence', 'role_arn']
        }
      },
      attributes => {
        'aws_cognito_user_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'precedence' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_pool_id' => String
      }
    },
    Aws_cognito_user_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cognito_user_pool => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['alias_attributes', 'name', 'schema', 'username_attributes'],
          'providedAttributes' => ['admin_create_user_config', 'alias_attributes', 'arn', 'auto_verified_attributes', 'creation_date', 'device_configuration', 'email_configuration', 'email_verification_message', 'email_verification_subject', 'endpoint', 'lambda_config', 'last_modified_date', 'mfa_configuration', 'password_policy', 'schema', 'sms_authentication_message', 'sms_configuration', 'sms_verification_message', 'tags', 'username_attributes', 'verification_message_template']
        }
      },
      attributes => {
        'aws_cognito_user_pool_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'admin_create_user_config' => {
          'type' => Optional[Array[Aws_cognito_user_pool_admin_create_user_config_159]],
          'value' => undef
        },
        'alias_attributes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_verified_attributes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'creation_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'device_configuration' => {
          'type' => Optional[Array[Aws_cognito_user_pool_device_configuration_161]],
          'value' => undef
        },
        'email_configuration' => {
          'type' => Optional[Array[Aws_cognito_user_pool_email_configuration_162]],
          'value' => undef
        },
        'email_verification_message' => {
          'type' => Optional[String],
          'value' => undef
        },
        'email_verification_subject' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'lambda_config' => {
          'type' => Optional[Array[Aws_cognito_user_pool_lambda_config_163]],
          'value' => undef
        },
        'last_modified_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'mfa_configuration' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'password_policy' => {
          'type' => Optional[Array[Aws_cognito_user_pool_password_policy_164]],
          'value' => undef
        },
        'schema' => {
          'type' => Optional[Array[Aws_cognito_user_pool_schema_165]],
          'value' => undef
        },
        'sms_authentication_message' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sms_configuration' => {
          'type' => Optional[Array[Aws_cognito_user_pool_sms_configuration_168]],
          'value' => undef
        },
        'sms_verification_message' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'username_attributes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'verification_message_template' => {
          'type' => Optional[Array[Aws_cognito_user_pool_verification_message_template_169]],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_poolHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cognito_user_pool_admin_create_user_config_159 => {
      attributes => {
        'allow_admin_create_user_only' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'invite_message_template' => {
          'type' => Optional[Array[Aws_cognito_user_pool_admin_create_user_config_159_invite_message_template_160]],
          'value' => undef
        },
        'unused_account_validity_days' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_admin_create_user_config_159_invite_message_template_160 => {
      attributes => {
        'email_message' => {
          'type' => Optional[String],
          'value' => undef
        },
        'email_subject' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sms_message' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_client => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['generate_secret', 'user_pool_id'],
          'providedAttributes' => ['allowed_oauth_flows', 'allowed_oauth_flows_user_pool_client', 'allowed_oauth_scopes', 'callback_urls', 'client_secret', 'default_redirect_uri', 'explicit_auth_flows', 'generate_secret', 'logout_urls', 'read_attributes', 'refresh_token_validity', 'supported_identity_providers', 'write_attributes']
        }
      },
      attributes => {
        'aws_cognito_user_pool_client_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allowed_oauth_flows' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'allowed_oauth_flows_user_pool_client' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allowed_oauth_scopes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'callback_urls' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'client_secret' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_redirect_uri' => {
          'type' => Optional[String],
          'value' => undef
        },
        'explicit_auth_flows' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'generate_secret' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'logout_urls' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'read_attributes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'refresh_token_validity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'supported_identity_providers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'user_pool_id' => String,
        'write_attributes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_clientHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cognito_user_pool_device_configuration_161 => {
      attributes => {
        'challenge_required_on_new_device' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_only_remembered_on_user_prompt' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_domain => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['certificate_arn', 'domain', 'user_pool_id'],
          'providedAttributes' => ['aws_account_id', 'certificate_arn', 'cloudfront_distribution_arn', 's3_bucket', 'version']
        }
      },
      attributes => {
        'aws_cognito_user_pool_domain_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'aws_account_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloudfront_distribution_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain' => String,
        's3_bucket' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_pool_id' => String,
        'version' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_domainHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_cognito_user_pool_email_configuration_162 => {
      attributes => {
        'reply_to_email_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_lambda_config_163 => {
      attributes => {
        'create_auth_challenge' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_message' => {
          'type' => Optional[String],
          'value' => undef
        },
        'define_auth_challenge' => {
          'type' => Optional[String],
          'value' => undef
        },
        'post_authentication' => {
          'type' => Optional[String],
          'value' => undef
        },
        'post_confirmation' => {
          'type' => Optional[String],
          'value' => undef
        },
        'pre_authentication' => {
          'type' => Optional[String],
          'value' => undef
        },
        'pre_sign_up' => {
          'type' => Optional[String],
          'value' => undef
        },
        'pre_token_generation' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_migration' => {
          'type' => Optional[String],
          'value' => undef
        },
        'verify_auth_challenge_response' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_password_policy_164 => {
      attributes => {
        'minimum_length' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'require_lowercase' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'require_numbers' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'require_symbols' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'require_uppercase' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_schema_165 => {
      attributes => {
        'attribute_data_type' => String,
        'developer_only_attribute' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'mutable' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'number_attribute_constraints' => {
          'type' => Optional[Array[Aws_cognito_user_pool_schema_165_number_attribute_constraints_166]],
          'value' => undef
        },
        'required' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'string_attribute_constraints' => {
          'type' => Optional[Array[Aws_cognito_user_pool_schema_165_string_attribute_constraints_167]],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_schema_165_number_attribute_constraints_166 => {
      attributes => {
        'max_value' => {
          'type' => Optional[String],
          'value' => undef
        },
        'min_value' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_schema_165_string_attribute_constraints_167 => {
      attributes => {
        'max_length' => {
          'type' => Optional[String],
          'value' => undef
        },
        'min_length' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_cognito_user_pool_sms_configuration_168 => {
      attributes => {
        'external_id' => String,
        'sns_caller_arn' => String
      }
    },
    Aws_cognito_user_pool_verification_message_template_169 => {
      attributes => {
        'default_email_option' => {
          'type' => Optional[String],
          'value' => undef
        },
        'email_message' => {
          'type' => Optional[String],
          'value' => undef
        },
        'email_message_by_link' => {
          'type' => Optional[String],
          'value' => undef
        },
        'email_subject' => {
          'type' => Optional[String],
          'value' => undef
        },
        'email_subject_by_link' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sms_message' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_config_aggregate_authorization => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['account_id', 'region'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_config_aggregate_authorization_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'account_id' => String,
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'region' => String
      }
    },
    Aws_config_aggregate_authorizationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_config_config_rule => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'description', 'input_parameters', 'maximum_execution_frequency', 'rule_id', 'scope']
        }
      },
      attributes => {
        'aws_config_config_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'input_parameters' => {
          'type' => Optional[String],
          'value' => undef
        },
        'maximum_execution_frequency' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'rule_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[Array[Aws_config_config_rule_scope_170]],
          'value' => undef
        },
        'source' => Array[Aws_config_config_rule_source_171]
      }
    },
    Aws_config_config_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_config_config_rule_scope_170 => {
      attributes => {
        'compliance_resource_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'compliance_resource_types' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tag_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tag_value' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_config_config_rule_source_171 => {
      attributes => {
        'owner' => String,
        'source_detail' => {
          'type' => Optional[Array[Aws_config_config_rule_source_171_source_detail_172]],
          'value' => undef
        },
        'source_identifier' => String
      }
    },
    Aws_config_config_rule_source_171_source_detail_172 => {
      attributes => {
        'event_source' => {
          'type' => Optional[String],
          'value' => undef
        },
        'maximum_execution_frequency' => {
          'type' => Optional[String],
          'value' => undef
        },
        'message_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_config_configuration_aggregator => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['account_aggregation_source', 'arn', 'organization_aggregation_source']
        }
      },
      attributes => {
        'aws_config_configuration_aggregator_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'account_aggregation_source' => {
          'type' => Optional[Array[Aws_config_configuration_aggregator_account_aggregation_source_173]],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'organization_aggregation_source' => {
          'type' => Optional[Array[Aws_config_configuration_aggregator_organization_aggregation_source_174]],
          'value' => undef
        }
      }
    },
    Aws_config_configuration_aggregatorHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_config_configuration_aggregator_account_aggregation_source_173 => {
      attributes => {
        'account_ids' => Array[String],
        'all_regions' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'regions' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_config_configuration_aggregator_organization_aggregation_source_174 => {
      attributes => {
        'all_regions' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'regions' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'role_arn' => String
      }
    },
    Aws_config_configuration_recorder => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['name', 'recording_group']
        }
      },
      attributes => {
        'aws_config_configuration_recorder_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'recording_group' => {
          'type' => Optional[Array[Aws_config_configuration_recorder_recording_group_175]],
          'value' => undef
        },
        'role_arn' => String
      }
    },
    Aws_config_configuration_recorderHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_config_configuration_recorder_recording_group_175 => {
      attributes => {
        'all_supported' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'include_global_resource_types' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'resource_types' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_config_configuration_recorder_status => {
      attributes => {
        'aws_config_configuration_recorder_status_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'is_enabled' => Boolean,
        'name' => String
      }
    },
    Aws_config_configuration_recorder_statusHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_config_delivery_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['name', 's3_key_prefix', 'snapshot_delivery_properties', 'sns_topic_arn']
        }
      },
      attributes => {
        'aws_config_delivery_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_bucket_name' => String,
        's3_key_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'snapshot_delivery_properties' => {
          'type' => Optional[Array[Aws_config_delivery_channel_snapshot_delivery_properties_176]],
          'value' => undef
        },
        'sns_topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_config_delivery_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_config_delivery_channel_snapshot_delivery_properties_176 => {
      attributes => {
        'delivery_frequency' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_customer_gateway => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bgp_asn', 'ip_address', 'type'],
          'providedAttributes' => ['tags']
        }
      },
      attributes => {
        'aws_customer_gateway_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'bgp_asn' => Integer,
        'ip_address' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_customer_gatewayHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_datasync_agent => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['activation_key', 'ip_address'],
          'providedAttributes' => ['activation_key', 'arn', 'ip_address', 'name', 'tags']
        }
      },
      attributes => {
        'aws_datasync_agent_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'activation_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_datasync_agentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_datasync_location_efs => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['ec2_config', 'efs_file_system_arn', 'subdirectory'],
          'providedAttributes' => ['arn', 'subdirectory', 'tags', 'uri']
        }
      },
      attributes => {
        'aws_datasync_location_efs_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ec2_config' => Array[Aws_datasync_location_efs_ec2_config_177],
        'efs_file_system_arn' => String,
        'subdirectory' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'uri' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_datasync_location_efsHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_datasync_location_efs_ec2_config_177 => {
      attributes => {
        'security_group_arns' => Array[String],
        'subnet_arn' => String
      }
    },
    Aws_datasync_location_nfs => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['on_prem_config', 'server_hostname', 'subdirectory'],
          'providedAttributes' => ['arn', 'tags', 'uri']
        }
      },
      attributes => {
        'aws_datasync_location_nfs_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'on_prem_config' => Array[Aws_datasync_location_nfs_on_prem_config_178],
        'server_hostname' => String,
        'subdirectory' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'uri' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_datasync_location_nfsHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_datasync_location_nfs_on_prem_config_178 => {
      attributes => {
        'agent_arns' => Array[String]
      }
    },
    Aws_datasync_location_s3 => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['s3_bucket_arn', 's3_config', 'subdirectory'],
          'providedAttributes' => ['arn', 'tags', 'uri']
        }
      },
      attributes => {
        'aws_datasync_location_s3_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_bucket_arn' => String,
        's3_config' => Array[Aws_datasync_location_s3_s3_config_179],
        'subdirectory' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'uri' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_datasync_location_s3Handler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_datasync_location_s3_s3_config_179 => {
      attributes => {
        'bucket_access_role_arn' => String
      }
    },
    Aws_datasync_task => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cloudwatch_log_group_arn', 'destination_location_arn', 'source_location_arn'],
          'providedAttributes' => ['arn', 'cloudwatch_log_group_arn', 'name', 'options', 'tags']
        }
      },
      attributes => {
        'aws_datasync_task_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloudwatch_log_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'destination_location_arn' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'options' => {
          'type' => Optional[Array[Aws_datasync_task_options_180]],
          'value' => undef
        },
        'source_location_arn' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_datasync_taskHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_datasync_task_options_180 => {
      attributes => {
        'atime' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bytes_per_second' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'gid' => {
          'type' => Optional[String],
          'value' => undef
        },
        'mtime' => {
          'type' => Optional[String],
          'value' => undef
        },
        'posix_permissions' => {
          'type' => Optional[String],
          'value' => undef
        },
        'preserve_deleted_files' => {
          'type' => Optional[String],
          'value' => undef
        },
        'preserve_devices' => {
          'type' => Optional[String],
          'value' => undef
        },
        'uid' => {
          'type' => Optional[String],
          'value' => undef
        },
        'verify_mode' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dax_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zones', 'cluster_name', 'iam_role_arn', 'node_type', 'subnet_group_name'],
          'providedAttributes' => ['arn', 'availability_zones', 'cluster_address', 'configuration_endpoint', 'description', 'maintenance_window', 'nodes', 'notification_topic_arn', 'parameter_group_name', 'port', 'security_group_ids', 'server_side_encryption', 'subnet_group_name', 'tags']
        }
      },
      attributes => {
        'aws_dax_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'cluster_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_name' => String,
        'configuration_endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_role_arn' => String,
        'maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'node_type' => String,
        'nodes' => {
          'type' => Optional[Array[Aws_dax_cluster_nodes_181]],
          'value' => undef
        },
        'notification_topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameter_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'replication_factor' => Integer,
        'security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'server_side_encryption' => {
          'type' => Optional[Array[Aws_dax_cluster_server_side_encryption_182]],
          'value' => undef
        },
        'subnet_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_dax_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dax_cluster_nodes_181 => {
      attributes => {
        'address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_dax_cluster_server_side_encryption_182 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_dax_parameter_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name'],
          'providedAttributes' => ['description', 'parameters']
        }
      },
      attributes => {
        'aws_dax_parameter_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'parameters' => {
          'type' => Optional[Array[Aws_dax_parameter_group_parameters_183]],
          'value' => undef
        }
      }
    },
    Aws_dax_parameter_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dax_parameter_group_parameters_183 => {
      attributes => {
        'name' => String,
        'value' => String
      }
    },
    Aws_dax_subnet_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['description', 'vpc_id']
        }
      },
      attributes => {
        'aws_dax_subnet_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'subnet_ids' => Array[String],
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dax_subnet_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_db_cluster_snapshot => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['db_cluster_identifier', 'db_cluster_snapshot_identifier'],
          'providedAttributes' => ['allocated_storage', 'availability_zones', 'db_cluster_snapshot_arn', 'engine', 'engine_version', 'kms_key_id', 'license_model', 'port', 'snapshot_type', 'source_db_cluster_snapshot_arn', 'status', 'storage_encrypted', 'vpc_id']
        }
      },
      attributes => {
        'aws_db_cluster_snapshot_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocated_storage' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'db_cluster_identifier' => String,
        'db_cluster_snapshot_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'db_cluster_snapshot_identifier' => String,
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'license_model' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_db_cluster_snapshot_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_db_cluster_snapshotHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_db_event_subscription => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'customer_aws_id', 'enabled', 'event_categories', 'name', 'name_prefix', 'source_ids', 'source_type', 'tags']
        }
      },
      attributes => {
        'aws_db_event_subscription_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'customer_aws_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'event_categories' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sns_topic' => String,
        'source_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'source_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_db_event_subscriptionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_db_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'character_set_name', 'engine', 'identifier', 'identifier_prefix', 'kms_key_id', 'name', 'snapshot_identifier', 'storage_encrypted', 'timezone', 'username'],
          'providedAttributes' => ['address', 'allocated_storage', 'allow_major_version_upgrade', 'apply_immediately', 'arn', 'auto_minor_version_upgrade', 'availability_zone', 'backup_retention_period', 'backup_window', 'ca_cert_identifier', 'character_set_name', 'copy_tags_to_snapshot', 'db_subnet_group_name', 'deletion_protection', 'domain', 'domain_iam_role_name', 'enabled_cloudwatch_logs_exports', 'endpoint', 'engine', 'engine_version', 'final_snapshot_identifier', 'hosted_zone_id', 'iam_database_authentication_enabled', 'identifier', 'identifier_prefix', 'iops', 'kms_key_id', 'license_model', 'maintenance_window', 'monitoring_interval', 'monitoring_role_arn', 'multi_az', 'name', 'option_group_name', 'parameter_group_name', 'password', 'port', 'publicly_accessible', 'replicas', 'replicate_source_db', 'resource_id', 's3_import', 'security_group_names', 'skip_final_snapshot', 'snapshot_identifier', 'status', 'storage_encrypted', 'storage_type', 'tags', 'timezone', 'username', 'vpc_security_group_ids']
        }
      },
      attributes => {
        'aws_db_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'allocated_storage' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'allow_major_version_upgrade' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'apply_immediately' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_minor_version_upgrade' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'backup_retention_period' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'backup_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ca_cert_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'character_set_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'copy_tags_to_snapshot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'db_subnet_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deletion_protection' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'domain' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_iam_role_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled_cloudwatch_logs_exports' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'final_snapshot_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hosted_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_database_authentication_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'identifier_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_class' => String,
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'license_model' => {
          'type' => Optional[String],
          'value' => undef
        },
        'maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'monitoring_interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'monitoring_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'multi_az' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'option_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameter_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'publicly_accessible' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'replicas' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'replicate_source_db' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_import' => {
          'type' => Optional[Array[Aws_db_instance_s3_import_184]],
          'value' => undef
        },
        'security_group_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'skip_final_snapshot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'snapshot_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'storage_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'timezone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'username' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_db_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_db_instance_s3_import_184 => {
      attributes => {
        'bucket_name' => String,
        'bucket_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ingestion_role' => String,
        'source_engine' => String,
        'source_engine_version' => String
      }
    },
    Aws_db_option_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['engine_name', 'major_engine_version', 'name', 'name_prefix', 'option_group_description'],
          'providedAttributes' => ['arn', 'name', 'name_prefix', 'option', 'option_group_description', 'tags']
        }
      },
      attributes => {
        'aws_db_option_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_name' => String,
        'major_engine_version' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'option' => {
          'type' => Optional[Array[Aws_db_option_group_option_185]],
          'value' => undef
        },
        'option_group_description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_db_option_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_db_option_group_option_185 => {
      attributes => {
        'db_security_group_memberships' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'option_name' => String,
        'option_settings' => {
          'type' => Optional[Array[Aws_db_option_group_option_185_option_settings_186]],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_security_group_memberships' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_db_option_group_option_185_option_settings_186 => {
      attributes => {
        'name' => String,
        'value' => String
      }
    },
    Aws_db_parameter_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'family', 'name', 'name_prefix'],
          'providedAttributes' => ['arn', 'description', 'name', 'name_prefix', 'parameter', 'tags']
        }
      },
      attributes => {
        'aws_db_parameter_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'family' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameter' => {
          'type' => Optional[Array[Aws_db_parameter_group_parameter_187]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_db_parameter_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_db_parameter_group_parameter_187 => {
      attributes => {
        'apply_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'value' => String
      }
    },
    Aws_db_security_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name'],
          'providedAttributes' => ['arn', 'description', 'tags']
        }
      },
      attributes => {
        'aws_db_security_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ingress' => Array[Aws_db_security_group_ingress_188],
        'name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_db_security_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_db_security_group_ingress_188 => {
      attributes => {
        'cidr' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_group_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_group_owner_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_db_snapshot => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['db_instance_identifier', 'db_snapshot_identifier'],
          'providedAttributes' => ['allocated_storage', 'availability_zone', 'db_snapshot_arn', 'encrypted', 'engine', 'engine_version', 'iops', 'kms_key_id', 'license_model', 'option_group_name', 'port', 'snapshot_type', 'source_db_snapshot_identifier', 'source_region', 'status', 'storage_type', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_db_snapshot_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocated_storage' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'db_instance_identifier' => String,
        'db_snapshot_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'db_snapshot_identifier' => String,
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'license_model' => {
          'type' => Optional[String],
          'value' => undef
        },
        'option_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_db_snapshot_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_db_snapshotHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_db_subnet_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'description', 'name', 'name_prefix', 'tags']
        }
      },
      attributes => {
        'aws_db_subnet_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_ids' => Array[String],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_db_subnet_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_default_network_acl => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['default_network_acl_id'],
          'providedAttributes' => ['egress', 'ingress', 'owner_id', 'subnet_ids', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_default_network_acl_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'default_network_acl_id' => String,
        'egress' => {
          'type' => Optional[Array[Aws_default_network_acl_egress_189]],
          'value' => undef
        },
        'ingress' => {
          'type' => Optional[Array[Aws_default_network_acl_ingress_190]],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_default_network_aclHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_default_network_acl_egress_189 => {
      attributes => {
        'action' => String,
        'cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'from_port' => Integer,
        'icmp_code' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'icmp_type' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => String,
        'rule_no' => Integer,
        'to_port' => Integer
      }
    },
    Aws_default_network_acl_ingress_190 => {
      attributes => {
        'action' => String,
        'cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'from_port' => Integer,
        'icmp_code' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'icmp_type' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => String,
        'rule_no' => Integer,
        'to_port' => Integer
      }
    },
    Aws_default_route_table => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['default_route_table_id'],
          'providedAttributes' => ['owner_id', 'propagating_vgws', 'route', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_default_route_table_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'default_route_table_id' => String,
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'propagating_vgws' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'route' => {
          'type' => Optional[Array[Aws_default_route_table_route_191]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_default_route_tableHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_default_route_table_route_191 => {
      attributes => {
        'cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'egress_only_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'nat_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'transit_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_peering_connection_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_default_security_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['vpc_id'],
          'providedAttributes' => ['arn', 'egress', 'ingress', 'name', 'owner_id', 'revoke_rules_on_delete', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_default_security_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'egress' => {
          'type' => Optional[Array[Aws_default_security_group_egress_192]],
          'value' => undef
        },
        'ingress' => {
          'type' => Optional[Array[Aws_default_security_group_ingress_193]],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'revoke_rules_on_delete' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_default_security_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_default_security_group_egress_192 => {
      attributes => {
        'cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'from_port' => Integer,
        'ipv6_cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'prefix_list_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'protocol' => String,
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'self' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'to_port' => Integer
      }
    },
    Aws_default_security_group_ingress_193 => {
      attributes => {
        'cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'from_port' => Integer,
        'ipv6_cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'prefix_list_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'protocol' => String,
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'self' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'to_port' => Integer
      }
    },
    Aws_default_subnet => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'assign_ipv6_address_on_creation', 'availability_zone_id', 'cidr_block', 'ipv6_cidr_block', 'ipv6_cidr_block_association_id', 'map_public_ip_on_launch', 'owner_id', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_default_subnet_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'assign_ipv6_address_on_creation' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => String,
        'availability_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_cidr_block_association_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'map_public_ip_on_launch' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_default_subnetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_default_vpc => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'assign_generated_ipv6_cidr_block', 'cidr_block', 'default_network_acl_id', 'default_route_table_id', 'default_security_group_id', 'dhcp_options_id', 'enable_classiclink', 'enable_classiclink_dns_support', 'enable_dns_hostnames', 'enable_dns_support', 'instance_tenancy', 'ipv6_association_id', 'ipv6_cidr_block', 'main_route_table_id', 'owner_id', 'tags']
        }
      },
      attributes => {
        'aws_default_vpc_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'assign_generated_ipv6_cidr_block' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_network_acl_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_route_table_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_security_group_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dhcp_options_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_classiclink' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_classiclink_dns_support' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_dns_hostnames' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_dns_support' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_tenancy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_association_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'main_route_table_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_default_vpcHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_default_vpc_dhcp_options => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['netbios_name_servers', 'netbios_node_type'],
          'providedAttributes' => ['domain_name', 'domain_name_servers', 'netbios_name_servers', 'netbios_node_type', 'ntp_servers', 'owner_id', 'tags']
        }
      },
      attributes => {
        'aws_default_vpc_dhcp_options_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name_servers' => {
          'type' => Optional[String],
          'value' => undef
        },
        'netbios_name_servers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'netbios_node_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ntp_servers' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_default_vpc_dhcp_optionsHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_devicefarm_project => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_devicefarm_project_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_devicefarm_projectHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_directory_service_conditional_forwarder => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['directory_id', 'remote_domain_name']
        }
      },
      attributes => {
        'aws_directory_service_conditional_forwarder_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'directory_id' => String,
        'dns_ips' => Array[String],
        'remote_domain_name' => String
      }
    },
    Aws_directory_service_conditional_forwarderHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_directory_service_directory => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['alias', 'connect_settings', 'description', 'edition', 'name', 'password', 'short_name', 'size', 'type', 'vpc_settings'],
          'providedAttributes' => ['access_url', 'alias', 'connect_settings', 'description', 'dns_ip_addresses', 'edition', 'enable_sso', 'security_group_id', 'short_name', 'size', 'tags', 'type', 'vpc_settings']
        }
      },
      attributes => {
        'aws_directory_service_directory_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'access_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'alias' => {
          'type' => Optional[String],
          'value' => undef
        },
        'connect_settings' => {
          'type' => Optional[Array[Aws_directory_service_directory_connect_settings_194]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dns_ip_addresses' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'edition' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_sso' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'password' => String,
        'security_group_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'short_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_settings' => {
          'type' => Optional[Array[Aws_directory_service_directory_vpc_settings_195]],
          'value' => undef
        }
      }
    },
    Aws_directory_service_directoryHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_directory_service_directory_connect_settings_194 => {
      attributes => {
        'customer_dns_ips' => Array[String],
        'customer_username' => String,
        'subnet_ids' => Array[String],
        'vpc_id' => String
      }
    },
    Aws_directory_service_directory_vpc_settings_195 => {
      attributes => {
        'subnet_ids' => Array[String],
        'vpc_id' => String
      }
    },
    Aws_dlm_lifecycle_policy => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['state']
        }
      },
      attributes => {
        'aws_dlm_lifecycle_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => String,
        'execution_role_arn' => String,
        'policy_details' => Array[Aws_dlm_lifecycle_policy_policy_details_196],
        'state' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dlm_lifecycle_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dlm_lifecycle_policy_policy_details_196 => {
      attributes => {
        'resource_types' => Array[String],
        'schedule' => Array[Aws_dlm_lifecycle_policy_policy_details_196_schedule_197],
        'target_tags' => Hash[String, String]
      }
    },
    Aws_dlm_lifecycle_policy_policy_details_196_schedule_197 => {
      attributes => {
        'copy_tags' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'create_rule' => Array[Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_create_rule_198],
        'name' => String,
        'retain_rule' => Array[Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_retain_rule_199],
        'tags_to_add' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_create_rule_198 => {
      attributes => {
        'interval' => Integer,
        'interval_unit' => {
          'type' => Optional[String],
          'value' => undef
        },
        'times' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_retain_rule_199 => {
      attributes => {
        'count' => Integer
      }
    },
    Aws_dms_certificate => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['certificate_id', 'certificate_pem', 'certificate_wallet'],
          'providedAttributes' => ['certificate_arn', 'certificate_pem', 'certificate_wallet']
        }
      },
      attributes => {
        'aws_dms_certificate_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_id' => String,
        'certificate_pem' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_wallet' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dms_certificateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dms_endpoint => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['endpoint_id', 'kms_key_arn'],
          'providedAttributes' => ['certificate_arn', 'database_name', 'endpoint_arn', 'extra_connection_attributes', 'kms_key_arn', 'mongodb_settings', 'password', 'port', 's3_settings', 'server_name', 'service_access_role', 'ssl_mode', 'tags', 'username']
        }
      },
      attributes => {
        'aws_dms_endpoint_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'database_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint_id' => String,
        'endpoint_type' => String,
        'engine_name' => String,
        'extra_connection_attributes' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'mongodb_settings' => {
          'type' => Optional[Array[Aws_dms_endpoint_mongodb_settings_200]],
          'value' => undef
        },
        'password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        's3_settings' => {
          'type' => Optional[Array[Aws_dms_endpoint_s3_settings_201]],
          'value' => undef
        },
        'server_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'service_access_role' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssl_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'username' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dms_endpointHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dms_endpoint_mongodb_settings_200 => {
      attributes => {
        'auth_mechanism' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auth_source' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auth_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'docs_to_investigate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'extract_doc_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'nesting_level' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dms_endpoint_s3_settings_201 => {
      attributes => {
        'bucket_folder' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bucket_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'compression_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'csv_delimiter' => {
          'type' => Optional[String],
          'value' => undef
        },
        'csv_row_delimiter' => {
          'type' => Optional[String],
          'value' => undef
        },
        'external_table_definition' => {
          'type' => Optional[String],
          'value' => undef
        },
        'service_access_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dms_replication_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'kms_key_arn', 'publicly_accessible', 'replication_instance_id', 'replication_subnet_group_id'],
          'providedAttributes' => ['allocated_storage', 'apply_immediately', 'auto_minor_version_upgrade', 'availability_zone', 'engine_version', 'kms_key_arn', 'multi_az', 'preferred_maintenance_window', 'publicly_accessible', 'replication_instance_arn', 'replication_instance_private_ips', 'replication_instance_public_ips', 'replication_subnet_group_id', 'tags', 'vpc_security_group_ids']
        }
      },
      attributes => {
        'aws_dms_replication_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocated_storage' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'apply_immediately' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_minor_version_upgrade' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'multi_az' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'preferred_maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'publicly_accessible' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'replication_instance_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'replication_instance_class' => String,
        'replication_instance_id' => String,
        'replication_instance_private_ips' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'replication_instance_public_ips' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'replication_subnet_group_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_dms_replication_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dms_replication_subnet_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['replication_subnet_group_id'],
          'providedAttributes' => ['replication_subnet_group_arn', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_dms_replication_subnet_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'replication_subnet_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'replication_subnet_group_description' => String,
        'replication_subnet_group_id' => String,
        'subnet_ids' => Array[String],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dms_replication_subnet_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dms_replication_task => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['replication_instance_arn', 'replication_task_id', 'source_endpoint_arn', 'target_endpoint_arn'],
          'providedAttributes' => ['cdc_start_time', 'replication_task_arn', 'replication_task_settings', 'tags']
        }
      },
      attributes => {
        'aws_dms_replication_task_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cdc_start_time' => {
          'type' => Optional[String],
          'value' => undef
        },
        'migration_type' => String,
        'replication_instance_arn' => String,
        'replication_task_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'replication_task_id' => String,
        'replication_task_settings' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_endpoint_arn' => String,
        'table_mappings' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'target_endpoint_arn' => String
      }
    },
    Aws_dms_replication_taskHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_docdb_cluster_parameter_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'family', 'name', 'name_prefix'],
          'providedAttributes' => ['arn', 'description', 'name', 'name_prefix', 'parameter', 'tags']
        }
      },
      attributes => {
        'aws_docdb_cluster_parameter_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'family' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameter' => {
          'type' => Optional[Array[Aws_docdb_cluster_parameter_group_parameter_202]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_docdb_cluster_parameter_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_docdb_cluster_parameter_group_parameter_202 => {
      attributes => {
        'apply_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'value' => String
      }
    },
    Aws_docdb_subnet_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'description', 'name', 'name_prefix', 'tags']
        }
      },
      attributes => {
        'aws_docdb_subnet_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_ids' => Array[String],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_docdb_subnet_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_bgp_peer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['address_family', 'amazon_address', 'bgp_asn', 'bgp_auth_key', 'customer_address', 'virtual_interface_id'],
          'providedAttributes' => ['amazon_address', 'bgp_auth_key', 'bgp_status', 'customer_address']
        }
      },
      attributes => {
        'aws_dx_bgp_peer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'address_family' => String,
        'amazon_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bgp_asn' => Integer,
        'bgp_auth_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bgp_status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'customer_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'virtual_interface_id' => String
      }
    },
    Aws_dx_bgp_peerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_connection => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bandwidth', 'location', 'name'],
          'providedAttributes' => ['arn', 'jumbo_frame_capable', 'tags']
        }
      },
      attributes => {
        'aws_dx_connection_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bandwidth' => String,
        'jumbo_frame_capable' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'location' => String,
        'name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_dx_connectionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_connection_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['connection_id', 'lag_id']
        }
      },
      attributes => {
        'aws_dx_connection_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'connection_id' => String,
        'lag_id' => String
      }
    },
    Aws_dx_connection_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_gateway => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['amazon_side_asn', 'name']
        }
      },
      attributes => {
        'aws_dx_gateway_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'amazon_side_asn' => String,
        'name' => String
      }
    },
    Aws_dx_gatewayHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_gateway_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['dx_gateway_id', 'vpn_gateway_id']
        }
      },
      attributes => {
        'aws_dx_gateway_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'dx_gateway_id' => String,
        'vpn_gateway_id' => String
      }
    },
    Aws_dx_gateway_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_hosted_private_virtual_interface => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['address_family', 'amazon_address', 'bgp_asn', 'bgp_auth_key', 'connection_id', 'customer_address', 'mtu', 'name', 'owner_account_id', 'vlan'],
          'providedAttributes' => ['amazon_address', 'arn', 'bgp_auth_key', 'customer_address', 'jumbo_frame_capable', 'mtu']
        }
      },
      attributes => {
        'aws_dx_hosted_private_virtual_interface_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'address_family' => String,
        'amazon_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bgp_asn' => Integer,
        'bgp_auth_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'connection_id' => String,
        'customer_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'jumbo_frame_capable' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'mtu' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => String,
        'owner_account_id' => String,
        'vlan' => Integer
      }
    },
    Aws_dx_hosted_private_virtual_interfaceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_hosted_private_virtual_interface_accepter => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['dx_gateway_id', 'virtual_interface_id', 'vpn_gateway_id'],
          'providedAttributes' => ['arn', 'dx_gateway_id', 'tags', 'vpn_gateway_id']
        }
      },
      attributes => {
        'aws_dx_hosted_private_virtual_interface_accepter_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dx_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'virtual_interface_id' => String,
        'vpn_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dx_hosted_private_virtual_interface_accepterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_hosted_public_virtual_interface => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['address_family', 'amazon_address', 'bgp_asn', 'bgp_auth_key', 'connection_id', 'customer_address', 'name', 'owner_account_id', 'route_filter_prefixes', 'vlan'],
          'providedAttributes' => ['amazon_address', 'arn', 'bgp_auth_key', 'customer_address']
        }
      },
      attributes => {
        'aws_dx_hosted_public_virtual_interface_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'address_family' => String,
        'amazon_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bgp_asn' => Integer,
        'bgp_auth_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'connection_id' => String,
        'customer_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'owner_account_id' => String,
        'route_filter_prefixes' => Array[String],
        'vlan' => Integer
      }
    },
    Aws_dx_hosted_public_virtual_interfaceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_hosted_public_virtual_interface_accepter => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['virtual_interface_id'],
          'providedAttributes' => ['arn', 'tags']
        }
      },
      attributes => {
        'aws_dx_hosted_public_virtual_interface_accepter_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'virtual_interface_id' => String
      }
    },
    Aws_dx_hosted_public_virtual_interface_accepterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_lag => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['connections_bandwidth', 'location', 'number_of_connections'],
          'providedAttributes' => ['arn', 'force_destroy', 'number_of_connections', 'tags']
        }
      },
      attributes => {
        'aws_dx_lag_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'connections_bandwidth' => String,
        'force_destroy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'location' => String,
        'name' => String,
        'number_of_connections' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_dx_lagHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_private_virtual_interface => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['address_family', 'amazon_address', 'bgp_asn', 'bgp_auth_key', 'connection_id', 'customer_address', 'dx_gateway_id', 'name', 'vlan', 'vpn_gateway_id'],
          'providedAttributes' => ['amazon_address', 'arn', 'bgp_auth_key', 'customer_address', 'dx_gateway_id', 'jumbo_frame_capable', 'mtu', 'tags', 'vpn_gateway_id']
        }
      },
      attributes => {
        'aws_dx_private_virtual_interface_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'address_family' => String,
        'amazon_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bgp_asn' => Integer,
        'bgp_auth_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'connection_id' => String,
        'customer_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dx_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'jumbo_frame_capable' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'mtu' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vlan' => Integer,
        'vpn_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_dx_private_virtual_interfaceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dx_public_virtual_interface => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['address_family', 'amazon_address', 'bgp_asn', 'bgp_auth_key', 'connection_id', 'customer_address', 'name', 'route_filter_prefixes', 'vlan'],
          'providedAttributes' => ['amazon_address', 'arn', 'bgp_auth_key', 'customer_address', 'tags']
        }
      },
      attributes => {
        'aws_dx_public_virtual_interface_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'address_family' => String,
        'amazon_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bgp_asn' => Integer,
        'bgp_auth_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'connection_id' => String,
        'customer_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'route_filter_prefixes' => Array[String],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vlan' => Integer
      }
    },
    Aws_dx_public_virtual_interfaceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dynamodb_global_table => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_dynamodb_global_table_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'replica' => Array[Aws_dynamodb_global_table_replica_203]
      }
    },
    Aws_dynamodb_global_tableHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dynamodb_global_table_replica_203 => {
      attributes => {
        'region_name' => String
      }
    },
    Aws_dynamodb_table => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['hash_key', 'local_secondary_index', 'name', 'range_key'],
          'providedAttributes' => ['arn', 'billing_mode', 'global_secondary_index', 'local_secondary_index', 'point_in_time_recovery', 'range_key', 'read_capacity', 'server_side_encryption', 'stream_arn', 'stream_enabled', 'stream_label', 'stream_view_type', 'tags', 'ttl', 'write_capacity']
        }
      },
      attributes => {
        'aws_dynamodb_table_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'attribute' => Array[Aws_dynamodb_table_attribute_204],
        'billing_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'global_secondary_index' => {
          'type' => Optional[Array[Aws_dynamodb_table_global_secondary_index_205]],
          'value' => undef
        },
        'hash_key' => String,
        'local_secondary_index' => {
          'type' => Optional[Array[Aws_dynamodb_table_local_secondary_index_206]],
          'value' => undef
        },
        'name' => String,
        'point_in_time_recovery' => {
          'type' => Optional[Array[Aws_dynamodb_table_point_in_time_recovery_207]],
          'value' => undef
        },
        'range_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'read_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'server_side_encryption' => {
          'type' => Optional[Array[Aws_dynamodb_table_server_side_encryption_208]],
          'value' => undef
        },
        'stream_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stream_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'stream_label' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stream_view_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'ttl' => {
          'type' => Optional[Array[Aws_dynamodb_table_ttl_209]],
          'value' => undef
        },
        'write_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_dynamodb_tableHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dynamodb_table_attribute_204 => {
      attributes => {
        'name' => String,
        'type' => String
      }
    },
    Aws_dynamodb_table_global_secondary_index_205 => {
      attributes => {
        'hash_key' => String,
        'name' => String,
        'non_key_attributes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'projection_type' => String,
        'range_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'read_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'write_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_dynamodb_table_item => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['hash_key', 'range_key', 'table_name'],
          'providedAttributes' => ['range_key']
        }
      },
      attributes => {
        'aws_dynamodb_table_item_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'hash_key' => String,
        'item' => String,
        'range_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'table_name' => String
      }
    },
    Aws_dynamodb_table_itemHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_dynamodb_table_local_secondary_index_206 => {
      attributes => {
        'name' => String,
        'non_key_attributes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'projection_type' => String,
        'range_key' => String
      }
    },
    Aws_dynamodb_table_point_in_time_recovery_207 => {
      attributes => {
        'enabled' => Boolean
      }
    },
    Aws_dynamodb_table_server_side_encryption_208 => {
      attributes => {
        'enabled' => Boolean
      }
    },
    Aws_dynamodb_table_ttl_209 => {
      attributes => {
        'attribute_name' => String,
        'enabled' => Boolean
      }
    },
    Aws_ebs_snapshot => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'tags', 'volume_id'],
          'providedAttributes' => ['data_encryption_key_id', 'description', 'encrypted', 'kms_key_id', 'owner_alias', 'owner_id', 'tags', 'volume_size']
        }
      },
      attributes => {
        'aws_ebs_snapshot_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'data_encryption_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_alias' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'volume_id' => String,
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_ebs_snapshotHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ebs_snapshot_copy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'encrypted', 'kms_key_id', 'source_region', 'source_snapshot_id', 'tags'],
          'providedAttributes' => ['data_encryption_key_id', 'description', 'encrypted', 'kms_key_id', 'owner_alias', 'owner_id', 'tags', 'volume_id', 'volume_size']
        }
      },
      attributes => {
        'aws_ebs_snapshot_copy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'data_encryption_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_alias' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_region' => String,
        'source_snapshot_id' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'volume_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_ebs_snapshot_copyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ebs_volume => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'encrypted', 'kms_key_id', 'snapshot_id'],
          'providedAttributes' => ['arn', 'encrypted', 'iops', 'kms_key_id', 'size', 'snapshot_id', 'tags', 'type']
        }
      },
      attributes => {
        'aws_ebs_volume_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => String,
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ebs_volumeHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ec2_capacity_reservation => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'ebs_optimized', 'ephemeral_storage', 'instance_match_criteria', 'instance_platform', 'instance_type', 'tenancy'],
          'providedAttributes' => ['ebs_optimized', 'end_date', 'end_date_type', 'ephemeral_storage', 'instance_match_criteria', 'tags', 'tenancy']
        }
      },
      attributes => {
        'aws_ec2_capacity_reservation_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => String,
        'ebs_optimized' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'end_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'end_date_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ephemeral_storage' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_count' => Integer,
        'instance_match_criteria' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_platform' => String,
        'instance_type' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'tenancy' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ec2_capacity_reservationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ec2_fleet => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['launch_template_config', 'replace_unhealthy_instances', 'tags', 'terminate_instances_with_expiration', 'type'],
          'providedAttributes' => ['excess_capacity_termination_policy', 'on_demand_options', 'replace_unhealthy_instances', 'spot_options', 'tags', 'terminate_instances', 'terminate_instances_with_expiration', 'type']
        }
      },
      attributes => {
        'aws_ec2_fleet_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'excess_capacity_termination_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'launch_template_config' => Array[Aws_ec2_fleet_launch_template_config_210],
        'on_demand_options' => {
          'type' => Optional[Array[Aws_ec2_fleet_on_demand_options_213]],
          'value' => undef
        },
        'replace_unhealthy_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'spot_options' => {
          'type' => Optional[Array[Aws_ec2_fleet_spot_options_214]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'target_capacity_specification' => Array[Aws_ec2_fleet_target_capacity_specification_215],
        'terminate_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'terminate_instances_with_expiration' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ec2_fleetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ec2_fleet_launch_template_config_210 => {
      attributes => {
        'launch_template_specification' => Array[Aws_ec2_fleet_launch_template_config_210_launch_template_specification_211],
        'override' => {
          'type' => Optional[Array[Aws_ec2_fleet_launch_template_config_210_override_212]],
          'value' => undef
        }
      }
    },
    Aws_ec2_fleet_launch_template_config_210_launch_template_specification_211 => {
      attributes => {
        'launch_template_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'launch_template_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'version' => String
      }
    },
    Aws_ec2_fleet_launch_template_config_210_override_212 => {
      attributes => {
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_price' => {
          'type' => Optional[String],
          'value' => undef
        },
        'priority' => {
          'type' => Optional[Float],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'weighted_capacity' => {
          'type' => Optional[Float],
          'value' => undef
        }
      }
    },
    Aws_ec2_fleet_on_demand_options_213 => {
      attributes => {
        'allocation_strategy' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ec2_fleet_spot_options_214 => {
      attributes => {
        'allocation_strategy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_interruption_behavior' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_pools_to_use_count' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_ec2_fleet_target_capacity_specification_215 => {
      attributes => {
        'default_target_capacity_type' => String,
        'on_demand_target_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'spot_target_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'total_target_capacity' => Integer
      }
    },
    Aws_ec2_transit_gateway => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['amazon_side_asn', 'auto_accept_shared_attachments', 'default_route_table_association', 'default_route_table_propagation', 'description', 'dns_support', 'vpn_ecmp_support'],
          'providedAttributes' => ['amazon_side_asn', 'arn', 'association_default_route_table_id', 'auto_accept_shared_attachments', 'default_route_table_association', 'default_route_table_propagation', 'description', 'dns_support', 'owner_id', 'propagation_default_route_table_id', 'tags', 'vpn_ecmp_support']
        }
      },
      attributes => {
        'aws_ec2_transit_gateway_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'amazon_side_asn' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'association_default_route_table_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_accept_shared_attachments' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_route_table_association' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_route_table_propagation' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dns_support' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'propagation_default_route_table_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpn_ecmp_support' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ec2_transit_gatewayHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ec2_transit_gateway_route => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['destination_cidr_block', 'transit_gateway_attachment_id', 'transit_gateway_route_table_id']
        }
      },
      attributes => {
        'aws_ec2_transit_gateway_route_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'destination_cidr_block' => String,
        'transit_gateway_attachment_id' => String,
        'transit_gateway_route_table_id' => String
      }
    },
    Aws_ec2_transit_gateway_routeHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ec2_transit_gateway_route_table => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['transit_gateway_id'],
          'providedAttributes' => ['default_association_route_table', 'default_propagation_route_table', 'tags']
        }
      },
      attributes => {
        'aws_ec2_transit_gateway_route_table_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'default_association_route_table' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'default_propagation_route_table' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'transit_gateway_id' => String
      }
    },
    Aws_ec2_transit_gateway_route_tableHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ec2_transit_gateway_route_table_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['transit_gateway_attachment_id', 'transit_gateway_route_table_id'],
          'providedAttributes' => ['resource_id', 'resource_type']
        }
      },
      attributes => {
        'aws_ec2_transit_gateway_route_table_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'resource_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'transit_gateway_attachment_id' => String,
        'transit_gateway_route_table_id' => String
      }
    },
    Aws_ec2_transit_gateway_route_table_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ec2_transit_gateway_route_table_propagation => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['transit_gateway_attachment_id', 'transit_gateway_route_table_id'],
          'providedAttributes' => ['resource_id', 'resource_type']
        }
      },
      attributes => {
        'aws_ec2_transit_gateway_route_table_propagation_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'resource_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'transit_gateway_attachment_id' => String,
        'transit_gateway_route_table_id' => String
      }
    },
    Aws_ec2_transit_gateway_route_table_propagationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ec2_transit_gateway_vpc_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['transit_gateway_id', 'vpc_id'],
          'providedAttributes' => ['dns_support', 'ipv6_support', 'tags', 'transit_gateway_default_route_table_association', 'transit_gateway_default_route_table_propagation', 'vpc_owner_id']
        }
      },
      attributes => {
        'aws_ec2_transit_gateway_vpc_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'dns_support' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_support' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_ids' => Array[String],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'transit_gateway_default_route_table_association' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'transit_gateway_default_route_table_propagation' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'transit_gateway_id' => String,
        'vpc_id' => String,
        'vpc_owner_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ec2_transit_gateway_vpc_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ecr_lifecycle_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['policy', 'repository'],
          'providedAttributes' => ['registry_id']
        }
      },
      attributes => {
        'aws_ecr_lifecycle_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => String,
        'registry_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'repository' => String
      }
    },
    Aws_ecr_lifecycle_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ecr_repository => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'registry_id', 'repository_url', 'tags']
        }
      },
      attributes => {
        'aws_ecr_repository_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'registry_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'repository_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_ecr_repositoryHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ecr_repository_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['repository'],
          'providedAttributes' => ['registry_id']
        }
      },
      attributes => {
        'aws_ecr_repository_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => String,
        'registry_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'repository' => String
      }
    },
    Aws_ecr_repository_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ecs_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'tags']
        }
      },
      attributes => {
        'aws_ecs_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_ecs_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ecs_service => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cluster', 'iam_role', 'launch_type', 'load_balancer', 'name', 'ordered_placement_strategy', 'placement_constraints', 'placement_strategy', 'propagate_tags', 'scheduling_strategy', 'service_registries'],
          'providedAttributes' => ['cluster', 'deployment_controller', 'deployment_maximum_percent', 'deployment_minimum_healthy_percent', 'desired_count', 'enable_ecs_managed_tags', 'health_check_grace_period_seconds', 'iam_role', 'launch_type', 'load_balancer', 'network_configuration', 'ordered_placement_strategy', 'placement_constraints', 'placement_strategy', 'platform_version', 'propagate_tags', 'scheduling_strategy', 'service_registries', 'tags']
        }
      },
      attributes => {
        'aws_ecs_service_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cluster' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deployment_controller' => {
          'type' => Optional[Array[Aws_ecs_service_deployment_controller_216]],
          'value' => undef
        },
        'deployment_maximum_percent' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'deployment_minimum_healthy_percent' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'desired_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'enable_ecs_managed_tags' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'health_check_grace_period_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'iam_role' => {
          'type' => Optional[String],
          'value' => undef
        },
        'launch_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'load_balancer' => {
          'type' => Optional[Array[Aws_ecs_service_load_balancer_217]],
          'value' => undef
        },
        'name' => String,
        'network_configuration' => {
          'type' => Optional[Array[Aws_ecs_service_network_configuration_218]],
          'value' => undef
        },
        'ordered_placement_strategy' => {
          'type' => Optional[Array[Aws_ecs_service_ordered_placement_strategy_219]],
          'value' => undef
        },
        'placement_constraints' => {
          'type' => Optional[Array[Aws_ecs_service_placement_constraints_220]],
          'value' => undef
        },
        'placement_strategy' => {
          'type' => Optional[Array[Aws_ecs_service_placement_strategy_221]],
          'value' => undef
        },
        'platform_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'propagate_tags' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scheduling_strategy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'service_registries' => {
          'type' => Optional[Array[Aws_ecs_service_service_registries_222]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'task_definition' => String
      }
    },
    Aws_ecs_serviceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ecs_service_deployment_controller_216 => {
      attributes => {
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ecs_service_load_balancer_217 => {
      attributes => {
        'container_name' => String,
        'container_port' => Integer,
        'elb_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'target_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ecs_service_network_configuration_218 => {
      attributes => {
        'assign_public_ip' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnets' => Array[String]
      }
    },
    Aws_ecs_service_ordered_placement_strategy_219 => {
      attributes => {
        'field' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_ecs_service_placement_constraints_220 => {
      attributes => {
        'expression' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_ecs_service_placement_strategy_221 => {
      attributes => {
        'field' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_ecs_service_service_registries_222 => {
      attributes => {
        'container_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'container_port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'registry_arn' => String
      }
    },
    Aws_ecs_task_definition => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['container_definitions', 'cpu', 'execution_role_arn', 'family', 'ipc_mode', 'memory', 'network_mode', 'pid_mode', 'placement_constraints', 'requires_compatibilities', 'task_role_arn', 'volume'],
          'providedAttributes' => ['arn', 'cpu', 'execution_role_arn', 'ipc_mode', 'memory', 'network_mode', 'pid_mode', 'placement_constraints', 'requires_compatibilities', 'revision', 'tags', 'task_role_arn', 'volume']
        }
      },
      attributes => {
        'aws_ecs_task_definition_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'container_definitions' => String,
        'cpu' => {
          'type' => Optional[String],
          'value' => undef
        },
        'execution_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'family' => String,
        'ipc_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'memory' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'pid_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'placement_constraints' => {
          'type' => Optional[Array[Aws_ecs_task_definition_placement_constraints_223]],
          'value' => undef
        },
        'requires_compatibilities' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'revision' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'task_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume' => {
          'type' => Optional[Array[Aws_ecs_task_definition_volume_224]],
          'value' => undef
        }
      }
    },
    Aws_ecs_task_definitionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ecs_task_definition_placement_constraints_223 => {
      attributes => {
        'expression' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_ecs_task_definition_volume_224 => {
      attributes => {
        'docker_volume_configuration' => {
          'type' => Optional[Array[Aws_ecs_task_definition_volume_224_docker_volume_configuration_225]],
          'value' => undef
        },
        'host_path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_ecs_task_definition_volume_224_docker_volume_configuration_225 => {
      attributes => {
        'autoprovision' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'driver' => {
          'type' => Optional[String],
          'value' => undef
        },
        'driver_opts' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'labels' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_efs_file_system => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['creation_token', 'encrypted', 'kms_key_id', 'performance_mode'],
          'providedAttributes' => ['arn', 'creation_token', 'dns_name', 'encrypted', 'kms_key_id', 'performance_mode', 'provisioned_throughput_in_mibps', 'reference_name', 'tags', 'throughput_mode']
        }
      },
      attributes => {
        'aws_efs_file_system_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'creation_token' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dns_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'performance_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'provisioned_throughput_in_mibps' => {
          'type' => Optional[Float],
          'value' => undef
        },
        'reference_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'throughput_mode' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_efs_file_systemHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_efs_mount_target => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['file_system_id', 'ip_address', 'subnet_id'],
          'providedAttributes' => ['dns_name', 'file_system_arn', 'ip_address', 'network_interface_id', 'security_groups']
        }
      },
      attributes => {
        'aws_efs_mount_target_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'dns_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'file_system_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'file_system_id' => String,
        'ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnet_id' => String
      }
    },
    Aws_efs_mount_targetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_egress_only_internet_gateway => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['vpc_id']
        }
      },
      attributes => {
        'aws_egress_only_internet_gateway_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_id' => String
      }
    },
    Aws_egress_only_internet_gatewayHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_eip => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['public_ipv4_pool', 'vpc'],
          'providedAttributes' => ['allocation_id', 'associate_with_private_ip', 'association_id', 'domain', 'instance', 'network_interface', 'private_ip', 'public_ip', 'public_ipv4_pool', 'tags', 'vpc']
        }
      },
      attributes => {
        'aws_eip_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocation_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'associate_with_private_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'association_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_interface' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_ipv4_pool' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_eipHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_eip_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['allocation_id', 'allow_reassociation', 'instance_id', 'network_interface_id', 'private_ip_address', 'public_ip'],
          'providedAttributes' => ['allocation_id', 'allow_reassociation', 'instance_id', 'network_interface_id', 'private_ip_address', 'public_ip']
        }
      },
      attributes => {
        'aws_eip_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocation_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'allow_reassociation' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_ip' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_eip_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_eks_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'role_arn', 'vpc_config'],
          'providedAttributes' => ['arn', 'certificate_authority', 'created_at', 'endpoint', 'platform_version', 'version']
        }
      },
      attributes => {
        'aws_eks_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_authority' => {
          'type' => Optional[Array[Aws_eks_cluster_certificate_authority_226]],
          'value' => undef
        },
        'created_at' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'platform_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => String,
        'version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_config' => Array[Aws_eks_cluster_vpc_config_227]
      }
    },
    Aws_eks_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_eks_cluster_certificate_authority_226 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_eks_cluster_vpc_config_227 => {
      attributes => {
        'security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnet_ids' => Array[String],
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastic_beanstalk_application => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['appversion_lifecycle', 'description']
        }
      },
      attributes => {
        'aws_elastic_beanstalk_application_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'appversion_lifecycle' => {
          'type' => Optional[Array[Aws_elastic_beanstalk_application_appversion_lifecycle_228]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_elastic_beanstalk_applicationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elastic_beanstalk_application_appversion_lifecycle_228 => {
      attributes => {
        'delete_source_from_s3' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'max_age_in_days' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'max_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'service_role' => String
      }
    },
    Aws_elastic_beanstalk_application_version => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application', 'bucket', 'key', 'name'],
          'providedAttributes' => ['description', 'force_delete']
        }
      },
      attributes => {
        'aws_elastic_beanstalk_application_version_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application' => String,
        'bucket' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'force_delete' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'key' => String,
        'name' => String
      }
    },
    Aws_elastic_beanstalk_application_versionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elastic_beanstalk_configuration_template => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application', 'environment_id', 'name', 'solution_stack_name'],
          'providedAttributes' => ['description', 'environment_id', 'setting', 'solution_stack_name']
        }
      },
      attributes => {
        'aws_elastic_beanstalk_configuration_template_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'environment_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'setting' => {
          'type' => Optional[Array[Aws_elastic_beanstalk_configuration_template_setting_229]],
          'value' => undef
        },
        'solution_stack_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastic_beanstalk_configuration_templateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elastic_beanstalk_configuration_template_setting_229 => {
      attributes => {
        'name' => String,
        'namespace' => String,
        'resource' => {
          'type' => Optional[String],
          'value' => undef
        },
        'value' => String
      }
    },
    Aws_elastic_beanstalk_environment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cname_prefix', 'name', 'tier'],
          'providedAttributes' => ['all_settings', 'arn', 'autoscaling_groups', 'cname', 'cname_prefix', 'description', 'instances', 'launch_configurations', 'load_balancers', 'platform_arn', 'poll_interval', 'queues', 'setting', 'solution_stack_name', 'tags', 'template_name', 'tier', 'triggers', 'version_label', 'wait_for_ready_timeout']
        }
      },
      attributes => {
        'aws_elastic_beanstalk_environment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'all_settings' => {
          'type' => Optional[Array[Aws_elastic_beanstalk_environment_all_settings_230]],
          'value' => undef
        },
        'application' => String,
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'autoscaling_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'cname' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cname_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instances' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'launch_configurations' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'load_balancers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'platform_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'poll_interval' => {
          'type' => Optional[String],
          'value' => undef
        },
        'queues' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'setting' => {
          'type' => Optional[Array[Aws_elastic_beanstalk_environment_setting_231]],
          'value' => undef
        },
        'solution_stack_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'template_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'triggers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'version_label' => {
          'type' => Optional[String],
          'value' => undef
        },
        'wait_for_ready_timeout' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastic_beanstalk_environmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elastic_beanstalk_environment_all_settings_230 => {
      attributes => {
        'name' => String,
        'namespace' => String,
        'resource' => {
          'type' => Optional[String],
          'value' => undef
        },
        'value' => String
      }
    },
    Aws_elastic_beanstalk_environment_setting_231 => {
      attributes => {
        'name' => String,
        'namespace' => String,
        'resource' => {
          'type' => Optional[String],
          'value' => undef
        },
        'value' => String
      }
    },
    Aws_elasticache_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'availability_zones', 'cluster_id', 'engine', 'port', 'replication_group_id', 'security_group_names', 'snapshot_arns', 'snapshot_name', 'subnet_group_name'],
          'providedAttributes' => ['apply_immediately', 'availability_zone', 'availability_zones', 'az_mode', 'cache_nodes', 'cluster_address', 'configuration_endpoint', 'engine', 'engine_version', 'maintenance_window', 'node_type', 'notification_topic_arn', 'num_cache_nodes', 'parameter_group_name', 'port', 'preferred_availability_zones', 'replication_group_id', 'security_group_ids', 'security_group_names', 'snapshot_arns', 'snapshot_name', 'snapshot_retention_limit', 'snapshot_window', 'subnet_group_name', 'tags']
        }
      },
      attributes => {
        'aws_elasticache_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'apply_immediately' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'az_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cache_nodes' => {
          'type' => Optional[Array[Aws_elasticache_cluster_cache_nodes_232]],
          'value' => undef
        },
        'cluster_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_id' => String,
        'configuration_endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'node_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'notification_topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'num_cache_nodes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'parameter_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'preferred_availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'replication_group_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'security_group_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'snapshot_arns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'snapshot_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'snapshot_retention_limit' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_elasticache_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elasticache_cluster_cache_nodes_232 => {
      attributes => {
        'address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_elasticache_parameter_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'family', 'name'],
          'providedAttributes' => ['description', 'parameter']
        }
      },
      attributes => {
        'aws_elasticache_parameter_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'family' => String,
        'name' => String,
        'parameter' => {
          'type' => Optional[Array[Aws_elasticache_parameter_group_parameter_233]],
          'value' => undef
        }
      }
    },
    Aws_elasticache_parameter_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elasticache_parameter_group_parameter_233 => {
      attributes => {
        'name' => String,
        'value' => String
      }
    },
    Aws_elasticache_replication_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['at_rest_encryption_enabled', 'auth_token', 'availability_zones', 'engine', 'port', 'replication_group_id', 'security_group_names', 'snapshot_arns', 'snapshot_name', 'subnet_group_name', 'transit_encryption_enabled'],
          'providedAttributes' => ['apply_immediately', 'at_rest_encryption_enabled', 'auth_token', 'auto_minor_version_upgrade', 'automatic_failover_enabled', 'availability_zones', 'cluster_mode', 'configuration_endpoint_address', 'engine', 'engine_version', 'maintenance_window', 'member_clusters', 'node_type', 'notification_topic_arn', 'number_cache_clusters', 'parameter_group_name', 'port', 'primary_endpoint_address', 'security_group_ids', 'security_group_names', 'snapshot_arns', 'snapshot_name', 'snapshot_retention_limit', 'snapshot_window', 'subnet_group_name', 'tags', 'transit_encryption_enabled']
        }
      },
      attributes => {
        'aws_elasticache_replication_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'apply_immediately' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'at_rest_encryption_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auth_token' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_minor_version_upgrade' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'automatic_failover_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'cluster_mode' => {
          'type' => Optional[Array[Aws_elasticache_replication_group_cluster_mode_234]],
          'value' => undef
        },
        'configuration_endpoint_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'member_clusters' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'node_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'notification_topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'number_cache_clusters' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'parameter_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'primary_endpoint_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'replication_group_description' => String,
        'replication_group_id' => String,
        'security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'security_group_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'snapshot_arns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'snapshot_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'snapshot_retention_limit' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'transit_encryption_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_elasticache_replication_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elasticache_replication_group_cluster_mode_234 => {
      attributes => {
        'num_node_groups' => Integer,
        'replicas_per_node_group' => Integer
      }
    },
    Aws_elasticache_security_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name', 'security_group_names'],
          'providedAttributes' => ['description']
        }
      },
      attributes => {
        'aws_elasticache_security_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'security_group_names' => Array[String]
      }
    },
    Aws_elasticache_security_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elasticache_subnet_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['description']
        }
      },
      attributes => {
        'aws_elasticache_subnet_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'subnet_ids' => Array[String]
      }
    },
    Aws_elasticache_subnet_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elasticsearch_domain => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['domain_name', 'vpc_options'],
          'providedAttributes' => ['access_policies', 'advanced_options', 'arn', 'cluster_config', 'cognito_options', 'domain_id', 'ebs_options', 'elasticsearch_version', 'encrypt_at_rest', 'endpoint', 'kibana_endpoint', 'log_publishing_options', 'node_to_node_encryption', 'snapshot_options', 'tags', 'vpc_options']
        }
      },
      attributes => {
        'aws_elasticsearch_domain_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'access_policies' => {
          'type' => Optional[String],
          'value' => undef
        },
        'advanced_options' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_config' => {
          'type' => Optional[Array[Aws_elasticsearch_domain_cluster_config_235]],
          'value' => undef
        },
        'cognito_options' => {
          'type' => Optional[Array[Aws_elasticsearch_domain_cognito_options_236]],
          'value' => undef
        },
        'domain_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name' => String,
        'ebs_options' => {
          'type' => Optional[Array[Aws_elasticsearch_domain_ebs_options_237]],
          'value' => undef
        },
        'elasticsearch_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encrypt_at_rest' => {
          'type' => Optional[Array[Aws_elasticsearch_domain_encrypt_at_rest_238]],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kibana_endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_publishing_options' => {
          'type' => Optional[Array[Aws_elasticsearch_domain_log_publishing_options_239]],
          'value' => undef
        },
        'node_to_node_encryption' => {
          'type' => Optional[Array[Aws_elasticsearch_domain_node_to_node_encryption_240]],
          'value' => undef
        },
        'snapshot_options' => {
          'type' => Optional[Array[Aws_elasticsearch_domain_snapshot_options_241]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_options' => {
          'type' => Optional[Array[Aws_elasticsearch_domain_vpc_options_242]],
          'value' => undef
        }
      }
    },
    Aws_elasticsearch_domainHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elasticsearch_domain_cluster_config_235 => {
      attributes => {
        'dedicated_master_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'dedicated_master_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'dedicated_master_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'instance_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'zone_awareness_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_elasticsearch_domain_cognito_options_236 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'identity_pool_id' => String,
        'role_arn' => String,
        'user_pool_id' => String
      }
    },
    Aws_elasticsearch_domain_ebs_options_237 => {
      attributes => {
        'ebs_enabled' => Boolean,
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elasticsearch_domain_encrypt_at_rest_238 => {
      attributes => {
        'enabled' => Boolean,
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elasticsearch_domain_log_publishing_options_239 => {
      attributes => {
        'cloudwatch_log_group_arn' => String,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'log_type' => String
      }
    },
    Aws_elasticsearch_domain_node_to_node_encryption_240 => {
      attributes => {
        'enabled' => Boolean
      }
    },
    Aws_elasticsearch_domain_policy => {
      attributes => {
        'aws_elasticsearch_domain_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'access_policies' => String,
        'domain_name' => String
      }
    },
    Aws_elasticsearch_domain_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elasticsearch_domain_snapshot_options_241 => {
      attributes => {
        'automated_snapshot_start_hour' => Integer
      }
    },
    Aws_elasticsearch_domain_vpc_options_242 => {
      attributes => {
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnet_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_pipeline => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'aws_kms_key_arn', 'content_config', 'content_config_permissions', 'name', 'notifications', 'output_bucket', 'thumbnail_config', 'thumbnail_config_permissions']
        }
      },
      attributes => {
        'aws_elastictranscoder_pipeline_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'aws_kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content_config' => {
          'type' => Optional[Array[Aws_elastictranscoder_pipeline_content_config_243]],
          'value' => undef
        },
        'content_config_permissions' => {
          'type' => Optional[Array[Aws_elastictranscoder_pipeline_content_config_permissions_244]],
          'value' => undef
        },
        'input_bucket' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'notifications' => {
          'type' => Optional[Array[Aws_elastictranscoder_pipeline_notifications_245]],
          'value' => undef
        },
        'output_bucket' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role' => String,
        'thumbnail_config' => {
          'type' => Optional[Array[Aws_elastictranscoder_pipeline_thumbnail_config_246]],
          'value' => undef
        },
        'thumbnail_config_permissions' => {
          'type' => Optional[Array[Aws_elastictranscoder_pipeline_thumbnail_config_permissions_247]],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_pipelineHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elastictranscoder_pipeline_content_config_243 => {
      attributes => {
        'bucket' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_class' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_pipeline_content_config_permissions_244 => {
      attributes => {
        'access' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'grantee' => {
          'type' => Optional[String],
          'value' => undef
        },
        'grantee_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_pipeline_notifications_245 => {
      attributes => {
        'completed' => {
          'type' => Optional[String],
          'value' => undef
        },
        'error' => {
          'type' => Optional[String],
          'value' => undef
        },
        'progressing' => {
          'type' => Optional[String],
          'value' => undef
        },
        'warning' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_pipeline_thumbnail_config_246 => {
      attributes => {
        'bucket' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_class' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_pipeline_thumbnail_config_permissions_247 => {
      attributes => {
        'access' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'grantee' => {
          'type' => Optional[String],
          'value' => undef
        },
        'grantee_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_preset => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['audio', 'audio_codec_options', 'container', 'description', 'name', 'thumbnails', 'video', 'video_codec_options', 'video_watermarks'],
          'providedAttributes' => ['arn', 'audio', 'audio_codec_options', 'description', 'name', 'thumbnails', 'type', 'video', 'video_codec_options', 'video_watermarks']
        }
      },
      attributes => {
        'aws_elastictranscoder_preset_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'audio' => {
          'type' => Optional[Array[Aws_elastictranscoder_preset_audio_248]],
          'value' => undef
        },
        'audio_codec_options' => {
          'type' => Optional[Array[Aws_elastictranscoder_preset_audio_codec_options_249]],
          'value' => undef
        },
        'container' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'thumbnails' => {
          'type' => Optional[Array[Aws_elastictranscoder_preset_thumbnails_250]],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'video' => {
          'type' => Optional[Array[Aws_elastictranscoder_preset_video_251]],
          'value' => undef
        },
        'video_codec_options' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'video_watermarks' => {
          'type' => Optional[Array[Aws_elastictranscoder_preset_video_watermarks_252]],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_presetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elastictranscoder_preset_audio_248 => {
      attributes => {
        'audio_packing_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bit_rate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'channels' => {
          'type' => Optional[String],
          'value' => undef
        },
        'codec' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sample_rate' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_preset_audio_codec_options_249 => {
      attributes => {
        'bit_depth' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bit_order' => {
          'type' => Optional[String],
          'value' => undef
        },
        'profile' => {
          'type' => Optional[String],
          'value' => undef
        },
        'signed' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_preset_thumbnails_250 => {
      attributes => {
        'aspect_ratio' => {
          'type' => Optional[String],
          'value' => undef
        },
        'format' => {
          'type' => Optional[String],
          'value' => undef
        },
        'interval' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_height' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_width' => {
          'type' => Optional[String],
          'value' => undef
        },
        'padding_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resolution' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sizing_policy' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_preset_video_251 => {
      attributes => {
        'aspect_ratio' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bit_rate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'codec' => {
          'type' => Optional[String],
          'value' => undef
        },
        'display_aspect_ratio' => {
          'type' => Optional[String],
          'value' => undef
        },
        'fixed_gop' => {
          'type' => Optional[String],
          'value' => undef
        },
        'frame_rate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'keyframes_max_dist' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_frame_rate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_height' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_width' => {
          'type' => Optional[String],
          'value' => undef
        },
        'padding_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resolution' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sizing_policy' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elastictranscoder_preset_video_watermarks_252 => {
      attributes => {
        'horizontal_align' => {
          'type' => Optional[String],
          'value' => undef
        },
        'horizontal_offset' => {
          'type' => Optional[String],
          'value' => undef
        },
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_height' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_width' => {
          'type' => Optional[String],
          'value' => undef
        },
        'opacity' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sizing_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'target' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vertical_align' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vertical_offset' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elb => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['internal', 'name', 'name_prefix'],
          'providedAttributes' => ['access_logs', 'arn', 'availability_zones', 'connection_draining', 'connection_draining_timeout', 'cross_zone_load_balancing', 'dns_name', 'health_check', 'idle_timeout', 'instances', 'internal', 'name', 'name_prefix', 'security_groups', 'source_security_group', 'source_security_group_id', 'subnets', 'tags', 'zone_id']
        }
      },
      attributes => {
        'aws_elb_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'access_logs' => {
          'type' => Optional[Array[Aws_elb_access_logs_253]],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'connection_draining' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'connection_draining_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cross_zone_load_balancing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'dns_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'health_check' => {
          'type' => Optional[Array[Aws_elb_health_check_254]],
          'value' => undef
        },
        'idle_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'instances' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'internal' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'listener' => Array[Aws_elb_listener_255],
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'source_security_group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_security_group_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnets' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'zone_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_elbHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elb_access_logs_253 => {
      attributes => {
        'bucket' => String,
        'bucket_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'interval' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_elb_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['elb', 'instance']
        }
      },
      attributes => {
        'aws_elb_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'elb' => String,
        'instance' => String
      }
    },
    Aws_elb_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_elb_health_check_254 => {
      attributes => {
        'healthy_threshold' => Integer,
        'interval' => Integer,
        'target' => String,
        'timeout' => Integer,
        'unhealthy_threshold' => Integer
      }
    },
    Aws_elb_listener_255 => {
      attributes => {
        'instance_port' => Integer,
        'instance_protocol' => String,
        'lb_port' => Integer,
        'lb_protocol' => String,
        'ssl_certificate_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_emr_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['additional_info', 'applications', 'autoscaling_role', 'bootstrap_action', 'configurations', 'configurations_json', 'core_instance_type', 'custom_ami_id', 'ebs_root_volume_size', 'ec2_attributes', 'instance_group', 'keep_job_flow_alive_when_no_steps', 'kerberos_attributes', 'log_uri', 'master_instance_type', 'name', 'release_label', 'scale_down_behavior', 'security_configuration', 'service_role', 'step'],
          'providedAttributes' => ['additional_info', 'applications', 'autoscaling_role', 'bootstrap_action', 'cluster_state', 'configurations', 'configurations_json', 'core_instance_count', 'core_instance_type', 'custom_ami_id', 'ebs_root_volume_size', 'ec2_attributes', 'instance_group', 'keep_job_flow_alive_when_no_steps', 'kerberos_attributes', 'log_uri', 'master_instance_type', 'master_public_dns', 'scale_down_behavior', 'security_configuration', 'step', 'tags', 'termination_protection', 'visible_to_all_users']
        }
      },
      attributes => {
        'aws_emr_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'additional_info' => {
          'type' => Optional[String],
          'value' => undef
        },
        'applications' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'autoscaling_role' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bootstrap_action' => {
          'type' => Optional[Array[Aws_emr_cluster_bootstrap_action_256]],
          'value' => undef
        },
        'cluster_state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'configurations' => {
          'type' => Optional[String],
          'value' => undef
        },
        'configurations_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'core_instance_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'core_instance_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_ami_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ebs_root_volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ec2_attributes' => {
          'type' => Optional[Array[Aws_emr_cluster_ec2_attributes_257]],
          'value' => undef
        },
        'instance_group' => {
          'type' => Optional[Array[Aws_emr_cluster_instance_group_258]],
          'value' => undef
        },
        'keep_job_flow_alive_when_no_steps' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kerberos_attributes' => {
          'type' => Optional[Array[Aws_emr_cluster_kerberos_attributes_260]],
          'value' => undef
        },
        'log_uri' => {
          'type' => Optional[String],
          'value' => undef
        },
        'master_instance_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'master_public_dns' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'release_label' => String,
        'scale_down_behavior' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_configuration' => {
          'type' => Optional[String],
          'value' => undef
        },
        'service_role' => String,
        'step' => {
          'type' => Optional[Array[Aws_emr_cluster_step_261]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'termination_protection' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'visible_to_all_users' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_emr_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_emr_cluster_bootstrap_action_256 => {
      attributes => {
        'args' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'path' => String
      }
    },
    Aws_emr_cluster_ec2_attributes_257 => {
      attributes => {
        'additional_master_security_groups' => {
          'type' => Optional[String],
          'value' => undef
        },
        'additional_slave_security_groups' => {
          'type' => Optional[String],
          'value' => undef
        },
        'emr_managed_master_security_group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'emr_managed_slave_security_group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_profile' => String,
        'key_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'service_access_security_group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_emr_cluster_instance_group_258 => {
      attributes => {
        'autoscaling_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bid_price' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ebs_config' => {
          'type' => Optional[Array[Aws_emr_cluster_instance_group_258_ebs_config_259]],
          'value' => undef
        },
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'instance_role' => String,
        'instance_type' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_emr_cluster_instance_group_258_ebs_config_259 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'size' => Integer,
        'type' => String,
        'volumes_per_instance' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_emr_cluster_kerberos_attributes_260 => {
      attributes => {
        'ad_domain_join_password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ad_domain_join_user' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cross_realm_trust_principal_password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kdc_admin_password' => String,
        'realm' => String
      }
    },
    Aws_emr_cluster_step_261 => {
      attributes => {
        'action_on_failure' => String,
        'hadoop_jar_step' => Array[Aws_emr_cluster_step_261_hadoop_jar_step_262],
        'name' => String
      }
    },
    Aws_emr_cluster_step_261_hadoop_jar_step_262 => {
      attributes => {
        'args' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'jar' => String,
        'main_class' => {
          'type' => Optional[String],
          'value' => undef
        },
        'properties' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_emr_instance_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cluster_id', 'ebs_config', 'ebs_optimized', 'instance_type', 'name'],
          'providedAttributes' => ['ebs_config', 'ebs_optimized', 'instance_count', 'name', 'running_instance_count', 'status']
        }
      },
      attributes => {
        'aws_emr_instance_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_id' => String,
        'ebs_config' => {
          'type' => Optional[Array[Aws_emr_instance_group_ebs_config_263]],
          'value' => undef
        },
        'ebs_optimized' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'instance_type' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'running_instance_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_emr_instance_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_emr_instance_group_ebs_config_263 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'size' => Integer,
        'type' => String,
        'volumes_per_instance' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_emr_security_configuration => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['configuration', 'name', 'name_prefix'],
          'providedAttributes' => ['creation_date', 'name', 'name_prefix']
        }
      },
      attributes => {
        'aws_emr_security_configuration_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'configuration' => String,
        'creation_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_emr_security_configurationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_flow_log => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['eni_id', 'iam_role_arn', 'log_destination', 'log_destination_type', 'log_group_name', 'subnet_id', 'traffic_type', 'vpc_id'],
          'providedAttributes' => ['eni_id', 'iam_role_arn', 'log_destination', 'log_destination_type', 'log_group_name', 'subnet_id', 'vpc_id']
        }
      },
      attributes => {
        'aws_flow_log_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'eni_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_destination' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_destination_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'traffic_type' => String,
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_flow_logHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_gamelift_alias => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'description']
        }
      },
      attributes => {
        'aws_gamelift_alias_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'routing_strategy' => Array[Aws_gamelift_alias_routing_strategy_264]
      }
    },
    Aws_gamelift_aliasHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_gamelift_alias_routing_strategy_264 => {
      attributes => {
        'fleet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'message' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_gamelift_build => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['operating_system', 'storage_location'],
          'providedAttributes' => ['version']
        }
      },
      attributes => {
        'aws_gamelift_build_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'operating_system' => String,
        'storage_location' => Array[Aws_gamelift_build_storage_location_265],
        'version' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_gamelift_buildHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_gamelift_build_storage_location_265 => {
      attributes => {
        'bucket' => String,
        'key' => String,
        'role_arn' => String
      }
    },
    Aws_gamelift_fleet => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['build_id', 'ec2_instance_type'],
          'providedAttributes' => ['arn', 'description', 'ec2_inbound_permission', 'log_paths', 'metric_groups', 'new_game_session_protection_policy', 'operating_system', 'resource_creation_limit_policy', 'runtime_configuration']
        }
      },
      attributes => {
        'aws_gamelift_fleet_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'build_id' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ec2_inbound_permission' => {
          'type' => Optional[Array[Aws_gamelift_fleet_ec2_inbound_permission_266]],
          'value' => undef
        },
        'ec2_instance_type' => String,
        'log_paths' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'metric_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'new_game_session_protection_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'operating_system' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_creation_limit_policy' => {
          'type' => Optional[Array[Aws_gamelift_fleet_resource_creation_limit_policy_267]],
          'value' => undef
        },
        'runtime_configuration' => {
          'type' => Optional[Array[Aws_gamelift_fleet_runtime_configuration_268]],
          'value' => undef
        }
      }
    },
    Aws_gamelift_fleetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_gamelift_fleet_ec2_inbound_permission_266 => {
      attributes => {
        'from_port' => Integer,
        'ip_range' => String,
        'protocol' => String,
        'to_port' => Integer
      }
    },
    Aws_gamelift_fleet_resource_creation_limit_policy_267 => {
      attributes => {
        'new_game_sessions_per_creator' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'policy_period_in_minutes' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_gamelift_fleet_runtime_configuration_268 => {
      attributes => {
        'game_session_activation_timeout_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'max_concurrent_game_session_activations' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'server_process' => {
          'type' => Optional[Array[Aws_gamelift_fleet_runtime_configuration_268_server_process_269]],
          'value' => undef
        }
      }
    },
    Aws_gamelift_fleet_runtime_configuration_268_server_process_269 => {
      attributes => {
        'concurrent_executions' => Integer,
        'launch_path' => String,
        'parameters' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_gamelift_game_session_queue => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'destinations', 'player_latency_policy', 'timeout_in_seconds']
        }
      },
      attributes => {
        'aws_gamelift_game_session_queue_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'destinations' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'player_latency_policy' => {
          'type' => Optional[Array[Aws_gamelift_game_session_queue_player_latency_policy_270]],
          'value' => undef
        },
        'timeout_in_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_gamelift_game_session_queueHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_gamelift_game_session_queue_player_latency_policy_270 => {
      attributes => {
        'maximum_individual_player_latency_milliseconds' => Integer,
        'policy_duration_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_glacier_vault => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['access_policy', 'arn', 'location', 'notification', 'tags']
        }
      },
      attributes => {
        'aws_glacier_vault_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'access_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'notification' => {
          'type' => Optional[Array[Aws_glacier_vault_notification_271]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_glacier_vaultHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glacier_vault_lock => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['complete_lock', 'policy', 'vault_name'],
          'providedAttributes' => ['ignore_deletion_error']
        }
      },
      attributes => {
        'aws_glacier_vault_lock_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'complete_lock' => Boolean,
        'ignore_deletion_error' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'policy' => String,
        'vault_name' => String
      }
    },
    Aws_glacier_vault_lockHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glacier_vault_notification_271 => {
      attributes => {
        'events' => Array[String],
        'sns_topic' => String
      }
    },
    Aws_globalaccelerator_accelerator => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['attributes', 'enabled', 'ip_address_type', 'ip_sets']
        }
      },
      attributes => {
        'aws_globalaccelerator_accelerator_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'attributes' => {
          'type' => Optional[Array[Aws_globalaccelerator_accelerator_attributes_272]],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ip_address_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ip_sets' => {
          'type' => Optional[Array[Aws_globalaccelerator_accelerator_ip_sets_273]],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_globalaccelerator_acceleratorHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_globalaccelerator_accelerator_attributes_272 => {
      attributes => {
        'flow_logs_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'flow_logs_s3_bucket' => {
          'type' => Optional[String],
          'value' => undef
        },
        'flow_logs_s3_prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_globalaccelerator_accelerator_ip_sets_273 => {
      attributes => {
        'ip_addresses' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'ip_family' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_catalog_database => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['catalog_id', 'name'],
          'providedAttributes' => ['catalog_id', 'description', 'location_uri', 'parameters']
        }
      },
      attributes => {
        'aws_glue_catalog_database_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'catalog_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'location_uri' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_glue_catalog_databaseHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glue_catalog_table => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['catalog_id', 'database_name', 'name'],
          'providedAttributes' => ['catalog_id', 'description', 'owner', 'parameters', 'partition_keys', 'retention', 'storage_descriptor', 'table_type', 'view_expanded_text', 'view_original_text']
        }
      },
      attributes => {
        'aws_glue_catalog_table_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'catalog_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'database_name' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'owner' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'partition_keys' => {
          'type' => Optional[Array[Aws_glue_catalog_table_partition_keys_274]],
          'value' => undef
        },
        'retention' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'storage_descriptor' => {
          'type' => Optional[Array[Aws_glue_catalog_table_storage_descriptor_275]],
          'value' => undef
        },
        'table_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'view_expanded_text' => {
          'type' => Optional[String],
          'value' => undef
        },
        'view_original_text' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_catalog_tableHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glue_catalog_table_partition_keys_274 => {
      attributes => {
        'comment' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_catalog_table_storage_descriptor_275 => {
      attributes => {
        'bucket_columns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'columns' => {
          'type' => Optional[Array[Aws_glue_catalog_table_storage_descriptor_275_columns_276]],
          'value' => undef
        },
        'compressed' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'input_format' => {
          'type' => Optional[String],
          'value' => undef
        },
        'location' => {
          'type' => Optional[String],
          'value' => undef
        },
        'number_of_buckets' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'output_format' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'ser_de_info' => {
          'type' => Optional[Array[Aws_glue_catalog_table_storage_descriptor_275_ser_de_info_277]],
          'value' => undef
        },
        'skewed_info' => {
          'type' => Optional[Array[Aws_glue_catalog_table_storage_descriptor_275_skewed_info_278]],
          'value' => undef
        },
        'sort_columns' => {
          'type' => Optional[Array[Aws_glue_catalog_table_storage_descriptor_275_sort_columns_279]],
          'value' => undef
        },
        'stored_as_sub_directories' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_glue_catalog_table_storage_descriptor_275_columns_276 => {
      attributes => {
        'comment' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_catalog_table_storage_descriptor_275_ser_de_info_277 => {
      attributes => {
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'serialization_library' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_catalog_table_storage_descriptor_275_skewed_info_278 => {
      attributes => {
        'skewed_column_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'skewed_column_value_location_maps' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'skewed_column_values' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_glue_catalog_table_storage_descriptor_275_sort_columns_279 => {
      attributes => {
        'column' => String,
        'sort_order' => Integer
      }
    },
    Aws_glue_classifier => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['grok_classifier', 'json_classifier', 'xml_classifier']
        }
      },
      attributes => {
        'aws_glue_classifier_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'grok_classifier' => {
          'type' => Optional[Array[Aws_glue_classifier_grok_classifier_280]],
          'value' => undef
        },
        'json_classifier' => {
          'type' => Optional[Array[Aws_glue_classifier_json_classifier_281]],
          'value' => undef
        },
        'name' => String,
        'xml_classifier' => {
          'type' => Optional[Array[Aws_glue_classifier_xml_classifier_282]],
          'value' => undef
        }
      }
    },
    Aws_glue_classifierHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glue_classifier_grok_classifier_280 => {
      attributes => {
        'classification' => String,
        'custom_patterns' => {
          'type' => Optional[String],
          'value' => undef
        },
        'grok_pattern' => String
      }
    },
    Aws_glue_classifier_json_classifier_281 => {
      attributes => {
        'json_path' => String
      }
    },
    Aws_glue_classifier_xml_classifier_282 => {
      attributes => {
        'classification' => String,
        'row_tag' => String
      }
    },
    Aws_glue_connection => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['catalog_id', 'name'],
          'providedAttributes' => ['catalog_id', 'connection_type', 'description', 'match_criteria', 'physical_connection_requirements']
        }
      },
      attributes => {
        'aws_glue_connection_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'catalog_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'connection_properties' => Hash[String, String],
        'connection_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'match_criteria' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'physical_connection_requirements' => {
          'type' => Optional[Array[Aws_glue_connection_physical_connection_requirements_283]],
          'value' => undef
        }
      }
    },
    Aws_glue_connectionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glue_connection_physical_connection_requirements_283 => {
      attributes => {
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_group_id_list' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_crawler => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['database_name', 'name'],
          'providedAttributes' => ['classifiers', 'configuration', 'description', 'dynamodb_target', 'jdbc_target', 's3_target', 'schedule', 'schema_change_policy', 'security_configuration', 'table_prefix']
        }
      },
      attributes => {
        'aws_glue_crawler_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'classifiers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'configuration' => {
          'type' => Optional[String],
          'value' => undef
        },
        'database_name' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dynamodb_target' => {
          'type' => Optional[Array[Aws_glue_crawler_dynamodb_target_284]],
          'value' => undef
        },
        'jdbc_target' => {
          'type' => Optional[Array[Aws_glue_crawler_jdbc_target_285]],
          'value' => undef
        },
        'name' => String,
        'role' => String,
        's3_target' => {
          'type' => Optional[Array[Aws_glue_crawler_s3_target_286]],
          'value' => undef
        },
        'schedule' => {
          'type' => Optional[String],
          'value' => undef
        },
        'schema_change_policy' => {
          'type' => Optional[Array[Aws_glue_crawler_schema_change_policy_287]],
          'value' => undef
        },
        'security_configuration' => {
          'type' => Optional[String],
          'value' => undef
        },
        'table_prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_crawlerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glue_crawler_dynamodb_target_284 => {
      attributes => {
        'path' => String
      }
    },
    Aws_glue_crawler_jdbc_target_285 => {
      attributes => {
        'connection_name' => String,
        'exclusions' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'path' => String
      }
    },
    Aws_glue_crawler_s3_target_286 => {
      attributes => {
        'exclusions' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'path' => String
      }
    },
    Aws_glue_crawler_schema_change_policy_287 => {
      attributes => {
        'delete_behavior' => {
          'type' => Optional[String],
          'value' => undef
        },
        'update_behavior' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_job => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['allocated_capacity', 'connections', 'default_arguments', 'description', 'execution_property', 'max_retries', 'security_configuration', 'timeout']
        }
      },
      attributes => {
        'aws_glue_job_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocated_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'command' => Array[Aws_glue_job_command_288],
        'connections' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'default_arguments' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'execution_property' => {
          'type' => Optional[Array[Aws_glue_job_execution_property_289]],
          'value' => undef
        },
        'max_retries' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => String,
        'role_arn' => String,
        'security_configuration' => {
          'type' => Optional[String],
          'value' => undef
        },
        'timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_glue_jobHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glue_job_command_288 => {
      attributes => {
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'script_location' => String
      }
    },
    Aws_glue_job_execution_property_289 => {
      attributes => {
        'max_concurrent_runs' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_glue_security_configuration => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['encryption_configuration', 'name']
        }
      },
      attributes => {
        'aws_glue_security_configuration_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'encryption_configuration' => Array[Aws_glue_security_configuration_encryption_configuration_290],
        'name' => String
      }
    },
    Aws_glue_security_configurationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glue_security_configuration_encryption_configuration_290 => {
      attributes => {
        'cloudwatch_encryption' => Array[Aws_glue_security_configuration_encryption_configuration_290_cloudwatch_encryption_291],
        'job_bookmarks_encryption' => Array[Aws_glue_security_configuration_encryption_configuration_290_job_bookmarks_encryption_292],
        's3_encryption' => Array[Aws_glue_security_configuration_encryption_configuration_290_s3_encryption_293]
      }
    },
    Aws_glue_security_configuration_encryption_configuration_290_cloudwatch_encryption_291 => {
      attributes => {
        'cloudwatch_encryption_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_security_configuration_encryption_configuration_290_job_bookmarks_encryption_292 => {
      attributes => {
        'job_bookmarks_encryption_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_security_configuration_encryption_configuration_290_s3_encryption_293 => {
      attributes => {
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_encryption_mode' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_trigger => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'type'],
          'providedAttributes' => ['description', 'enabled', 'predicate', 'schedule']
        }
      },
      attributes => {
        'aws_glue_trigger_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'actions' => Array[Aws_glue_trigger_actions_294],
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'predicate' => {
          'type' => Optional[Array[Aws_glue_trigger_predicate_295]],
          'value' => undef
        },
        'schedule' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_glue_triggerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_glue_trigger_actions_294 => {
      attributes => {
        'arguments' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'job_name' => String,
        'timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_glue_trigger_predicate_295 => {
      attributes => {
        'conditions' => Array[Aws_glue_trigger_predicate_295_conditions_296],
        'logical' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_glue_trigger_predicate_295_conditions_296 => {
      attributes => {
        'job_name' => String,
        'logical_operator' => {
          'type' => Optional[String],
          'value' => undef
        },
        'state' => String
      }
    },
    Aws_guardduty_detector => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['account_id', 'enable', 'finding_publishing_frequency']
        }
      },
      attributes => {
        'aws_guardduty_detector_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'account_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'finding_publishing_frequency' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_guardduty_detectorHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_guardduty_ipset => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['detector_id', 'format']
        }
      },
      attributes => {
        'aws_guardduty_ipset_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'activate' => Boolean,
        'detector_id' => String,
        'format' => String,
        'location' => String,
        'name' => String
      }
    },
    Aws_guardduty_ipsetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_guardduty_member => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['account_id', 'detector_id', 'disable_email_notification', 'email', 'invitation_message'],
          'providedAttributes' => ['disable_email_notification', 'invitation_message', 'invite', 'relationship_status']
        }
      },
      attributes => {
        'aws_guardduty_member_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'account_id' => String,
        'detector_id' => String,
        'disable_email_notification' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'email' => String,
        'invitation_message' => {
          'type' => Optional[String],
          'value' => undef
        },
        'invite' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'relationship_status' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_guardduty_memberHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_guardduty_threatintelset => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['detector_id', 'format']
        }
      },
      attributes => {
        'aws_guardduty_threatintelset_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'activate' => Boolean,
        'detector_id' => String,
        'format' => String,
        'location' => String,
        'name' => String
      }
    },
    Aws_guardduty_threatintelsetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_access_key => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['pgp_key', 'user'],
          'providedAttributes' => ['encrypted_secret', 'key_fingerprint', 'pgp_key', 'secret', 'ses_smtp_password', 'status']
        }
      },
      attributes => {
        'aws_iam_access_key_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted_secret' => {
          'type' => Optional[String],
          'value' => undef
        },
        'key_fingerprint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'pgp_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'secret' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ses_smtp_password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user' => String
      }
    },
    Aws_iam_access_keyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_account_alias => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['account_alias']
        }
      },
      attributes => {
        'aws_iam_account_alias_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'account_alias' => String
      }
    },
    Aws_iam_account_aliasHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_account_password_policy => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['allow_users_to_change_password', 'expire_passwords', 'hard_expiry', 'max_password_age', 'minimum_password_length', 'password_reuse_prevention', 'require_lowercase_characters', 'require_numbers', 'require_symbols', 'require_uppercase_characters']
        }
      },
      attributes => {
        'aws_iam_account_password_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allow_users_to_change_password' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'expire_passwords' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'hard_expiry' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'max_password_age' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'minimum_password_length' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'password_reuse_prevention' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'require_lowercase_characters' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'require_numbers' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'require_symbols' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'require_uppercase_characters' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_iam_account_password_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_group => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'path', 'unique_id']
        }
      },
      attributes => {
        'aws_iam_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'unique_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_iam_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_group_membership => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['group', 'name']
        }
      },
      attributes => {
        'aws_iam_group_membership_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'group' => String,
        'name' => String,
        'users' => Array[String]
      }
    },
    Aws_iam_group_membershipHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_group_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['group', 'name', 'name_prefix'],
          'providedAttributes' => ['name', 'name_prefix']
        }
      },
      attributes => {
        'aws_iam_group_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'group' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => String
      }
    },
    Aws_iam_group_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_group_policy_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['group', 'policy_arn']
        }
      },
      attributes => {
        'aws_iam_group_policy_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'group' => String,
        'policy_arn' => String
      }
    },
    Aws_iam_group_policy_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_instance_profile => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix', 'path'],
          'providedAttributes' => ['arn', 'create_date', 'name', 'name_prefix', 'path', 'role', 'roles', 'unique_id']
        }
      },
      attributes => {
        'aws_iam_instance_profile_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'create_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role' => {
          'type' => Optional[String],
          'value' => undef
        },
        'roles' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'unique_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_iam_instance_profileHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_openid_connect_provider => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['client_id_list', 'url'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_iam_openid_connect_provider_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'client_id_list' => Array[String],
        'thumbprint_list' => Array[String],
        'url' => String
      }
    },
    Aws_iam_openid_connect_providerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name', 'name_prefix', 'path'],
          'providedAttributes' => ['arn', 'description', 'name', 'name_prefix', 'path']
        }
      },
      attributes => {
        'aws_iam_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => String
      }
    },
    Aws_iam_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_policy_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'policy_arn'],
          'providedAttributes' => ['groups', 'roles', 'users']
        }
      },
      attributes => {
        'aws_iam_policy_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'policy_arn' => String,
        'roles' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'users' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_iam_policy_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_role => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix', 'path'],
          'providedAttributes' => ['arn', 'create_date', 'description', 'force_detach_policies', 'max_session_duration', 'name', 'name_prefix', 'path', 'permissions_boundary', 'tags', 'unique_id']
        }
      },
      attributes => {
        'aws_iam_role_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'assume_role_policy' => String,
        'create_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'force_detach_policies' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'max_session_duration' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'permissions_boundary' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'unique_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_iam_roleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_role_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix', 'role'],
          'providedAttributes' => ['name', 'name_prefix']
        }
      },
      attributes => {
        'aws_iam_role_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => String,
        'role' => String
      }
    },
    Aws_iam_role_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_role_policy_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['policy_arn', 'role']
        }
      },
      attributes => {
        'aws_iam_role_policy_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'policy_arn' => String,
        'role' => String
      }
    },
    Aws_iam_role_policy_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_saml_provider => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'valid_until']
        }
      },
      attributes => {
        'aws_iam_saml_provider_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'saml_metadata_document' => String,
        'valid_until' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_iam_saml_providerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_server_certificate => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['certificate_body', 'certificate_chain', 'name', 'name_prefix', 'path', 'private_key'],
          'providedAttributes' => ['arn', 'certificate_chain', 'name', 'name_prefix', 'path']
        }
      },
      attributes => {
        'aws_iam_server_certificate_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_body' => String,
        'certificate_chain' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_key' => String
      }
    },
    Aws_iam_server_certificateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_service_linked_role => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['aws_service_name', 'custom_suffix'],
          'providedAttributes' => ['arn', 'create_date', 'custom_suffix', 'description', 'name', 'path', 'unique_id']
        }
      },
      attributes => {
        'aws_iam_service_linked_role_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'aws_service_name' => String,
        'create_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_suffix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'unique_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_iam_service_linked_roleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_user => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'force_destroy', 'path', 'permissions_boundary', 'tags', 'unique_id']
        }
      },
      attributes => {
        'aws_iam_user_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'force_destroy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'permissions_boundary' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'unique_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_iam_userHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_user_group_membership => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['user']
        }
      },
      attributes => {
        'aws_iam_user_group_membership_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'groups' => Array[String],
        'user' => String
      }
    },
    Aws_iam_user_group_membershipHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_user_login_profile => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['encrypted_password', 'key_fingerprint', 'password_length', 'password_reset_required']
        }
      },
      attributes => {
        'aws_iam_user_login_profile_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted_password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'key_fingerprint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'password_length' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'password_reset_required' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'pgp_key' => String,
        'user' => String
      }
    },
    Aws_iam_user_login_profileHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_user_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix', 'user'],
          'providedAttributes' => ['name', 'name_prefix']
        }
      },
      attributes => {
        'aws_iam_user_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => String,
        'user' => String
      }
    },
    Aws_iam_user_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_user_policy_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['policy_arn', 'user']
        }
      },
      attributes => {
        'aws_iam_user_policy_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'policy_arn' => String,
        'user' => String
      }
    },
    Aws_iam_user_policy_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iam_user_ssh_key => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['encoding', 'public_key', 'username'],
          'providedAttributes' => ['fingerprint', 'ssh_public_key_id', 'status']
        }
      },
      attributes => {
        'aws_iam_user_ssh_key_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'encoding' => String,
        'fingerprint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_key' => String,
        'ssh_public_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'username' => String
      }
    },
    Aws_iam_user_ssh_keyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_inspector_assessment_target => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'resource_group_arn']
        }
      },
      attributes => {
        'aws_inspector_assessment_target_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'resource_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_inspector_assessment_targetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_inspector_assessment_template => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['arn', 'duration', 'name', 'rules_package_arns', 'target_arn'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_inspector_assessment_template_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'duration' => Integer,
        'name' => String,
        'rules_package_arns' => Array[String],
        'target_arn' => String
      }
    },
    Aws_inspector_assessment_templateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_inspector_resource_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['tags'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_inspector_resource_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => Hash[String, String]
      }
    },
    Aws_inspector_resource_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['ami', 'associate_public_ip_address', 'availability_zone', 'cpu_core_count', 'cpu_threads_per_core', 'ebs_optimized', 'ephemeral_block_device', 'host_id', 'ipv6_address_count', 'ipv6_addresses', 'key_name', 'placement_group', 'private_ip', 'security_groups', 'subnet_id', 'tenancy', 'user_data', 'user_data_base64'],
          'providedAttributes' => ['arn', 'associate_public_ip_address', 'availability_zone', 'block_device', 'cpu_core_count', 'cpu_threads_per_core', 'credit_specification', 'disable_api_termination', 'ebs_block_device', 'ebs_optimized', 'ephemeral_block_device', 'get_password_data', 'host_id', 'iam_instance_profile', 'instance_initiated_shutdown_behavior', 'instance_state', 'ipv6_address_count', 'ipv6_addresses', 'key_name', 'monitoring', 'network_interface', 'network_interface_id', 'password_data', 'placement_group', 'primary_network_interface_id', 'private_dns', 'private_ip', 'public_dns', 'public_ip', 'root_block_device', 'security_groups', 'source_dest_check', 'subnet_id', 'tags', 'tenancy', 'user_data', 'user_data_base64', 'volume_tags', 'vpc_security_group_ids']
        }
      },
      attributes => {
        'aws_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'ami' => String,
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'associate_public_ip_address' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'block_device' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'cpu_core_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cpu_threads_per_core' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'credit_specification' => {
          'type' => Optional[Array[Aws_instance_credit_specification_297]],
          'value' => undef
        },
        'disable_api_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_block_device' => {
          'type' => Optional[Array[Aws_instance_ebs_block_device_298]],
          'value' => undef
        },
        'ebs_optimized' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ephemeral_block_device' => {
          'type' => Optional[Array[Aws_instance_ephemeral_block_device_299]],
          'value' => undef
        },
        'get_password_data' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'host_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_instance_profile' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_initiated_shutdown_behavior' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_type' => String,
        'ipv6_address_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ipv6_addresses' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'key_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'monitoring' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'network_interface' => {
          'type' => Optional[Array[Aws_instance_network_interface_300]],
          'value' => undef
        },
        'network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'password_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'placement_group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'primary_network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_dns' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_dns' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_block_device' => {
          'type' => Optional[Array[Aws_instance_root_block_device_301]],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'source_dest_check' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'tenancy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_data_base64' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_instance_credit_specification_297 => {
      attributes => {
        'cpu_credits' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_instance_ebs_block_device_298 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_name' => String,
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_instance_ephemeral_block_device_299 => {
      attributes => {
        'device_name' => String,
        'no_device' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'virtual_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_instance_network_interface_300 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_index' => Integer,
        'network_interface_id' => String
      }
    },
    Aws_instance_root_block_device_301 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_internet_gateway => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['owner_id', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_internet_gateway_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_internet_gatewayHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iot_certificate => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['csr'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_iot_certificate_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'active' => Boolean,
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'csr' => String
      }
    },
    Aws_iot_certificateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iot_policy => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'default_version_id']
        }
      },
      attributes => {
        'aws_iot_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_version_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'policy' => String
      }
    },
    Aws_iot_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iot_policy_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['policy', 'target']
        }
      },
      attributes => {
        'aws_iot_policy_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => String,
        'target' => String
      }
    },
    Aws_iot_policy_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iot_thing => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'attributes', 'default_client_id', 'thing_type_name', 'version']
        }
      },
      attributes => {
        'aws_iot_thing_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'attributes' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'default_client_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'thing_type_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'version' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_iot_thingHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iot_thing_principal_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['principal', 'thing']
        }
      },
      attributes => {
        'aws_iot_thing_principal_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'principal' => String,
        'thing' => String
      }
    },
    Aws_iot_thing_principal_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iot_thing_type => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'deprecated', 'properties']
        }
      },
      attributes => {
        'aws_iot_thing_type_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deprecated' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'properties' => {
          'type' => Optional[Array[Aws_iot_thing_type_properties_302]],
          'value' => undef
        }
      }
    },
    Aws_iot_thing_typeHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iot_thing_type_properties_302 => {
      attributes => {
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'searchable_attributes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_iot_topic_rule => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'cloudwatch_alarm', 'cloudwatch_metric', 'description', 'dynamodb', 'elasticsearch', 'firehose', 'kinesis', 'lambda', 'republish', 's3', 'sns', 'sqs']
        }
      },
      attributes => {
        'aws_iot_topic_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloudwatch_alarm' => {
          'type' => Optional[Array[Aws_iot_topic_rule_cloudwatch_alarm_303]],
          'value' => undef
        },
        'cloudwatch_metric' => {
          'type' => Optional[Array[Aws_iot_topic_rule_cloudwatch_metric_304]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dynamodb' => {
          'type' => Optional[Array[Aws_iot_topic_rule_dynamodb_305]],
          'value' => undef
        },
        'elasticsearch' => {
          'type' => Optional[Array[Aws_iot_topic_rule_elasticsearch_306]],
          'value' => undef
        },
        'enabled' => Boolean,
        'firehose' => {
          'type' => Optional[Array[Aws_iot_topic_rule_firehose_307]],
          'value' => undef
        },
        'kinesis' => {
          'type' => Optional[Array[Aws_iot_topic_rule_kinesis_308]],
          'value' => undef
        },
        'lambda' => {
          'type' => Optional[Array[Aws_iot_topic_rule_lambda_309]],
          'value' => undef
        },
        'name' => String,
        'republish' => {
          'type' => Optional[Array[Aws_iot_topic_rule_republish_310]],
          'value' => undef
        },
        's3' => {
          'type' => Optional[Array[Aws_iot_topic_rule_s3_311]],
          'value' => undef
        },
        'sns' => {
          'type' => Optional[Array[Aws_iot_topic_rule_sns_312]],
          'value' => undef
        },
        'sql' => String,
        'sql_version' => String,
        'sqs' => {
          'type' => Optional[Array[Aws_iot_topic_rule_sqs_313]],
          'value' => undef
        }
      }
    },
    Aws_iot_topic_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_iot_topic_rule_cloudwatch_alarm_303 => {
      attributes => {
        'alarm_name' => String,
        'role_arn' => String,
        'state_reason' => String,
        'state_value' => String
      }
    },
    Aws_iot_topic_rule_cloudwatch_metric_304 => {
      attributes => {
        'metric_name' => String,
        'metric_namespace' => String,
        'metric_timestamp' => {
          'type' => Optional[String],
          'value' => undef
        },
        'metric_unit' => String,
        'metric_value' => String,
        'role_arn' => String
      }
    },
    Aws_iot_topic_rule_dynamodb_305 => {
      attributes => {
        'hash_key_field' => String,
        'hash_key_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hash_key_value' => String,
        'payload_field' => {
          'type' => Optional[String],
          'value' => undef
        },
        'range_key_field' => String,
        'range_key_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'range_key_value' => String,
        'role_arn' => String,
        'table_name' => String
      }
    },
    Aws_iot_topic_rule_elasticsearch_306 => {
      attributes => {
        'endpoint' => String,
        'id' => String,
        'index' => String,
        'role_arn' => String,
        'type' => String
      }
    },
    Aws_iot_topic_rule_firehose_307 => {
      attributes => {
        'delivery_stream_name' => String,
        'role_arn' => String,
        'separator' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_iot_topic_rule_kinesis_308 => {
      attributes => {
        'partition_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => String,
        'stream_name' => String
      }
    },
    Aws_iot_topic_rule_lambda_309 => {
      attributes => {
        'function_arn' => String
      }
    },
    Aws_iot_topic_rule_republish_310 => {
      attributes => {
        'role_arn' => String,
        'topic' => String
      }
    },
    Aws_iot_topic_rule_s3_311 => {
      attributes => {
        'bucket_name' => String,
        'key' => String,
        'role_arn' => String
      }
    },
    Aws_iot_topic_rule_sns_312 => {
      attributes => {
        'message_format' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => String,
        'target_arn' => String
      }
    },
    Aws_iot_topic_rule_sqs_313 => {
      attributes => {
        'queue_url' => String,
        'role_arn' => String,
        'use_base64' => Boolean
      }
    },
    Aws_key_pair => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['key_name', 'key_name_prefix', 'public_key'],
          'providedAttributes' => ['fingerprint', 'key_name', 'key_name_prefix']
        }
      },
      attributes => {
        'aws_key_pair_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'fingerprint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'key_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'key_name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_key' => String
      }
    },
    Aws_key_pairHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_kinesis_analytics_application => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'cloudwatch_logging_options', 'code', 'create_timestamp', 'description', 'inputs', 'last_update_timestamp', 'outputs', 'reference_data_sources', 'status', 'version']
        }
      },
      attributes => {
        'aws_kinesis_analytics_application_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloudwatch_logging_options' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_cloudwatch_logging_options_314]],
          'value' => undef
        },
        'code' => {
          'type' => Optional[String],
          'value' => undef
        },
        'create_timestamp' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'inputs' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_inputs_315]],
          'value' => undef
        },
        'last_update_timestamp' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'outputs' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_outputs_328]],
          'value' => undef
        },
        'reference_data_sources' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_reference_data_sources_333]],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'version' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_kinesis_analytics_applicationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_kinesis_analytics_application_cloudwatch_logging_options_314 => {
      attributes => {
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_stream_arn' => String,
        'role_arn' => String
      }
    },
    Aws_kinesis_analytics_application_inputs_315 => {
      attributes => {
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kinesis_firehose' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_inputs_315_kinesis_firehose_316]],
          'value' => undef
        },
        'kinesis_stream' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_inputs_315_kinesis_stream_317]],
          'value' => undef
        },
        'name_prefix' => String,
        'parallelism' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_inputs_315_parallelism_318]],
          'value' => undef
        },
        'processing_configuration' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_inputs_315_processing_configuration_319]],
          'value' => undef
        },
        'schema' => Array[Aws_kinesis_analytics_application_inputs_315_schema_321],
        'starting_position_configuration' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_inputs_315_starting_position_configuration_327]],
          'value' => undef
        },
        'stream_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_analytics_application_inputs_315_kinesis_firehose_316 => {
      attributes => {
        'resource_arn' => String,
        'role_arn' => String
      }
    },
    Aws_kinesis_analytics_application_inputs_315_kinesis_stream_317 => {
      attributes => {
        'resource_arn' => String,
        'role_arn' => String
      }
    },
    Aws_kinesis_analytics_application_inputs_315_parallelism_318 => {
      attributes => {
        'count' => Integer
      }
    },
    Aws_kinesis_analytics_application_inputs_315_processing_configuration_319 => {
      attributes => {
        'lambda' => Array[Aws_kinesis_analytics_application_inputs_315_processing_configuration_319_lambda_320]
      }
    },
    Aws_kinesis_analytics_application_inputs_315_processing_configuration_319_lambda_320 => {
      attributes => {
        'resource_arn' => String,
        'role_arn' => String
      }
    },
    Aws_kinesis_analytics_application_inputs_315_schema_321 => {
      attributes => {
        'record_columns' => Array[Aws_kinesis_analytics_application_inputs_315_schema_321_record_columns_322],
        'record_encoding' => {
          'type' => Optional[String],
          'value' => undef
        },
        'record_format' => Array[Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323]
      }
    },
    Aws_kinesis_analytics_application_inputs_315_schema_321_record_columns_322 => {
      attributes => {
        'mapping' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'sql_type' => String
      }
    },
    Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323 => {
      attributes => {
        'mapping_parameters' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324]],
          'value' => undef
        },
        'record_format_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324 => {
      attributes => {
        'csv' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_csv_325]],
          'value' => undef
        },
        'json' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_json_326]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_csv_325 => {
      attributes => {
        'record_column_delimiter' => String,
        'record_row_delimiter' => String
      }
    },
    Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_json_326 => {
      attributes => {
        'record_row_path' => String
      }
    },
    Aws_kinesis_analytics_application_inputs_315_starting_position_configuration_327 => {
      attributes => {
        'starting_position' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_analytics_application_outputs_328 => {
      attributes => {
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kinesis_firehose' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_outputs_328_kinesis_firehose_329]],
          'value' => undef
        },
        'kinesis_stream' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_outputs_328_kinesis_stream_330]],
          'value' => undef
        },
        'lambda' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_outputs_328_lambda_331]],
          'value' => undef
        },
        'name' => String,
        'schema' => Array[Aws_kinesis_analytics_application_outputs_328_schema_332]
      }
    },
    Aws_kinesis_analytics_application_outputs_328_kinesis_firehose_329 => {
      attributes => {
        'resource_arn' => String,
        'role_arn' => String
      }
    },
    Aws_kinesis_analytics_application_outputs_328_kinesis_stream_330 => {
      attributes => {
        'resource_arn' => String,
        'role_arn' => String
      }
    },
    Aws_kinesis_analytics_application_outputs_328_lambda_331 => {
      attributes => {
        'resource_arn' => String,
        'role_arn' => String
      }
    },
    Aws_kinesis_analytics_application_outputs_328_schema_332 => {
      attributes => {
        'record_format_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_analytics_application_reference_data_sources_333 => {
      attributes => {
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3' => Array[Aws_kinesis_analytics_application_reference_data_sources_333_s3_334],
        'schema' => Array[Aws_kinesis_analytics_application_reference_data_sources_333_schema_335],
        'table_name' => String
      }
    },
    Aws_kinesis_analytics_application_reference_data_sources_333_s3_334 => {
      attributes => {
        'bucket_arn' => String,
        'file_key' => String,
        'role_arn' => String
      }
    },
    Aws_kinesis_analytics_application_reference_data_sources_333_schema_335 => {
      attributes => {
        'record_columns' => Array[Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_columns_336],
        'record_encoding' => {
          'type' => Optional[String],
          'value' => undef
        },
        'record_format' => Array[Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337]
      }
    },
    Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_columns_336 => {
      attributes => {
        'mapping' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'sql_type' => String
      }
    },
    Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337 => {
      attributes => {
        'mapping_parameters' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338]],
          'value' => undef
        },
        'record_format_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338 => {
      attributes => {
        'csv' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_csv_339]],
          'value' => undef
        },
        'json' => {
          'type' => Optional[Array[Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_json_340]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_csv_339 => {
      attributes => {
        'record_column_delimiter' => String,
        'record_row_delimiter' => String
      }
    },
    Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_json_340 => {
      attributes => {
        'record_row_path' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['destination', 'kinesis_source_configuration', 'name'],
          'providedAttributes' => ['arn', 'destination_id', 'elasticsearch_configuration', 'extended_s3_configuration', 'kinesis_source_configuration', 'redshift_configuration', 's3_configuration', 'splunk_configuration', 'tags', 'version_id']
        }
      },
      attributes => {
        'aws_kinesis_firehose_delivery_stream_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'destination' => String,
        'destination_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'elasticsearch_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341]],
          'value' => undef
        },
        'extended_s3_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346]],
          'value' => undef
        },
        'kinesis_source_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_kinesis_source_configuration_363]],
          'value' => undef
        },
        'name' => String,
        'redshift_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_redshift_configuration_364]],
          'value' => undef
        },
        's3_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_s3_configuration_371]],
          'value' => undef
        },
        'splunk_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_splunk_configuration_373]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'version_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_streamHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341 => {
      attributes => {
        'buffering_interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'buffering_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cloudwatch_logging_options' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_cloudwatch_logging_options_342]],
          'value' => undef
        },
        'domain_arn' => String,
        'index_name' => String,
        'index_rotation_period' => {
          'type' => Optional[String],
          'value' => undef
        },
        'processing_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343]],
          'value' => undef
        },
        'retry_duration' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'role_arn' => String,
        's3_backup_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_cloudwatch_logging_options_342 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'log_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_stream_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'processors' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344 => {
      attributes => {
        'parameters' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344_parameters_345]],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344_parameters_345 => {
      attributes => {
        'parameter_name' => String,
        'parameter_value' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346 => {
      attributes => {
        'bucket_arn' => String,
        'buffer_interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'buffer_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cloudwatch_logging_options' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_cloudwatch_logging_options_347]],
          'value' => undef
        },
        'compression_format' => {
          'type' => Optional[String],
          'value' => undef
        },
        'data_format_conversion_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348]],
          'value' => undef
        },
        'error_output_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'processing_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358]],
          'value' => undef
        },
        'role_arn' => String,
        's3_backup_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361]],
          'value' => undef
        },
        's3_backup_mode' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_cloudwatch_logging_options_347 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'log_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_stream_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'input_format_configuration' => Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349],
        'output_format_configuration' => Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353],
        'schema_configuration' => Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_schema_configuration_357]
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349 => {
      attributes => {
        'deserializer' => Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350]
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350 => {
      attributes => {
        'hive_json_ser_de' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_hive_json_ser_de_351]],
          'value' => undef
        },
        'open_x_json_ser_de' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_open_x_json_ser_de_352]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_hive_json_ser_de_351 => {
      attributes => {
        'timestamp_formats' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_open_x_json_ser_de_352 => {
      attributes => {
        'case_insensitive' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'column_to_json_key_mappings' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'convert_dots_in_json_keys_to_underscores' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353 => {
      attributes => {
        'serializer' => Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354]
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354 => {
      attributes => {
        'orc_ser_de' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_orc_ser_de_355]],
          'value' => undef
        },
        'parquet_ser_de' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_parquet_ser_de_356]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_orc_ser_de_355 => {
      attributes => {
        'block_size_bytes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'bloom_filter_columns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'bloom_filter_false_positive_probability' => {
          'type' => Optional[Float],
          'value' => undef
        },
        'compression' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dictionary_key_threshold' => {
          'type' => Optional[Float],
          'value' => undef
        },
        'enable_padding' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'format_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'padding_tolerance' => {
          'type' => Optional[Float],
          'value' => undef
        },
        'row_index_stride' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'stripe_size_bytes' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_parquet_ser_de_356 => {
      attributes => {
        'block_size_bytes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'compression' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_dictionary_compression' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'max_padding_bytes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'page_size_bytes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'writer_version' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_schema_configuration_357 => {
      attributes => {
        'catalog_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'database_name' => String,
        'region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => String,
        'table_name' => String,
        'version_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'processors' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359 => {
      attributes => {
        'parameters' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359_parameters_360]],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359_parameters_360 => {
      attributes => {
        'parameter_name' => String,
        'parameter_value' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361 => {
      attributes => {
        'bucket_arn' => String,
        'buffer_interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'buffer_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cloudwatch_logging_options' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361_cloudwatch_logging_options_362]],
          'value' => undef
        },
        'compression_format' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361_cloudwatch_logging_options_362 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'log_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_stream_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_kinesis_source_configuration_363 => {
      attributes => {
        'kinesis_stream_arn' => String,
        'role_arn' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_redshift_configuration_364 => {
      attributes => {
        'cloudwatch_logging_options' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_cloudwatch_logging_options_365]],
          'value' => undef
        },
        'cluster_jdbcurl' => String,
        'copy_options' => {
          'type' => Optional[String],
          'value' => undef
        },
        'data_table_columns' => {
          'type' => Optional[String],
          'value' => undef
        },
        'data_table_name' => String,
        'password' => String,
        'processing_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366]],
          'value' => undef
        },
        'retry_duration' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'role_arn' => String,
        's3_backup_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369]],
          'value' => undef
        },
        's3_backup_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'username' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_cloudwatch_logging_options_365 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'log_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_stream_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'processors' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367 => {
      attributes => {
        'parameters' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367_parameters_368]],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367_parameters_368 => {
      attributes => {
        'parameter_name' => String,
        'parameter_value' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369 => {
      attributes => {
        'bucket_arn' => String,
        'buffer_interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'buffer_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cloudwatch_logging_options' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369_cloudwatch_logging_options_370]],
          'value' => undef
        },
        'compression_format' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369_cloudwatch_logging_options_370 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'log_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_stream_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_s3_configuration_371 => {
      attributes => {
        'bucket_arn' => String,
        'buffer_interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'buffer_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cloudwatch_logging_options' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_s3_configuration_371_cloudwatch_logging_options_372]],
          'value' => undef
        },
        'compression_format' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role_arn' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_s3_configuration_371_cloudwatch_logging_options_372 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'log_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_stream_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_splunk_configuration_373 => {
      attributes => {
        'cloudwatch_logging_options' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_cloudwatch_logging_options_374]],
          'value' => undef
        },
        'hec_acknowledgment_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'hec_endpoint' => String,
        'hec_endpoint_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hec_token' => String,
        'processing_configuration' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375]],
          'value' => undef
        },
        'retry_duration' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        's3_backup_mode' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_cloudwatch_logging_options_374 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'log_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'log_stream_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'processors' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376 => {
      attributes => {
        'parameters' => {
          'type' => Optional[Array[Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376_parameters_377]],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376_parameters_377 => {
      attributes => {
        'parameter_name' => String,
        'parameter_value' => String
      }
    },
    Aws_kinesis_stream => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'encryption_type', 'kms_key_id', 'retention_period', 'shard_level_metrics', 'tags']
        }
      },
      attributes => {
        'aws_kinesis_stream_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encryption_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'retention_period' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'shard_count' => Integer,
        'shard_level_metrics' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_kinesis_streamHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_kms_alias => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'name', 'name_prefix', 'target_key_arn']
        }
      },
      attributes => {
        'aws_kms_alias_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'target_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'target_key_id' => String
      }
    },
    Aws_kms_aliasHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_kms_grant => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['constraints', 'grant_creation_tokens', 'grantee_principal', 'key_id', 'name', 'operations', 'retire_on_delete', 'retiring_principal'],
          'providedAttributes' => ['constraints', 'grant_creation_tokens', 'grant_id', 'grant_token', 'name', 'retire_on_delete', 'retiring_principal']
        }
      },
      attributes => {
        'aws_kms_grant_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'constraints' => {
          'type' => Optional[Array[Aws_kms_grant_constraints_378]],
          'value' => undef
        },
        'grant_creation_tokens' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'grant_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'grant_token' => {
          'type' => Optional[String],
          'value' => undef
        },
        'grantee_principal' => String,
        'key_id' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'operations' => Array[String],
        'retire_on_delete' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'retiring_principal' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_kms_grantHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_kms_grant_constraints_378 => {
      attributes => {
        'encryption_context_equals' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'encryption_context_subset' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_kms_key => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['key_usage'],
          'providedAttributes' => ['arn', 'deletion_window_in_days', 'description', 'enable_key_rotation', 'is_enabled', 'key_id', 'key_usage', 'policy', 'tags']
        }
      },
      attributes => {
        'aws_kms_key_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deletion_window_in_days' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_key_rotation' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'is_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'key_usage' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_kms_keyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lambda_alias => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'description', 'invoke_arn', 'routing_config']
        }
      },
      attributes => {
        'aws_lambda_alias_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'function_name' => String,
        'function_version' => String,
        'invoke_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'routing_config' => {
          'type' => Optional[Array[Aws_lambda_alias_routing_config_379]],
          'value' => undef
        }
      }
    },
    Aws_lambda_aliasHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lambda_alias_routing_config_379 => {
      attributes => {
        'additional_version_weights' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_lambda_event_source_mapping => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['event_source_arn', 'starting_position', 'starting_position_timestamp'],
          'providedAttributes' => ['batch_size', 'enabled', 'function_arn', 'last_modified', 'last_processing_result', 'starting_position', 'starting_position_timestamp', 'state', 'state_transition_reason', 'uuid']
        }
      },
      attributes => {
        'aws_lambda_event_source_mapping_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'batch_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'event_source_arn' => String,
        'function_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'function_name' => String,
        'last_modified' => {
          'type' => Optional[String],
          'value' => undef
        },
        'last_processing_result' => {
          'type' => Optional[String],
          'value' => undef
        },
        'starting_position' => {
          'type' => Optional[String],
          'value' => undef
        },
        'starting_position_timestamp' => {
          'type' => Optional[String],
          'value' => undef
        },
        'state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'state_transition_reason' => {
          'type' => Optional[String],
          'value' => undef
        },
        'uuid' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lambda_event_source_mappingHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lambda_function => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['function_name'],
          'providedAttributes' => ['arn', 'dead_letter_config', 'description', 'environment', 'filename', 'invoke_arn', 'kms_key_arn', 'last_modified', 'layers', 'memory_size', 'publish', 'qualified_arn', 'reserved_concurrent_executions', 's3_bucket', 's3_key', 's3_object_version', 'source_code_hash', 'source_code_size', 'tags', 'timeout', 'tracing_config', 'version', 'vpc_config']
        }
      },
      attributes => {
        'aws_lambda_function_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dead_letter_config' => {
          'type' => Optional[Array[Aws_lambda_function_dead_letter_config_380]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'environment' => {
          'type' => Optional[Array[Aws_lambda_function_environment_381]],
          'value' => undef
        },
        'filename' => {
          'type' => Optional[String],
          'value' => undef
        },
        'function_name' => String,
        'handler' => String,
        'invoke_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'last_modified' => {
          'type' => Optional[String],
          'value' => undef
        },
        'layers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'memory_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'publish' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'qualified_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'reserved_concurrent_executions' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'role' => String,
        'runtime' => String,
        's3_bucket' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_object_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_code_hash' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_code_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'tracing_config' => {
          'type' => Optional[Array[Aws_lambda_function_tracing_config_382]],
          'value' => undef
        },
        'version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_config' => {
          'type' => Optional[Array[Aws_lambda_function_vpc_config_383]],
          'value' => undef
        }
      }
    },
    Aws_lambda_functionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lambda_function_dead_letter_config_380 => {
      attributes => {
        'target_arn' => String
      }
    },
    Aws_lambda_function_environment_381 => {
      attributes => {
        'variables' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_lambda_function_tracing_config_382 => {
      attributes => {
        'mode' => String
      }
    },
    Aws_lambda_function_vpc_config_383 => {
      attributes => {
        'security_group_ids' => Array[String],
        'subnet_ids' => Array[String],
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lambda_layer_version => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['compatible_runtimes', 'description', 'filename', 'layer_name', 'license_info', 's3_bucket', 's3_key', 's3_object_version', 'source_code_hash'],
          'providedAttributes' => ['arn', 'compatible_runtimes', 'created_date', 'description', 'filename', 'layer_arn', 'license_info', 's3_bucket', 's3_key', 's3_object_version', 'source_code_hash', 'source_code_size', 'version']
        }
      },
      attributes => {
        'aws_lambda_layer_version_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'compatible_runtimes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'filename' => {
          'type' => Optional[String],
          'value' => undef
        },
        'layer_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'layer_name' => String,
        'license_info' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_bucket' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_object_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_code_hash' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_code_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'version' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lambda_layer_versionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lambda_permission => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['action', 'event_source_token', 'function_name', 'principal', 'qualifier', 'source_account', 'source_arn', 'statement_id', 'statement_id_prefix'],
          'providedAttributes' => ['event_source_token', 'qualifier', 'source_account', 'source_arn', 'statement_id', 'statement_id_prefix']
        }
      },
      attributes => {
        'aws_lambda_permission_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'action' => String,
        'event_source_token' => {
          'type' => Optional[String],
          'value' => undef
        },
        'function_name' => String,
        'principal' => String,
        'qualifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_account' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'statement_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'statement_id_prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lambda_permissionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_launch_configuration => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['associate_public_ip_address', 'ebs_optimized', 'enable_monitoring', 'ephemeral_block_device', 'iam_instance_profile', 'image_id', 'instance_type', 'key_name', 'name', 'name_prefix', 'placement_tenancy', 'security_groups', 'spot_price', 'user_data', 'user_data_base64', 'vpc_classic_link_id', 'vpc_classic_link_security_groups'],
          'providedAttributes' => ['associate_public_ip_address', 'ebs_block_device', 'ebs_optimized', 'enable_monitoring', 'ephemeral_block_device', 'iam_instance_profile', 'key_name', 'name', 'name_prefix', 'placement_tenancy', 'root_block_device', 'security_groups', 'spot_price', 'user_data', 'user_data_base64', 'vpc_classic_link_id', 'vpc_classic_link_security_groups']
        }
      },
      attributes => {
        'aws_launch_configuration_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'associate_public_ip_address' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_block_device' => {
          'type' => Optional[Array[Aws_launch_configuration_ebs_block_device_384]],
          'value' => undef
        },
        'ebs_optimized' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_monitoring' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ephemeral_block_device' => {
          'type' => Optional[Array[Aws_launch_configuration_ephemeral_block_device_385]],
          'value' => undef
        },
        'iam_instance_profile' => {
          'type' => Optional[String],
          'value' => undef
        },
        'image_id' => String,
        'instance_type' => String,
        'key_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'placement_tenancy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_block_device' => {
          'type' => Optional[Array[Aws_launch_configuration_root_block_device_386]],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'spot_price' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_data_base64' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_classic_link_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_classic_link_security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_launch_configurationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_launch_configuration_ebs_block_device_384 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_name' => String,
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'no_device' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_configuration_ephemeral_block_device_385 => {
      attributes => {
        'device_name' => String,
        'virtual_name' => String
      }
    },
    Aws_launch_configuration_root_block_device_386 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_template => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'block_device_mappings', 'capacity_reservation_specification', 'credit_specification', 'default_version', 'description', 'disable_api_termination', 'ebs_optimized', 'elastic_gpu_specifications', 'iam_instance_profile', 'image_id', 'instance_initiated_shutdown_behavior', 'instance_market_options', 'instance_type', 'kernel_id', 'key_name', 'latest_version', 'license_specification', 'monitoring', 'name', 'name_prefix', 'network_interfaces', 'placement', 'ram_disk_id', 'security_group_names', 'tag_specifications', 'tags', 'user_data', 'vpc_security_group_ids']
        }
      },
      attributes => {
        'aws_launch_template_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'block_device_mappings' => {
          'type' => Optional[Array[Aws_launch_template_block_device_mappings_387]],
          'value' => undef
        },
        'capacity_reservation_specification' => {
          'type' => Optional[Array[Aws_launch_template_capacity_reservation_specification_389]],
          'value' => undef
        },
        'credit_specification' => {
          'type' => Optional[Array[Aws_launch_template_credit_specification_391]],
          'value' => undef
        },
        'default_version' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'disable_api_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_optimized' => {
          'type' => Optional[String],
          'value' => undef
        },
        'elastic_gpu_specifications' => {
          'type' => Optional[Array[Aws_launch_template_elastic_gpu_specifications_392]],
          'value' => undef
        },
        'iam_instance_profile' => {
          'type' => Optional[Array[Aws_launch_template_iam_instance_profile_393]],
          'value' => undef
        },
        'image_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_initiated_shutdown_behavior' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_market_options' => {
          'type' => Optional[Array[Aws_launch_template_instance_market_options_394]],
          'value' => undef
        },
        'instance_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kernel_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'key_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'latest_version' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'license_specification' => {
          'type' => Optional[Array[Aws_launch_template_license_specification_396]],
          'value' => undef
        },
        'monitoring' => {
          'type' => Optional[Array[Aws_launch_template_monitoring_397]],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_interfaces' => {
          'type' => Optional[Array[Aws_launch_template_network_interfaces_398]],
          'value' => undef
        },
        'placement' => {
          'type' => Optional[Array[Aws_launch_template_placement_399]],
          'value' => undef
        },
        'ram_disk_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_group_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tag_specifications' => {
          'type' => Optional[Array[Aws_launch_template_tag_specifications_400]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'user_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_launch_templateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_launch_template_block_device_mappings_387 => {
      attributes => {
        'device_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ebs' => {
          'type' => Optional[Array[Aws_launch_template_block_device_mappings_387_ebs_388]],
          'value' => undef
        },
        'no_device' => {
          'type' => Optional[String],
          'value' => undef
        },
        'virtual_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_template_block_device_mappings_387_ebs_388 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_template_capacity_reservation_specification_389 => {
      attributes => {
        'capacity_reservation_preference' => {
          'type' => Optional[String],
          'value' => undef
        },
        'capacity_reservation_target' => {
          'type' => Optional[Array[Aws_launch_template_capacity_reservation_specification_389_capacity_reservation_target_390]],
          'value' => undef
        }
      }
    },
    Aws_launch_template_capacity_reservation_specification_389_capacity_reservation_target_390 => {
      attributes => {
        'capacity_reservation_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_template_credit_specification_391 => {
      attributes => {
        'cpu_credits' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_template_elastic_gpu_specifications_392 => {
      attributes => {
        'type' => String
      }
    },
    Aws_launch_template_iam_instance_profile_393 => {
      attributes => {
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_template_instance_market_options_394 => {
      attributes => {
        'market_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'spot_options' => {
          'type' => Optional[Array[Aws_launch_template_instance_market_options_394_spot_options_395]],
          'value' => undef
        }
      }
    },
    Aws_launch_template_instance_market_options_394_spot_options_395 => {
      attributes => {
        'block_duration_minutes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'instance_interruption_behavior' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_price' => {
          'type' => Optional[String],
          'value' => undef
        },
        'spot_instance_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'valid_until' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_template_license_specification_396 => {
      attributes => {
        'license_configuration_arn' => String
      }
    },
    Aws_launch_template_monitoring_397 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_launch_template_network_interfaces_398 => {
      attributes => {
        'associate_public_ip_address' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'device_index' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ipv4_address_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ipv4_addresses' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'ipv6_address_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ipv6_addresses' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_template_placement_399 => {
      attributes => {
        'affinity' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'host_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'spread_domain' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tenancy' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_launch_template_tag_specifications_400 => {
      attributes => {
        'resource_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_lb => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['internal', 'load_balancer_type', 'name', 'name_prefix', 'subnet_mapping'],
          'providedAttributes' => ['access_logs', 'arn', 'arn_suffix', 'dns_name', 'enable_cross_zone_load_balancing', 'enable_deletion_protection', 'enable_http2', 'idle_timeout', 'internal', 'ip_address_type', 'load_balancer_type', 'name', 'name_prefix', 'security_groups', 'subnet_mapping', 'subnets', 'tags', 'vpc_id', 'zone_id']
        }
      },
      attributes => {
        'aws_lb_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'access_logs' => {
          'type' => Optional[Array[Aws_lb_access_logs_401]],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn_suffix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dns_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_cross_zone_load_balancing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_deletion_protection' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_http2' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'idle_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'internal' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ip_address_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'load_balancer_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnet_mapping' => {
          'type' => Optional[Array[Aws_lb_subnet_mapping_402]],
          'value' => undef
        },
        'subnets' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'zone_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lbHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lb_access_logs_401 => {
      attributes => {
        'bucket' => String,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lb_cookie_stickiness_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cookie_expiration_period', 'lb_port', 'load_balancer', 'name'],
          'providedAttributes' => ['cookie_expiration_period']
        }
      },
      attributes => {
        'aws_lb_cookie_stickiness_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cookie_expiration_period' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'lb_port' => Integer,
        'load_balancer' => String,
        'name' => String
      }
    },
    Aws_lb_cookie_stickiness_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lb_listener => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['load_balancer_arn'],
          'providedAttributes' => ['arn', 'certificate_arn', 'protocol', 'ssl_policy']
        }
      },
      attributes => {
        'aws_lb_listener_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_action' => Array[Aws_lb_listener_default_action_403],
        'load_balancer_arn' => String,
        'port' => Integer,
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssl_policy' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lb_listenerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lb_listener_certificate => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['certificate_arn', 'listener_arn']
        }
      },
      attributes => {
        'aws_lb_listener_certificate_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'certificate_arn' => String,
        'listener_arn' => String
      }
    },
    Aws_lb_listener_certificateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lb_listener_default_action_403 => {
      attributes => {
        'authenticate_cognito' => {
          'type' => Optional[Array[Aws_lb_listener_default_action_403_authenticate_cognito_404]],
          'value' => undef
        },
        'authenticate_oidc' => {
          'type' => Optional[Array[Aws_lb_listener_default_action_403_authenticate_oidc_405]],
          'value' => undef
        },
        'fixed_response' => {
          'type' => Optional[Array[Aws_lb_listener_default_action_403_fixed_response_406]],
          'value' => undef
        },
        'order' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'redirect' => {
          'type' => Optional[Array[Aws_lb_listener_default_action_403_redirect_407]],
          'value' => undef
        },
        'target_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_lb_listener_default_action_403_authenticate_cognito_404 => {
      attributes => {
        'authentication_request_extra_params' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'on_unauthenticated_request' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_cookie_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'user_pool_arn' => String,
        'user_pool_client_id' => String,
        'user_pool_domain' => String
      }
    },
    Aws_lb_listener_default_action_403_authenticate_oidc_405 => {
      attributes => {
        'authentication_request_extra_params' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'authorization_endpoint' => String,
        'client_id' => String,
        'client_secret' => String,
        'issuer' => String,
        'on_unauthenticated_request' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_cookie_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'token_endpoint' => String,
        'user_info_endpoint' => String
      }
    },
    Aws_lb_listener_default_action_403_fixed_response_406 => {
      attributes => {
        'content_type' => String,
        'message_body' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lb_listener_default_action_403_redirect_407 => {
      attributes => {
        'host' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'query' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => String
      }
    },
    Aws_lb_listener_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['listener_arn', 'priority'],
          'providedAttributes' => ['arn', 'priority']
        }
      },
      attributes => {
        'aws_lb_listener_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'action' => Array[Aws_lb_listener_rule_action_408],
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'condition' => Array[Aws_lb_listener_rule_condition_413],
        'listener_arn' => String,
        'priority' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_lb_listener_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lb_listener_rule_action_408 => {
      attributes => {
        'authenticate_cognito' => {
          'type' => Optional[Array[Aws_lb_listener_rule_action_408_authenticate_cognito_409]],
          'value' => undef
        },
        'authenticate_oidc' => {
          'type' => Optional[Array[Aws_lb_listener_rule_action_408_authenticate_oidc_410]],
          'value' => undef
        },
        'fixed_response' => {
          'type' => Optional[Array[Aws_lb_listener_rule_action_408_fixed_response_411]],
          'value' => undef
        },
        'order' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'redirect' => {
          'type' => Optional[Array[Aws_lb_listener_rule_action_408_redirect_412]],
          'value' => undef
        },
        'target_group_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_lb_listener_rule_action_408_authenticate_cognito_409 => {
      attributes => {
        'authentication_request_extra_params' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'on_unauthenticated_request' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_cookie_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'user_pool_arn' => String,
        'user_pool_client_id' => String,
        'user_pool_domain' => String
      }
    },
    Aws_lb_listener_rule_action_408_authenticate_oidc_410 => {
      attributes => {
        'authentication_request_extra_params' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'authorization_endpoint' => String,
        'client_id' => String,
        'client_secret' => String,
        'issuer' => String,
        'on_unauthenticated_request' => {
          'type' => Optional[String],
          'value' => undef
        },
        'scope' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_cookie_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'session_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'token_endpoint' => String,
        'user_info_endpoint' => String
      }
    },
    Aws_lb_listener_rule_action_408_fixed_response_411 => {
      attributes => {
        'content_type' => String,
        'message_body' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lb_listener_rule_action_408_redirect_412 => {
      attributes => {
        'host' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'query' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_code' => String
      }
    },
    Aws_lb_listener_rule_condition_413 => {
      attributes => {
        'field' => {
          'type' => Optional[String],
          'value' => undef
        },
        'values' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_lb_ssl_negotiation_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['attribute', 'lb_port', 'load_balancer', 'name'],
          'providedAttributes' => ['attribute']
        }
      },
      attributes => {
        'aws_lb_ssl_negotiation_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'attribute' => {
          'type' => Optional[Array[Aws_lb_ssl_negotiation_policy_attribute_414]],
          'value' => undef
        },
        'lb_port' => Integer,
        'load_balancer' => String,
        'name' => String
      }
    },
    Aws_lb_ssl_negotiation_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lb_ssl_negotiation_policy_attribute_414 => {
      attributes => {
        'name' => String,
        'value' => String
      }
    },
    Aws_lb_subnet_mapping_402 => {
      attributes => {
        'allocation_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => String
      }
    },
    Aws_lb_target_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix', 'port', 'protocol', 'target_type', 'vpc_id'],
          'providedAttributes' => ['arn', 'arn_suffix', 'deregistration_delay', 'health_check', 'name', 'name_prefix', 'port', 'protocol', 'proxy_protocol_v2', 'slow_start', 'stickiness', 'tags', 'target_type', 'vpc_id']
        }
      },
      attributes => {
        'aws_lb_target_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn_suffix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deregistration_delay' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'health_check' => {
          'type' => Optional[Array[Aws_lb_target_group_health_check_415]],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'proxy_protocol_v2' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'slow_start' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'stickiness' => {
          'type' => Optional[Array[Aws_lb_target_group_stickiness_416]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'target_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lb_target_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lb_target_group_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'port', 'target_group_arn', 'target_id'],
          'providedAttributes' => ['availability_zone', 'port']
        }
      },
      attributes => {
        'aws_lb_target_group_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'target_group_arn' => String,
        'target_id' => String
      }
    },
    Aws_lb_target_group_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lb_target_group_health_check_415 => {
      attributes => {
        'healthy_threshold' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'matcher' => {
          'type' => Optional[String],
          'value' => undef
        },
        'path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => {
          'type' => Optional[String],
          'value' => undef
        },
        'timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'unhealthy_threshold' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_lb_target_group_stickiness_416 => {
      attributes => {
        'cookie_duration' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_licensemanager_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['license_configuration_arn', 'resource_arn']
        }
      },
      attributes => {
        'aws_licensemanager_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'license_configuration_arn' => String,
        'resource_arn' => String
      }
    },
    Aws_licensemanager_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_licensemanager_license_configuration => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['license_counting_type', 'license_rules'],
          'providedAttributes' => ['description', 'license_count', 'license_count_hard_limit', 'license_rules', 'tags']
        }
      },
      attributes => {
        'aws_licensemanager_license_configuration_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'license_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'license_count_hard_limit' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'license_counting_type' => String,
        'license_rules' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_licensemanager_license_configurationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lightsail_domain => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['domain_name'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_lightsail_domain_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name' => String
      }
    },
    Aws_lightsail_domainHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lightsail_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'blueprint_id', 'bundle_id', 'key_pair_name', 'name', 'user_data'],
          'providedAttributes' => ['arn', 'cpu_count', 'created_at', 'ipv6_address', 'is_static_ip', 'key_pair_name', 'private_ip_address', 'public_ip_address', 'ram_size', 'user_data', 'username']
        }
      },
      attributes => {
        'aws_lightsail_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => String,
        'blueprint_id' => String,
        'bundle_id' => String,
        'cpu_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'created_at' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'is_static_ip' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'key_pair_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'private_ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ram_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'user_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'username' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lightsail_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lightsail_key_pair => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix', 'pgp_key', 'public_key'],
          'providedAttributes' => ['arn', 'encrypted_fingerprint', 'encrypted_private_key', 'fingerprint', 'name', 'name_prefix', 'pgp_key', 'private_key', 'public_key']
        }
      },
      attributes => {
        'aws_lightsail_key_pair_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted_fingerprint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'encrypted_private_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'fingerprint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'pgp_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_key' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lightsail_key_pairHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lightsail_static_ip => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'ip_address', 'support_code']
        }
      },
      attributes => {
        'aws_lightsail_static_ip_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'support_code' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_lightsail_static_ipHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_lightsail_static_ip_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['instance_name', 'static_ip_name']
        }
      },
      attributes => {
        'aws_lightsail_static_ip_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'instance_name' => String,
        'static_ip_name' => String
      }
    },
    Aws_lightsail_static_ip_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_load_balancer_backend_server_policy => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['policy_names']
        }
      },
      attributes => {
        'aws_load_balancer_backend_server_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'instance_port' => Integer,
        'load_balancer_name' => String,
        'policy_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_load_balancer_backend_server_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_load_balancer_listener_policy => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['policy_names']
        }
      },
      attributes => {
        'aws_load_balancer_listener_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'load_balancer_name' => String,
        'load_balancer_port' => Integer,
        'policy_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_load_balancer_listener_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_load_balancer_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['load_balancer_name', 'policy_name', 'policy_type_name'],
          'providedAttributes' => ['policy_attribute']
        }
      },
      attributes => {
        'aws_load_balancer_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'load_balancer_name' => String,
        'policy_attribute' => {
          'type' => Optional[Array[Aws_load_balancer_policy_policy_attribute_417]],
          'value' => undef
        },
        'policy_name' => String,
        'policy_type_name' => String
      }
    },
    Aws_load_balancer_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_load_balancer_policy_policy_attribute_417 => {
      attributes => {
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'value' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_macie_member_account_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['member_account_id']
        }
      },
      attributes => {
        'aws_macie_member_account_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'member_account_id' => String
      }
    },
    Aws_macie_member_account_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_macie_s3_bucket_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket_name', 'member_account_id', 'prefix'],
          'providedAttributes' => ['classification_type', 'member_account_id', 'prefix']
        }
      },
      attributes => {
        'aws_macie_s3_bucket_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'bucket_name' => String,
        'classification_type' => {
          'type' => Optional[Array[Aws_macie_s3_bucket_association_classification_type_418]],
          'value' => undef
        },
        'member_account_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_macie_s3_bucket_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_macie_s3_bucket_association_classification_type_418 => {
      attributes => {
        'continuous' => {
          'type' => Optional[String],
          'value' => undef
        },
        'one_time' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_main_route_table_association => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['original_route_table_id']
        }
      },
      attributes => {
        'aws_main_route_table_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'original_route_table_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'route_table_id' => String,
        'vpc_id' => String
      }
    },
    Aws_main_route_table_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_media_package_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['channel_id'],
          'providedAttributes' => ['arn', 'description', 'hls_ingest']
        }
      },
      attributes => {
        'aws_media_package_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'channel_id' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hls_ingest' => {
          'type' => Optional[Array[Aws_media_package_channel_hls_ingest_419]],
          'value' => undef
        }
      }
    },
    Aws_media_package_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_media_package_channel_hls_ingest_419 => {
      attributes => {
        'ingest_endpoints' => {
          'type' => Optional[Array[Aws_media_package_channel_hls_ingest_419_ingest_endpoints_420]],
          'value' => undef
        }
      }
    },
    Aws_media_package_channel_hls_ingest_419_ingest_endpoints_420 => {
      attributes => {
        'password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'username' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_media_store_container => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'endpoint']
        }
      },
      attributes => {
        'aws_media_store_container_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_media_store_containerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_media_store_container_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['container_name']
        }
      },
      attributes => {
        'aws_media_store_container_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'container_name' => String,
        'policy' => String
      }
    },
    Aws_media_store_container_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_mq_broker => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['auto_minor_version_upgrade', 'broker_name', 'deployment_mode', 'engine_type', 'engine_version', 'host_instance_type', 'maintenance_window_start_time', 'publicly_accessible', 'security_groups', 'subnet_ids'],
          'providedAttributes' => ['apply_immediately', 'arn', 'auto_minor_version_upgrade', 'configuration', 'deployment_mode', 'instances', 'logs', 'maintenance_window_start_time', 'publicly_accessible', 'subnet_ids', 'tags']
        }
      },
      attributes => {
        'aws_mq_broker_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'apply_immediately' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_minor_version_upgrade' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'broker_name' => String,
        'configuration' => {
          'type' => Optional[Array[Aws_mq_broker_configuration_421]],
          'value' => undef
        },
        'deployment_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_type' => String,
        'engine_version' => String,
        'host_instance_type' => String,
        'instances' => {
          'type' => Optional[Array[Aws_mq_broker_instances_422]],
          'value' => undef
        },
        'logs' => {
          'type' => Optional[Array[Aws_mq_broker_logs_423]],
          'value' => undef
        },
        'maintenance_window_start_time' => {
          'type' => Optional[Array[Aws_mq_broker_maintenance_window_start_time_424]],
          'value' => undef
        },
        'publicly_accessible' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'security_groups' => Array[String],
        'subnet_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'user' => Array[Aws_mq_broker_user_425]
      }
    },
    Aws_mq_brokerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_mq_broker_configuration_421 => {
      attributes => {
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'revision' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_mq_broker_instances_422 => {
      attributes => {
        'console_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoints' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'ip_address' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_mq_broker_logs_423 => {
      attributes => {
        'audit' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'general' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_mq_broker_maintenance_window_start_time_424 => {
      attributes => {
        'day_of_week' => String,
        'time_of_day' => String,
        'time_zone' => String
      }
    },
    Aws_mq_broker_user_425 => {
      attributes => {
        'console_access' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'password' => String,
        'username' => String
      }
    },
    Aws_mq_configuration => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['engine_type', 'engine_version', 'name'],
          'providedAttributes' => ['arn', 'description', 'latest_revision', 'tags']
        }
      },
      attributes => {
        'aws_mq_configuration_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'data' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_type' => String,
        'engine_version' => String,
        'latest_revision' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_mq_configurationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_nat_gateway => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['allocation_id', 'subnet_id'],
          'providedAttributes' => ['network_interface_id', 'private_ip', 'public_ip', 'tags']
        }
      },
      attributes => {
        'aws_nat_gateway_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocation_id' => String,
        'network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_nat_gatewayHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_neptune_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zones', 'cluster_identifier', 'cluster_identifier_prefix', 'engine', 'engine_version', 'kms_key_arn', 'neptune_subnet_group_name', 'port', 'storage_encrypted'],
          'providedAttributes' => ['apply_immediately', 'arn', 'availability_zones', 'backup_retention_period', 'cluster_identifier', 'cluster_identifier_prefix', 'cluster_members', 'cluster_resource_id', 'endpoint', 'engine', 'engine_version', 'final_snapshot_identifier', 'hosted_zone_id', 'iam_database_authentication_enabled', 'iam_roles', 'kms_key_arn', 'neptune_cluster_parameter_group_name', 'neptune_subnet_group_name', 'port', 'preferred_backup_window', 'preferred_maintenance_window', 'reader_endpoint', 'replication_source_identifier', 'skip_final_snapshot', 'snapshot_identifier', 'storage_encrypted', 'tags', 'vpc_security_group_ids']
        }
      },
      attributes => {
        'aws_neptune_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'apply_immediately' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'backup_retention_period' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cluster_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_identifier_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_members' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'cluster_resource_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'final_snapshot_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hosted_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_database_authentication_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iam_roles' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'neptune_cluster_parameter_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'neptune_subnet_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'preferred_backup_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'preferred_maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'reader_endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'replication_source_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'skip_final_snapshot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'snapshot_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_neptune_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_neptune_cluster_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'cluster_identifier', 'engine', 'engine_version', 'identifier', 'identifier_prefix', 'neptune_subnet_group_name', 'port', 'publicly_accessible'],
          'providedAttributes' => ['address', 'apply_immediately', 'arn', 'auto_minor_version_upgrade', 'availability_zone', 'dbi_resource_id', 'endpoint', 'engine', 'engine_version', 'identifier', 'identifier_prefix', 'kms_key_arn', 'neptune_parameter_group_name', 'neptune_subnet_group_name', 'port', 'preferred_backup_window', 'preferred_maintenance_window', 'promotion_tier', 'publicly_accessible', 'storage_encrypted', 'tags', 'writer']
        }
      },
      attributes => {
        'aws_neptune_cluster_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'apply_immediately' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_minor_version_upgrade' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_identifier' => String,
        'dbi_resource_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'identifier_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_class' => String,
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'neptune_parameter_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'neptune_subnet_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'preferred_backup_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'preferred_maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'promotion_tier' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'publicly_accessible' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'storage_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'writer' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_neptune_cluster_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_neptune_cluster_parameter_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'family', 'name', 'name_prefix'],
          'providedAttributes' => ['arn', 'description', 'name', 'name_prefix', 'parameter', 'tags']
        }
      },
      attributes => {
        'aws_neptune_cluster_parameter_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'family' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameter' => {
          'type' => Optional[Array[Aws_neptune_cluster_parameter_group_parameter_426]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_neptune_cluster_parameter_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_neptune_cluster_parameter_group_parameter_426 => {
      attributes => {
        'apply_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'value' => String
      }
    },
    Aws_neptune_cluster_snapshot => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['db_cluster_identifier', 'db_cluster_snapshot_identifier'],
          'providedAttributes' => ['allocated_storage', 'availability_zones', 'db_cluster_snapshot_arn', 'engine', 'engine_version', 'kms_key_id', 'license_model', 'port', 'snapshot_type', 'source_db_cluster_snapshot_arn', 'status', 'storage_encrypted', 'vpc_id']
        }
      },
      attributes => {
        'aws_neptune_cluster_snapshot_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocated_storage' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'db_cluster_identifier' => String,
        'db_cluster_snapshot_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'db_cluster_snapshot_identifier' => String,
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'license_model' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_db_cluster_snapshot_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_neptune_cluster_snapshotHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_neptune_event_subscription => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'customer_aws_id', 'enabled', 'event_categories', 'name', 'name_prefix', 'source_ids', 'source_type', 'tags']
        }
      },
      attributes => {
        'aws_neptune_event_subscription_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'customer_aws_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'event_categories' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sns_topic_arn' => String,
        'source_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'source_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_neptune_event_subscriptionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_neptune_parameter_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'family', 'name'],
          'providedAttributes' => ['arn', 'description', 'parameter', 'tags']
        }
      },
      attributes => {
        'aws_neptune_parameter_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'family' => String,
        'name' => String,
        'parameter' => {
          'type' => Optional[Array[Aws_neptune_parameter_group_parameter_427]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_neptune_parameter_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_neptune_parameter_group_parameter_427 => {
      attributes => {
        'apply_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'value' => String
      }
    },
    Aws_neptune_subnet_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'description', 'name', 'name_prefix', 'tags']
        }
      },
      attributes => {
        'aws_neptune_subnet_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_ids' => Array[String],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_neptune_subnet_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_network_acl => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['subnet_id', 'vpc_id'],
          'providedAttributes' => ['egress', 'ingress', 'owner_id', 'subnet_id', 'subnet_ids', 'tags']
        }
      },
      attributes => {
        'aws_network_acl_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'egress' => {
          'type' => Optional[Array[Aws_network_acl_egress_428]],
          'value' => undef
        },
        'ingress' => {
          'type' => Optional[Array[Aws_network_acl_ingress_429]],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => String
      }
    },
    Aws_network_aclHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_network_acl_egress_428 => {
      attributes => {
        'action' => String,
        'cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'from_port' => Integer,
        'icmp_code' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'icmp_type' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => String,
        'rule_no' => Integer,
        'to_port' => Integer
      }
    },
    Aws_network_acl_ingress_429 => {
      attributes => {
        'action' => String,
        'cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'from_port' => Integer,
        'icmp_code' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'icmp_type' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => String,
        'rule_no' => Integer,
        'to_port' => Integer
      }
    },
    Aws_network_acl_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cidr_block', 'egress', 'from_port', 'icmp_code', 'icmp_type', 'ipv6_cidr_block', 'network_acl_id', 'protocol', 'rule_action', 'rule_number', 'to_port'],
          'providedAttributes' => ['cidr_block', 'egress', 'from_port', 'icmp_code', 'icmp_type', 'ipv6_cidr_block', 'to_port']
        }
      },
      attributes => {
        'aws_network_acl_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'egress' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'from_port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'icmp_code' => {
          'type' => Optional[String],
          'value' => undef
        },
        'icmp_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_acl_id' => String,
        'protocol' => String,
        'rule_action' => String,
        'rule_number' => Integer,
        'to_port' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_network_acl_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_network_interface => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['subnet_id'],
          'providedAttributes' => ['attachment', 'description', 'private_dns_name', 'private_ip', 'private_ips', 'private_ips_count', 'security_groups', 'source_dest_check', 'tags']
        }
      },
      attributes => {
        'aws_network_interface_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'attachment' => {
          'type' => Optional[Array[Aws_network_interface_attachment_430]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_dns_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_ips' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'private_ips_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'source_dest_check' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'subnet_id' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_network_interfaceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_network_interface_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['device_index', 'instance_id', 'network_interface_id'],
          'providedAttributes' => ['attachment_id', 'status']
        }
      },
      attributes => {
        'aws_network_interface_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'attachment_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'device_index' => Integer,
        'instance_id' => String,
        'network_interface_id' => String,
        'status' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_network_interface_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_network_interface_attachment_430 => {
      attributes => {
        'attachment_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'device_index' => Integer,
        'instance' => String
      }
    },
    Aws_network_interface_sg_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['network_interface_id', 'security_group_id']
        }
      },
      attributes => {
        'aws_network_interface_sg_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'network_interface_id' => String,
        'security_group_id' => String
      }
    },
    Aws_network_interface_sg_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_application => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['short_name'],
          'providedAttributes' => ['app_source', 'auto_bundle_on_deploy', 'aws_flow_ruby_settings', 'data_source_arn', 'data_source_database_name', 'data_source_type', 'description', 'document_root', 'domains', 'enable_ssl', 'environment', 'rails_env', 'short_name', 'ssl_configuration']
        }
      },
      attributes => {
        'aws_opsworks_application_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'app_source' => {
          'type' => Optional[Array[Aws_opsworks_application_app_source_431]],
          'value' => undef
        },
        'auto_bundle_on_deploy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'aws_flow_ruby_settings' => {
          'type' => Optional[String],
          'value' => undef
        },
        'data_source_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'data_source_database_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'data_source_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'document_root' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domains' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'enable_ssl' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'environment' => {
          'type' => Optional[Array[Aws_opsworks_application_environment_432]],
          'value' => undef
        },
        'name' => String,
        'rails_env' => {
          'type' => Optional[String],
          'value' => undef
        },
        'short_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssl_configuration' => {
          'type' => Optional[Array[Aws_opsworks_application_ssl_configuration_433]],
          'value' => undef
        },
        'stack_id' => String,
        'type' => String
      }
    },
    Aws_opsworks_applicationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_application_app_source_431 => {
      attributes => {
        'password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'revision' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssh_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String,
        'url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'username' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_application_environment_432 => {
      attributes => {
        'key' => String,
        'secure' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'value' => String
      }
    },
    Aws_opsworks_application_ssl_configuration_433 => {
      attributes => {
        'certificate' => String,
        'chain' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_key' => String
      }
    },
    Aws_opsworks_custom_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'install_updates_on_boot', 'instance_shutdown_timeout', 'system_packages', 'use_ebs_optimized_instances']
        }
      },
      attributes => {
        'aws_opsworks_custom_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_custom_layer_ebs_volume_434]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => String,
        'short_name' => String,
        'stack_id' => String,
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_opsworks_custom_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_custom_layer_ebs_volume_434 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_ganglia_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'install_updates_on_boot', 'instance_shutdown_timeout', 'name', 'system_packages', 'url', 'use_ebs_optimized_instances', 'username']
        }
      },
      attributes => {
        'aws_opsworks_ganglia_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_ganglia_layer_ebs_volume_435]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'password' => String,
        'stack_id' => String,
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'username' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_ganglia_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_ganglia_layer_ebs_volume_435 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_haproxy_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'healthcheck_method', 'healthcheck_url', 'install_updates_on_boot', 'instance_shutdown_timeout', 'name', 'stats_enabled', 'stats_url', 'stats_user', 'system_packages', 'use_ebs_optimized_instances']
        }
      },
      attributes => {
        'aws_opsworks_haproxy_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_haproxy_layer_ebs_volume_436]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'healthcheck_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'healthcheck_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stack_id' => String,
        'stats_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'stats_password' => String,
        'stats_url' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stats_user' => {
          'type' => Optional[String],
          'value' => undef
        },
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_opsworks_haproxy_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_haproxy_layer_ebs_volume_436 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['ami_id', 'availability_zone', 'ebs_block_device', 'ebs_optimized', 'ephemeral_block_device', 'hostname', 'os', 'root_block_device', 'root_device_type', 'stack_id', 'subnet_id', 'tenancy', 'virtualization_type'],
          'providedAttributes' => ['agent_version', 'ami_id', 'architecture', 'auto_scaling_type', 'availability_zone', 'created_at', 'delete_ebs', 'delete_eip', 'ebs_block_device', 'ebs_optimized', 'ec2_instance_id', 'ecs_cluster_arn', 'elastic_ip', 'ephemeral_block_device', 'hostname', 'infrastructure_class', 'install_updates_on_boot', 'instance_profile_arn', 'instance_type', 'last_service_error_id', 'os', 'platform', 'private_dns', 'private_ip', 'public_dns', 'public_ip', 'registered_by', 'reported_agent_version', 'reported_os_family', 'reported_os_name', 'reported_os_version', 'root_block_device', 'root_device_type', 'root_device_volume_id', 'security_group_ids', 'ssh_host_dsa_key_fingerprint', 'ssh_host_rsa_key_fingerprint', 'ssh_key_name', 'state', 'status', 'subnet_id', 'tenancy', 'virtualization_type']
        }
      },
      attributes => {
        'aws_opsworks_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'agent_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ami_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'architecture' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_scaling_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'created_at' => {
          'type' => Optional[String],
          'value' => undef
        },
        'delete_ebs' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'delete_eip' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_block_device' => {
          'type' => Optional[Array[Aws_opsworks_instance_ebs_block_device_437]],
          'value' => undef
        },
        'ebs_optimized' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ec2_instance_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ecs_cluster_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'elastic_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ephemeral_block_device' => {
          'type' => Optional[Array[Aws_opsworks_instance_ephemeral_block_device_438]],
          'value' => undef
        },
        'hostname' => {
          'type' => Optional[String],
          'value' => undef
        },
        'infrastructure_class' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'last_service_error_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'layer_ids' => Array[String],
        'os' => {
          'type' => Optional[String],
          'value' => undef
        },
        'platform' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_dns' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_dns' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'registered_by' => {
          'type' => Optional[String],
          'value' => undef
        },
        'reported_agent_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'reported_os_family' => {
          'type' => Optional[String],
          'value' => undef
        },
        'reported_os_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'reported_os_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_block_device' => {
          'type' => Optional[Array[Aws_opsworks_instance_root_block_device_439]],
          'value' => undef
        },
        'root_device_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_device_volume_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'ssh_host_dsa_key_fingerprint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssh_host_rsa_key_fingerprint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssh_key_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stack_id' => String,
        'state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tenancy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'virtualization_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_instance_ebs_block_device_437 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_name' => String,
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_instance_ephemeral_block_device_438 => {
      attributes => {
        'device_name' => String,
        'virtual_name' => String
      }
    },
    Aws_opsworks_instance_root_block_device_439 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_java_app_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['app_server', 'app_server_version', 'auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'install_updates_on_boot', 'instance_shutdown_timeout', 'jvm_options', 'jvm_type', 'jvm_version', 'name', 'system_packages', 'use_ebs_optimized_instances']
        }
      },
      attributes => {
        'aws_opsworks_java_app_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'app_server' => {
          'type' => Optional[String],
          'value' => undef
        },
        'app_server_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_java_app_layer_ebs_volume_440]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'jvm_options' => {
          'type' => Optional[String],
          'value' => undef
        },
        'jvm_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'jvm_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stack_id' => String,
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_opsworks_java_app_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_java_app_layer_ebs_volume_440 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_memcached_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['allocated_memory', 'auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'install_updates_on_boot', 'instance_shutdown_timeout', 'name', 'system_packages', 'use_ebs_optimized_instances']
        }
      },
      attributes => {
        'aws_opsworks_memcached_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocated_memory' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_memcached_layer_ebs_volume_441]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stack_id' => String,
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_opsworks_memcached_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_memcached_layer_ebs_volume_441 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_mysql_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'install_updates_on_boot', 'instance_shutdown_timeout', 'name', 'root_password', 'root_password_on_all_instances', 'system_packages', 'use_ebs_optimized_instances']
        }
      },
      attributes => {
        'aws_opsworks_mysql_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_mysql_layer_ebs_volume_442]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_password_on_all_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'stack_id' => String,
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_opsworks_mysql_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_mysql_layer_ebs_volume_442 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_nodejs_app_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'install_updates_on_boot', 'instance_shutdown_timeout', 'name', 'nodejs_version', 'system_packages', 'use_ebs_optimized_instances']
        }
      },
      attributes => {
        'aws_opsworks_nodejs_app_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_nodejs_app_layer_ebs_volume_443]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'nodejs_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stack_id' => String,
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_opsworks_nodejs_app_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_nodejs_app_layer_ebs_volume_443 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_permission => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['allow_ssh', 'allow_sudo', 'level', 'stack_id']
        }
      },
      attributes => {
        'aws_opsworks_permission_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allow_ssh' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_sudo' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stack_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_arn' => String
      }
    },
    Aws_opsworks_permissionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_php_app_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'install_updates_on_boot', 'instance_shutdown_timeout', 'name', 'system_packages', 'use_ebs_optimized_instances']
        }
      },
      attributes => {
        'aws_opsworks_php_app_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_php_app_layer_ebs_volume_444]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stack_id' => String,
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_opsworks_php_app_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_php_app_layer_ebs_volume_444 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_rails_app_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['app_server', 'auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'bundler_version', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'install_updates_on_boot', 'instance_shutdown_timeout', 'manage_bundler', 'name', 'passenger_version', 'ruby_version', 'rubygems_version', 'system_packages', 'use_ebs_optimized_instances']
        }
      },
      attributes => {
        'aws_opsworks_rails_app_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'app_server' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'bundler_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_rails_app_layer_ebs_volume_445]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'manage_bundler' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'passenger_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ruby_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'rubygems_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stack_id' => String,
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_opsworks_rails_app_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_rails_app_layer_ebs_volume_445 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_rds_db_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['rds_db_instance_arn', 'stack_id']
        }
      },
      attributes => {
        'aws_opsworks_rds_db_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'db_password' => String,
        'db_user' => String,
        'rds_db_instance_arn' => String,
        'stack_id' => String
      }
    },
    Aws_opsworks_rds_db_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_stack => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['region', 'service_role_arn', 'vpc_id'],
          'providedAttributes' => ['agent_version', 'arn', 'berkshelf_version', 'color', 'configuration_manager_name', 'configuration_manager_version', 'custom_cookbooks_source', 'custom_json', 'default_availability_zone', 'default_os', 'default_root_device_type', 'default_ssh_key_name', 'default_subnet_id', 'hostname_theme', 'manage_berkshelf', 'stack_endpoint', 'tags', 'use_custom_cookbooks', 'use_opsworks_security_groups', 'vpc_id']
        }
      },
      attributes => {
        'aws_opsworks_stack_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'agent_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'berkshelf_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'color' => {
          'type' => Optional[String],
          'value' => undef
        },
        'configuration_manager_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'configuration_manager_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_cookbooks_source' => {
          'type' => Optional[Array[Aws_opsworks_stack_custom_cookbooks_source_446]],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_instance_profile_arn' => String,
        'default_os' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_root_device_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_ssh_key_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hostname_theme' => {
          'type' => Optional[String],
          'value' => undef
        },
        'manage_berkshelf' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'region' => String,
        'service_role_arn' => String,
        'stack_endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'use_custom_cookbooks' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'use_opsworks_security_groups' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_stackHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_stack_custom_cookbooks_source_446 => {
      attributes => {
        'password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'revision' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssh_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String,
        'url' => String,
        'username' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_static_web_layer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['stack_id'],
          'providedAttributes' => ['auto_assign_elastic_ips', 'auto_assign_public_ips', 'auto_healing', 'custom_configure_recipes', 'custom_deploy_recipes', 'custom_instance_profile_arn', 'custom_json', 'custom_security_group_ids', 'custom_setup_recipes', 'custom_shutdown_recipes', 'custom_undeploy_recipes', 'drain_elb_on_shutdown', 'ebs_volume', 'elastic_load_balancer', 'install_updates_on_boot', 'instance_shutdown_timeout', 'name', 'system_packages', 'use_ebs_optimized_instances']
        }
      },
      attributes => {
        'aws_opsworks_static_web_layer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'auto_assign_elastic_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_assign_public_ips' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'auto_healing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'custom_configure_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_deploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_json' => {
          'type' => Optional[String],
          'value' => undef
        },
        'custom_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_setup_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_shutdown_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'custom_undeploy_recipes' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'drain_elb_on_shutdown' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_volume' => {
          'type' => Optional[Array[Aws_opsworks_static_web_layer_ebs_volume_447]],
          'value' => undef
        },
        'elastic_load_balancer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'install_updates_on_boot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_shutdown_timeout' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'stack_id' => String,
        'system_packages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'use_ebs_optimized_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_opsworks_static_web_layerHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_opsworks_static_web_layer_ebs_volume_447 => {
      attributes => {
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mount_point' => String,
        'number_of_disks' => Integer,
        'raid_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'size' => Integer,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_opsworks_user_profile => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['user_arn'],
          'providedAttributes' => ['allow_self_management', 'ssh_public_key']
        }
      },
      attributes => {
        'aws_opsworks_user_profile_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allow_self_management' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ssh_public_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ssh_username' => String,
        'user_arn' => String
      }
    },
    Aws_opsworks_user_profileHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_organizations_account => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['email', 'iam_user_access_to_billing', 'name', 'role_name'],
          'providedAttributes' => ['arn', 'iam_user_access_to_billing', 'joined_method', 'joined_timestamp', 'role_name', 'status']
        }
      },
      attributes => {
        'aws_organizations_account_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'email' => String,
        'iam_user_access_to_billing' => {
          'type' => Optional[String],
          'value' => undef
        },
        'joined_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'joined_timestamp' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'role_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_organizations_accountHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_organizations_organization => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['feature_set'],
          'providedAttributes' => ['arn', 'aws_service_access_principals', 'feature_set', 'master_account_arn', 'master_account_email', 'master_account_id']
        }
      },
      attributes => {
        'aws_organizations_organization_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'aws_service_access_principals' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'feature_set' => {
          'type' => Optional[String],
          'value' => undef
        },
        'master_account_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'master_account_email' => {
          'type' => Optional[String],
          'value' => undef
        },
        'master_account_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_organizations_organizationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_organizations_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['type'],
          'providedAttributes' => ['arn', 'description', 'type']
        }
      },
      attributes => {
        'aws_organizations_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content' => String,
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_organizations_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_organizations_policy_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['policy_id', 'target_id']
        }
      },
      attributes => {
        'aws_organizations_policy_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'policy_id' => String,
        'target_id' => String
      }
    },
    Aws_organizations_policy_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_adm_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id'],
          'providedAttributes' => ['enabled']
        }
      },
      attributes => {
        'aws_pinpoint_adm_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_id' => String,
        'client_id' => String,
        'client_secret' => String,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_adm_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_apns_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id'],
          'providedAttributes' => ['bundle_id', 'certificate', 'default_authentication_method', 'enabled', 'private_key', 'team_id', 'token_key', 'token_key_id']
        }
      },
      attributes => {
        'aws_pinpoint_apns_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_id' => String,
        'bundle_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_authentication_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'private_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'team_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'token_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'token_key_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_apns_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_apns_sandbox_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id'],
          'providedAttributes' => ['bundle_id', 'certificate', 'default_authentication_method', 'enabled', 'private_key', 'team_id', 'token_key', 'token_key_id']
        }
      },
      attributes => {
        'aws_pinpoint_apns_sandbox_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_id' => String,
        'bundle_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_authentication_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'private_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'team_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'token_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'token_key_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_apns_sandbox_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_apns_voip_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id'],
          'providedAttributes' => ['bundle_id', 'certificate', 'default_authentication_method', 'enabled', 'private_key', 'team_id', 'token_key', 'token_key_id']
        }
      },
      attributes => {
        'aws_pinpoint_apns_voip_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_id' => String,
        'bundle_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_authentication_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'private_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'team_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'token_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'token_key_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_apns_voip_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_apns_voip_sandbox_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id'],
          'providedAttributes' => ['bundle_id', 'certificate', 'default_authentication_method', 'enabled', 'private_key', 'team_id', 'token_key', 'token_key_id']
        }
      },
      attributes => {
        'aws_pinpoint_apns_voip_sandbox_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_id' => String,
        'bundle_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'certificate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_authentication_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'private_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'team_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'token_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'token_key_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_apns_voip_sandbox_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_app => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['application_id', 'campaign_hook', 'limits', 'name', 'name_prefix', 'quiet_time']
        }
      },
      attributes => {
        'aws_pinpoint_app_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'campaign_hook' => {
          'type' => Optional[Array[Aws_pinpoint_app_campaign_hook_448]],
          'value' => undef
        },
        'limits' => {
          'type' => Optional[Array[Aws_pinpoint_app_limits_449]],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'quiet_time' => {
          'type' => Optional[Array[Aws_pinpoint_app_quiet_time_450]],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_appHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_app_campaign_hook_448 => {
      attributes => {
        'lambda_function_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'web_url' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_app_limits_449 => {
      attributes => {
        'daily' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'maximum_duration' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'messages_per_second' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'total' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_app_quiet_time_450 => {
      attributes => {
        'end' => {
          'type' => Optional[String],
          'value' => undef
        },
        'start' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_baidu_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id'],
          'providedAttributes' => ['enabled']
        }
      },
      attributes => {
        'aws_pinpoint_baidu_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'api_key' => String,
        'application_id' => String,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'secret_key' => String
      }
    },
    Aws_pinpoint_baidu_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_email_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id'],
          'providedAttributes' => ['enabled', 'messages_per_second']
        }
      },
      attributes => {
        'aws_pinpoint_email_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_id' => String,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'from_address' => String,
        'identity' => String,
        'messages_per_second' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'role_arn' => String
      }
    },
    Aws_pinpoint_email_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_event_stream => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id']
        }
      },
      attributes => {
        'aws_pinpoint_event_stream_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_id' => String,
        'destination_stream_arn' => String,
        'role_arn' => String
      }
    },
    Aws_pinpoint_event_streamHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_gcm_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id'],
          'providedAttributes' => ['enabled']
        }
      },
      attributes => {
        'aws_pinpoint_gcm_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'api_key' => String,
        'application_id' => String,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_gcm_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_pinpoint_sms_channel => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['application_id'],
          'providedAttributes' => ['enabled', 'promotional_messages_per_second', 'sender_id', 'short_code', 'transactional_messages_per_second']
        }
      },
      attributes => {
        'aws_pinpoint_sms_channel_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_id' => String,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'promotional_messages_per_second' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'sender_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'short_code' => {
          'type' => Optional[String],
          'value' => undef
        },
        'transactional_messages_per_second' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_pinpoint_sms_channelHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_placement_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'strategy']
        }
      },
      attributes => {
        'aws_placement_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'strategy' => String
      }
    },
    Aws_placement_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_proxy_protocol_policy => {
      attributes => {
        'aws_proxy_protocol_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'instance_ports' => Array[String],
        'load_balancer' => String
      }
    },
    Aws_proxy_protocol_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ram_resource_share => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['allow_external_principals', 'tags']
        }
      },
      attributes => {
        'aws_ram_resource_share_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allow_external_principals' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_ram_resource_shareHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_rds_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zones', 'cluster_identifier', 'cluster_identifier_prefix', 'database_name', 'db_subnet_group_name', 'engine', 'engine_mode', 'kms_key_id', 'master_username', 'port', 'source_region', 'storage_encrypted'],
          'providedAttributes' => ['apply_immediately', 'arn', 'availability_zones', 'backtrack_window', 'backup_retention_period', 'cluster_identifier', 'cluster_identifier_prefix', 'cluster_members', 'cluster_resource_id', 'database_name', 'db_cluster_parameter_group_name', 'db_subnet_group_name', 'deletion_protection', 'enabled_cloudwatch_logs_exports', 'endpoint', 'engine', 'engine_mode', 'engine_version', 'final_snapshot_identifier', 'global_cluster_identifier', 'hosted_zone_id', 'iam_database_authentication_enabled', 'iam_roles', 'kms_key_id', 'master_password', 'master_username', 'port', 'preferred_backup_window', 'preferred_maintenance_window', 'reader_endpoint', 'replication_source_identifier', 's3_import', 'scaling_configuration', 'skip_final_snapshot', 'snapshot_identifier', 'source_region', 'storage_encrypted', 'tags', 'vpc_security_group_ids']
        }
      },
      attributes => {
        'aws_rds_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'apply_immediately' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'backtrack_window' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'backup_retention_period' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cluster_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_identifier_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_members' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'cluster_resource_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'database_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'db_cluster_parameter_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'db_subnet_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deletion_protection' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enabled_cloudwatch_logs_exports' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'final_snapshot_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'global_cluster_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hosted_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_database_authentication_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iam_roles' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'master_password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'master_username' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'preferred_backup_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'preferred_maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'reader_endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'replication_source_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_import' => {
          'type' => Optional[Array[Aws_rds_cluster_s3_import_451]],
          'value' => undef
        },
        'scaling_configuration' => {
          'type' => Optional[Array[Aws_rds_cluster_scaling_configuration_452]],
          'value' => undef
        },
        'skip_final_snapshot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'snapshot_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_rds_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_rds_cluster_endpoint => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cluster_endpoint_identifier', 'cluster_identifier'],
          'providedAttributes' => ['arn', 'endpoint', 'excluded_members', 'static_members']
        }
      },
      attributes => {
        'aws_rds_cluster_endpoint_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_endpoint_identifier' => String,
        'cluster_identifier' => String,
        'custom_endpoint_type' => String,
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'excluded_members' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'static_members' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_rds_cluster_endpointHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_rds_cluster_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'cluster_identifier', 'db_subnet_group_name', 'engine', 'engine_version', 'identifier', 'identifier_prefix'],
          'providedAttributes' => ['apply_immediately', 'arn', 'auto_minor_version_upgrade', 'availability_zone', 'copy_tags_to_snapshot', 'db_parameter_group_name', 'db_subnet_group_name', 'dbi_resource_id', 'endpoint', 'engine', 'engine_version', 'identifier', 'identifier_prefix', 'kms_key_id', 'monitoring_interval', 'monitoring_role_arn', 'performance_insights_enabled', 'performance_insights_kms_key_id', 'port', 'preferred_backup_window', 'preferred_maintenance_window', 'promotion_tier', 'publicly_accessible', 'storage_encrypted', 'tags', 'writer']
        }
      },
      attributes => {
        'aws_rds_cluster_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'apply_immediately' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'auto_minor_version_upgrade' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_identifier' => String,
        'copy_tags_to_snapshot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'db_parameter_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'db_subnet_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dbi_resource_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'identifier_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_class' => String,
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'monitoring_interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'monitoring_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'performance_insights_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'performance_insights_kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'preferred_backup_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'preferred_maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'promotion_tier' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'publicly_accessible' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'storage_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'writer' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_rds_cluster_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_rds_cluster_parameter_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'family', 'name', 'name_prefix'],
          'providedAttributes' => ['arn', 'description', 'name', 'name_prefix', 'parameter', 'tags']
        }
      },
      attributes => {
        'aws_rds_cluster_parameter_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'family' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameter' => {
          'type' => Optional[Array[Aws_rds_cluster_parameter_group_parameter_453]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_rds_cluster_parameter_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_rds_cluster_parameter_group_parameter_453 => {
      attributes => {
        'apply_method' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'value' => String
      }
    },
    Aws_rds_cluster_s3_import_451 => {
      attributes => {
        'bucket_name' => String,
        'bucket_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ingestion_role' => String,
        'source_engine' => String,
        'source_engine_version' => String
      }
    },
    Aws_rds_cluster_scaling_configuration_452 => {
      attributes => {
        'auto_pause' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'max_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'min_capacity' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'seconds_until_auto_pause' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_rds_global_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['database_name', 'engine', 'engine_version', 'global_cluster_identifier', 'storage_encrypted'],
          'providedAttributes' => ['arn', 'database_name', 'deletion_protection', 'engine', 'engine_version', 'global_cluster_resource_id', 'storage_encrypted']
        }
      },
      attributes => {
        'aws_rds_global_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'database_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'deletion_protection' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'engine' => {
          'type' => Optional[String],
          'value' => undef
        },
        'engine_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'global_cluster_identifier' => String,
        'global_cluster_resource_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_rds_global_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_redshift_cluster => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'cluster_identifier', 'cluster_subnet_group_name', 'master_username', 'snapshot_cluster_identifier', 'snapshot_identifier'],
          'providedAttributes' => ['allow_version_upgrade', 'automated_snapshot_retention_period', 'availability_zone', 'bucket_name', 'cluster_parameter_group_name', 'cluster_public_key', 'cluster_revision_number', 'cluster_security_groups', 'cluster_subnet_group_name', 'cluster_type', 'cluster_version', 'database_name', 'dns_name', 'elastic_ip', 'enable_logging', 'encrypted', 'endpoint', 'enhanced_vpc_routing', 'final_snapshot_identifier', 'iam_roles', 'kms_key_id', 'logging', 'master_password', 'master_username', 'number_of_nodes', 'owner_account', 'port', 'preferred_maintenance_window', 'publicly_accessible', 's3_key_prefix', 'skip_final_snapshot', 'snapshot_cluster_identifier', 'snapshot_copy', 'snapshot_identifier', 'tags', 'vpc_security_group_ids']
        }
      },
      attributes => {
        'aws_redshift_cluster_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allow_version_upgrade' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'automated_snapshot_retention_period' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bucket_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_identifier' => String,
        'cluster_parameter_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_public_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_revision_number' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'cluster_subnet_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cluster_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'database_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dns_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'elastic_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_logging' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enhanced_vpc_routing' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'final_snapshot_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_roles' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'logging' => {
          'type' => Optional[Array[Aws_redshift_cluster_logging_454]],
          'value' => undef
        },
        'master_password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'master_username' => {
          'type' => Optional[String],
          'value' => undef
        },
        'node_type' => String,
        'number_of_nodes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'owner_account' => {
          'type' => Optional[String],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'preferred_maintenance_window' => {
          'type' => Optional[String],
          'value' => undef
        },
        'publicly_accessible' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        's3_key_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'skip_final_snapshot' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'snapshot_cluster_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'snapshot_copy' => {
          'type' => Optional[Array[Aws_redshift_cluster_snapshot_copy_455]],
          'value' => undef
        },
        'snapshot_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_redshift_clusterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_redshift_cluster_logging_454 => {
      attributes => {
        'bucket_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable' => Boolean,
        's3_key_prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_redshift_cluster_snapshot_copy_455 => {
      attributes => {
        'destination_region' => String,
        'grant_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'retention_period' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_redshift_event_subscription => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'tags'],
          'providedAttributes' => ['customer_aws_id', 'enabled', 'event_categories', 'severity', 'source_ids', 'source_type', 'status', 'tags']
        }
      },
      attributes => {
        'aws_redshift_event_subscription_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'customer_aws_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'event_categories' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'name' => String,
        'severity' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sns_topic_arn' => String,
        'source_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'source_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_redshift_event_subscriptionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_redshift_parameter_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'family', 'name'],
          'providedAttributes' => ['description', 'parameter']
        }
      },
      attributes => {
        'aws_redshift_parameter_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'family' => String,
        'name' => String,
        'parameter' => {
          'type' => Optional[Array[Aws_redshift_parameter_group_parameter_456]],
          'value' => undef
        }
      }
    },
    Aws_redshift_parameter_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_redshift_parameter_group_parameter_456 => {
      attributes => {
        'name' => String,
        'value' => String
      }
    },
    Aws_redshift_security_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name'],
          'providedAttributes' => ['description']
        }
      },
      attributes => {
        'aws_redshift_security_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ingress' => Array[Aws_redshift_security_group_ingress_457],
        'name' => String
      }
    },
    Aws_redshift_security_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_redshift_security_group_ingress_457 => {
      attributes => {
        'cidr' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_group_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'security_group_owner_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_redshift_snapshot_copy_grant => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['kms_key_id', 'snapshot_copy_grant_name', 'tags'],
          'providedAttributes' => ['kms_key_id', 'tags']
        }
      },
      attributes => {
        'aws_redshift_snapshot_copy_grant_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'snapshot_copy_grant_name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_redshift_snapshot_copy_grantHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_redshift_subnet_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['description', 'tags']
        }
      },
      attributes => {
        'aws_redshift_subnet_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'subnet_ids' => Array[String],
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_redshift_subnet_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_resourcegroups_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'description']
        }
      },
      attributes => {
        'aws_resourcegroups_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'resource_query' => Array[Aws_resourcegroups_group_resource_query_458]
      }
    },
    Aws_resourcegroups_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_resourcegroups_group_resource_query_458 => {
      attributes => {
        'query' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_route => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['destination_cidr_block', 'destination_ipv6_cidr_block', 'route_table_id'],
          'providedAttributes' => ['destination_cidr_block', 'destination_ipv6_cidr_block', 'destination_prefix_list_id', 'egress_only_gateway_id', 'gateway_id', 'instance_id', 'instance_owner_id', 'nat_gateway_id', 'network_interface_id', 'origin', 'state', 'transit_gateway_id', 'vpc_peering_connection_id']
        }
      },
      attributes => {
        'aws_route_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'destination_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'destination_ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'destination_prefix_list_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'egress_only_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'nat_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'origin' => {
          'type' => Optional[String],
          'value' => undef
        },
        'route_table_id' => String,
        'state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'transit_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_peering_connection_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_route53_delegation_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['reference_name'],
          'providedAttributes' => ['name_servers', 'reference_name']
        }
      },
      attributes => {
        'aws_route53_delegation_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name_servers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'reference_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_route53_delegation_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_route53_health_check => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['ip_address', 'measure_latency', 'reference_name', 'request_interval', 'type'],
          'providedAttributes' => ['child_health_threshold', 'child_healthchecks', 'cloudwatch_alarm_name', 'cloudwatch_alarm_region', 'enable_sni', 'failure_threshold', 'fqdn', 'insufficient_data_health_status', 'invert_healthcheck', 'ip_address', 'measure_latency', 'port', 'reference_name', 'regions', 'request_interval', 'resource_path', 'search_string', 'tags']
        }
      },
      attributes => {
        'aws_route53_health_check_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'child_health_threshold' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'child_healthchecks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'cloudwatch_alarm_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cloudwatch_alarm_region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_sni' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'failure_threshold' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'fqdn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'insufficient_data_health_status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'invert_healthcheck' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'measure_latency' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'reference_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'regions' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'request_interval' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'resource_path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'search_string' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_route53_health_checkHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_route53_query_log => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cloudwatch_log_group_arn', 'zone_id']
        }
      },
      attributes => {
        'aws_route53_query_log_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cloudwatch_log_group_arn' => String,
        'zone_id' => String
      }
    },
    Aws_route53_query_logHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_route53_record => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'zone_id'],
          'providedAttributes' => ['alias', 'allow_overwrite', 'failover', 'failover_routing_policy', 'fqdn', 'geolocation_routing_policy', 'health_check_id', 'latency_routing_policy', 'multivalue_answer_routing_policy', 'records', 'set_identifier', 'ttl', 'weight', 'weighted_routing_policy']
        }
      },
      attributes => {
        'aws_route53_record_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'alias' => {
          'type' => Optional[Array[Aws_route53_record_alias_459]],
          'value' => undef
        },
        'allow_overwrite' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'failover' => {
          'type' => Optional[String],
          'value' => undef
        },
        'failover_routing_policy' => {
          'type' => Optional[Array[Aws_route53_record_failover_routing_policy_460]],
          'value' => undef
        },
        'fqdn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'geolocation_routing_policy' => {
          'type' => Optional[Array[Aws_route53_record_geolocation_routing_policy_461]],
          'value' => undef
        },
        'health_check_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'latency_routing_policy' => {
          'type' => Optional[Array[Aws_route53_record_latency_routing_policy_462]],
          'value' => undef
        },
        'multivalue_answer_routing_policy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'records' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'set_identifier' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ttl' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'type' => String,
        'weight' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'weighted_routing_policy' => {
          'type' => Optional[Array[Aws_route53_record_weighted_routing_policy_463]],
          'value' => undef
        },
        'zone_id' => String
      }
    },
    Aws_route53_recordHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_route53_record_alias_459 => {
      attributes => {
        'evaluate_target_health' => Boolean,
        'name' => String,
        'zone_id' => String
      }
    },
    Aws_route53_record_failover_routing_policy_460 => {
      attributes => {
        'type' => String
      }
    },
    Aws_route53_record_geolocation_routing_policy_461 => {
      attributes => {
        'continent' => {
          'type' => Optional[String],
          'value' => undef
        },
        'country' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subdivision' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_route53_record_latency_routing_policy_462 => {
      attributes => {
        'region' => String
      }
    },
    Aws_route53_record_weighted_routing_policy_463 => {
      attributes => {
        'weight' => Integer
      }
    },
    Aws_route53_zone => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['delegation_set_id', 'name', 'vpc_id', 'vpc_region'],
          'providedAttributes' => ['comment', 'delegation_set_id', 'force_destroy', 'name_servers', 'tags', 'vpc', 'vpc_id', 'vpc_region', 'zone_id']
        }
      },
      attributes => {
        'aws_route53_zone_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'comment' => {
          'type' => Optional[String],
          'value' => undef
        },
        'delegation_set_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'force_destroy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'name' => String,
        'name_servers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc' => {
          'type' => Optional[Array[Aws_route53_zone_vpc_464]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'zone_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_route53_zoneHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_route53_zone_association => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['vpc_region']
        }
      },
      attributes => {
        'aws_route53_zone_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_id' => String,
        'vpc_region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'zone_id' => String
      }
    },
    Aws_route53_zone_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_route53_zone_vpc_464 => {
      attributes => {
        'vpc_id' => String,
        'vpc_region' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_routeHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_route_table => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['vpc_id'],
          'providedAttributes' => ['owner_id', 'propagating_vgws', 'route', 'tags']
        }
      },
      attributes => {
        'aws_route_table_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'propagating_vgws' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'route' => {
          'type' => Optional[Array[Aws_route_table_route_465]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => String
      }
    },
    Aws_route_tableHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_route_table_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['subnet_id']
        }
      },
      attributes => {
        'aws_route_table_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'route_table_id' => String,
        'subnet_id' => String
      }
    },
    Aws_route_table_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_route_table_route_465 => {
      attributes => {
        'cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'egress_only_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'nat_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'transit_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_peering_connection_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_s3_account_public_access_block => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['account_id'],
          'providedAttributes' => ['account_id', 'block_public_acls', 'block_public_policy', 'ignore_public_acls', 'restrict_public_buckets']
        }
      },
      attributes => {
        'aws_s3_account_public_access_block_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'account_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'block_public_acls' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'block_public_policy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ignore_public_acls' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'restrict_public_buckets' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_s3_account_public_access_blockHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_s3_bucket => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket', 'bucket_prefix'],
          'providedAttributes' => ['acceleration_status', 'acl', 'arn', 'bucket', 'bucket_domain_name', 'bucket_prefix', 'bucket_regional_domain_name', 'cors_rule', 'force_destroy', 'hosted_zone_id', 'lifecycle_rule', 'logging', 'object_lock_configuration', 'policy', 'region', 'replication_configuration', 'request_payer', 'server_side_encryption_configuration', 'tags', 'versioning', 'website', 'website_domain', 'website_endpoint']
        }
      },
      attributes => {
        'aws_s3_bucket_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'acceleration_status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'acl' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bucket' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bucket_domain_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bucket_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bucket_regional_domain_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cors_rule' => {
          'type' => Optional[Array[Aws_s3_bucket_cors_rule_466]],
          'value' => undef
        },
        'force_destroy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'hosted_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'lifecycle_rule' => {
          'type' => Optional[Array[Aws_s3_bucket_lifecycle_rule_467]],
          'value' => undef
        },
        'logging' => {
          'type' => Optional[Array[Aws_s3_bucket_logging_472]],
          'value' => undef
        },
        'object_lock_configuration' => {
          'type' => Optional[Array[Aws_s3_bucket_object_lock_configuration_473]],
          'value' => undef
        },
        'policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'replication_configuration' => {
          'type' => Optional[Array[Aws_s3_bucket_replication_configuration_476]],
          'value' => undef
        },
        'request_payer' => {
          'type' => Optional[String],
          'value' => undef
        },
        'server_side_encryption_configuration' => {
          'type' => Optional[Array[Aws_s3_bucket_server_side_encryption_configuration_483]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'versioning' => {
          'type' => Optional[Array[Aws_s3_bucket_versioning_486]],
          'value' => undef
        },
        'website' => {
          'type' => Optional[Array[Aws_s3_bucket_website_487]],
          'value' => undef
        },
        'website_domain' => {
          'type' => Optional[String],
          'value' => undef
        },
        'website_endpoint' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_s3_bucketHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_s3_bucket_cors_rule_466 => {
      attributes => {
        'allowed_headers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'allowed_methods' => Array[String],
        'allowed_origins' => Array[String],
        'expose_headers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'max_age_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_inventory => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket', 'name'],
          'providedAttributes' => ['enabled', 'filter', 'optional_fields']
        }
      },
      attributes => {
        'aws_s3_bucket_inventory_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'bucket' => String,
        'destination' => Array[Aws_s3_bucket_inventory_destination_488],
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'filter' => {
          'type' => Optional[Array[Aws_s3_bucket_inventory_filter_493]],
          'value' => undef
        },
        'included_object_versions' => String,
        'name' => String,
        'optional_fields' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'schedule' => Array[Aws_s3_bucket_inventory_schedule_494]
      }
    },
    Aws_s3_bucket_inventoryHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_s3_bucket_inventory_destination_488 => {
      attributes => {
        'bucket' => Array[Aws_s3_bucket_inventory_destination_488_bucket_489]
      }
    },
    Aws_s3_bucket_inventory_destination_488_bucket_489 => {
      attributes => {
        'account_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bucket_arn' => String,
        'encryption' => {
          'type' => Optional[Array[Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490]],
          'value' => undef
        },
        'format' => String,
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490 => {
      attributes => {
        'sse_kms' => {
          'type' => Optional[Array[Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_kms_491]],
          'value' => undef
        },
        'sse_s3' => {
          'type' => Optional[Array[Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_s3_492]],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_kms_491 => {
      attributes => {
        'key_id' => String
      }
    },
    Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_s3_492 => {
    },
    Aws_s3_bucket_inventory_filter_493 => {
      attributes => {
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_inventory_schedule_494 => {
      attributes => {
        'frequency' => String
      }
    },
    Aws_s3_bucket_lifecycle_rule_467 => {
      attributes => {
        'abort_incomplete_multipart_upload_days' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'enabled' => Boolean,
        'expiration' => {
          'type' => Optional[Array[Aws_s3_bucket_lifecycle_rule_467_expiration_468]],
          'value' => undef
        },
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'noncurrent_version_expiration' => {
          'type' => Optional[Array[Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_expiration_469]],
          'value' => undef
        },
        'noncurrent_version_transition' => {
          'type' => Optional[Array[Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_transition_470]],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'transition' => {
          'type' => Optional[Array[Aws_s3_bucket_lifecycle_rule_467_transition_471]],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_lifecycle_rule_467_expiration_468 => {
      attributes => {
        'date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'days' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'expired_object_delete_marker' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_expiration_469 => {
      attributes => {
        'days' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_transition_470 => {
      attributes => {
        'days' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'storage_class' => String
      }
    },
    Aws_s3_bucket_lifecycle_rule_467_transition_471 => {
      attributes => {
        'date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'days' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'storage_class' => String
      }
    },
    Aws_s3_bucket_logging_472 => {
      attributes => {
        'target_bucket' => String,
        'target_prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_metric => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket', 'name'],
          'providedAttributes' => ['filter']
        }
      },
      attributes => {
        'aws_s3_bucket_metric_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'bucket' => String,
        'filter' => {
          'type' => Optional[Array[Aws_s3_bucket_metric_filter_495]],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_s3_bucket_metricHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_s3_bucket_metric_filter_495 => {
      attributes => {
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_notification => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket'],
          'providedAttributes' => ['lambda_function', 'queue', 'topic']
        }
      },
      attributes => {
        'aws_s3_bucket_notification_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'bucket' => String,
        'lambda_function' => {
          'type' => Optional[Array[Aws_s3_bucket_notification_lambda_function_496]],
          'value' => undef
        },
        'queue' => {
          'type' => Optional[Array[Aws_s3_bucket_notification_queue_497]],
          'value' => undef
        },
        'topic' => {
          'type' => Optional[Array[Aws_s3_bucket_notification_topic_498]],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_notificationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_s3_bucket_notification_lambda_function_496 => {
      attributes => {
        'events' => Array[String],
        'filter_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'filter_suffix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'lambda_function_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_notification_queue_497 => {
      attributes => {
        'events' => Array[String],
        'filter_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'filter_suffix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'queue_arn' => String
      }
    },
    Aws_s3_bucket_notification_topic_498 => {
      attributes => {
        'events' => Array[String],
        'filter_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'filter_suffix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'topic_arn' => String
      }
    },
    Aws_s3_bucket_object => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket', 'key'],
          'providedAttributes' => ['acl', 'cache_control', 'content', 'content_base64', 'content_disposition', 'content_encoding', 'content_language', 'content_type', 'etag', 'kms_key_id', 'server_side_encryption', 'source', 'storage_class', 'tags', 'version_id', 'website_redirect']
        }
      },
      attributes => {
        'aws_s3_bucket_object_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'acl' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bucket' => String,
        'cache_control' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content_base64' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content_disposition' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content_encoding' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content_language' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'etag' => {
          'type' => Optional[String],
          'value' => undef
        },
        'key' => String,
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'server_side_encryption' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_class' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'version_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'website_redirect' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_objectHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_s3_bucket_object_lock_configuration_473 => {
      attributes => {
        'object_lock_enabled' => String,
        'rule' => {
          'type' => Optional[Array[Aws_s3_bucket_object_lock_configuration_473_rule_474]],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_object_lock_configuration_473_rule_474 => {
      attributes => {
        'default_retention' => Array[Aws_s3_bucket_object_lock_configuration_473_rule_474_default_retention_475]
      }
    },
    Aws_s3_bucket_object_lock_configuration_473_rule_474_default_retention_475 => {
      attributes => {
        'days' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'mode' => String,
        'years' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket']
        }
      },
      attributes => {
        'aws_s3_bucket_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'bucket' => String,
        'policy' => String
      }
    },
    Aws_s3_bucket_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_s3_bucket_public_access_block => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket'],
          'providedAttributes' => ['block_public_acls', 'block_public_policy', 'ignore_public_acls', 'restrict_public_buckets']
        }
      },
      attributes => {
        'aws_s3_bucket_public_access_block_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'block_public_acls' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'block_public_policy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'bucket' => String,
        'ignore_public_acls' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'restrict_public_buckets' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_public_access_blockHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_s3_bucket_replication_configuration_476 => {
      attributes => {
        'role' => String,
        'rules' => Array[Aws_s3_bucket_replication_configuration_476_rules_477]
      }
    },
    Aws_s3_bucket_replication_configuration_476_rules_477 => {
      attributes => {
        'destination' => Array[Aws_s3_bucket_replication_configuration_476_rules_477_destination_478],
        'filter' => {
          'type' => Optional[Array[Aws_s3_bucket_replication_configuration_476_rules_477_filter_480]],
          'value' => undef
        },
        'id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'priority' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'source_selection_criteria' => {
          'type' => Optional[Array[Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481]],
          'value' => undef
        },
        'status' => String
      }
    },
    Aws_s3_bucket_replication_configuration_476_rules_477_destination_478 => {
      attributes => {
        'access_control_translation' => {
          'type' => Optional[Array[Aws_s3_bucket_replication_configuration_476_rules_477_destination_478_access_control_translation_479]],
          'value' => undef
        },
        'account_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bucket' => String,
        'replica_kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'storage_class' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_replication_configuration_476_rules_477_destination_478_access_control_translation_479 => {
      attributes => {
        'owner' => String
      }
    },
    Aws_s3_bucket_replication_configuration_476_rules_477_filter_480 => {
      attributes => {
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481 => {
      attributes => {
        'sse_kms_encrypted_objects' => {
          'type' => Optional[Array[Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481_sse_kms_encrypted_objects_482]],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481_sse_kms_encrypted_objects_482 => {
      attributes => {
        'enabled' => Boolean
      }
    },
    Aws_s3_bucket_server_side_encryption_configuration_483 => {
      attributes => {
        'rule' => Array[Aws_s3_bucket_server_side_encryption_configuration_483_rule_484]
      }
    },
    Aws_s3_bucket_server_side_encryption_configuration_483_rule_484 => {
      attributes => {
        'apply_server_side_encryption_by_default' => Array[Aws_s3_bucket_server_side_encryption_configuration_483_rule_484_apply_server_side_encryption_by_default_485]
      }
    },
    Aws_s3_bucket_server_side_encryption_configuration_483_rule_484_apply_server_side_encryption_by_default_485 => {
      attributes => {
        'kms_master_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sse_algorithm' => String
      }
    },
    Aws_s3_bucket_versioning_486 => {
      attributes => {
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'mfa_delete' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_s3_bucket_website_487 => {
      attributes => {
        'error_document' => {
          'type' => Optional[String],
          'value' => undef
        },
        'index_document' => {
          'type' => Optional[String],
          'value' => undef
        },
        'redirect_all_requests_to' => {
          'type' => Optional[String],
          'value' => undef
        },
        'routing_rules' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_sagemaker_notebook_instance => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['kms_key_id', 'name', 'security_groups', 'subnet_id'],
          'providedAttributes' => ['arn', 'kms_key_id', 'security_groups', 'subnet_id', 'tags']
        }
      },
      attributes => {
        'aws_sagemaker_notebook_instance_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_type' => String,
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'role_arn' => String,
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_sagemaker_notebook_instanceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_secretsmanager_secret => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['arn', 'description', 'kms_key_id', 'name', 'name_prefix', 'policy', 'recovery_window_in_days', 'rotation_enabled', 'rotation_lambda_arn', 'rotation_rules', 'tags']
        }
      },
      attributes => {
        'aws_secretsmanager_secret_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'kms_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'recovery_window_in_days' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'rotation_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'rotation_lambda_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'rotation_rules' => {
          'type' => Optional[Array[Aws_secretsmanager_secret_rotation_rules_499]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_secretsmanager_secretHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_secretsmanager_secret_rotation_rules_499 => {
      attributes => {
        'automatically_after_days' => Integer
      }
    },
    Aws_secretsmanager_secret_version => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['secret_binary', 'secret_id', 'secret_string'],
          'providedAttributes' => ['arn', 'secret_binary', 'secret_string', 'version_id', 'version_stages']
        }
      },
      attributes => {
        'aws_secretsmanager_secret_version_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'secret_binary' => {
          'type' => Optional[String],
          'value' => undef
        },
        'secret_id' => String,
        'secret_string' => {
          'type' => Optional[String],
          'value' => undef
        },
        'version_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'version_stages' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_secretsmanager_secret_versionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_security_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name', 'name_prefix', 'vpc_id'],
          'providedAttributes' => ['arn', 'description', 'egress', 'ingress', 'name', 'name_prefix', 'owner_id', 'revoke_rules_on_delete', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_security_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'egress' => {
          'type' => Optional[Array[Aws_security_group_egress_500]],
          'value' => undef
        },
        'ingress' => {
          'type' => Optional[Array[Aws_security_group_ingress_501]],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'revoke_rules_on_delete' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_security_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_security_group_egress_500 => {
      attributes => {
        'cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'from_port' => Integer,
        'ipv6_cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'prefix_list_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'protocol' => String,
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'self' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'to_port' => Integer
      }
    },
    Aws_security_group_ingress_501 => {
      attributes => {
        'cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'from_port' => Integer,
        'ipv6_cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'prefix_list_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'protocol' => String,
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'self' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'to_port' => Integer
      }
    },
    Aws_security_group_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cidr_blocks', 'from_port', 'ipv6_cidr_blocks', 'prefix_list_ids', 'protocol', 'security_group_id', 'self', 'source_security_group_id', 'to_port', 'type'],
          'providedAttributes' => ['cidr_blocks', 'description', 'ipv6_cidr_blocks', 'prefix_list_ids', 'self', 'source_security_group_id']
        }
      },
      attributes => {
        'aws_security_group_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'from_port' => Integer,
        'ipv6_cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'prefix_list_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'protocol' => String,
        'security_group_id' => String,
        'self' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'source_security_group_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'to_port' => Integer,
        'type' => String
      }
    },
    Aws_security_group_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_securityhub_account => {
      attributes => {
        'aws_securityhub_account_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_securityhub_accountHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_securityhub_product_subscription => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['product_arn'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_securityhub_product_subscription_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'product_arn' => String
      }
    },
    Aws_securityhub_product_subscriptionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_securityhub_standards_subscription => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['standards_arn']
        }
      },
      attributes => {
        'aws_securityhub_standards_subscription_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'standards_arn' => String
      }
    },
    Aws_securityhub_standards_subscriptionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_service_discovery_http_namespace => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name'],
          'providedAttributes' => ['arn', 'description']
        }
      },
      attributes => {
        'aws_service_discovery_http_namespace_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_service_discovery_http_namespaceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_service_discovery_private_dns_namespace => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name', 'vpc'],
          'providedAttributes' => ['arn', 'description', 'hosted_zone']
        }
      },
      attributes => {
        'aws_service_discovery_private_dns_namespace_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hosted_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'vpc' => String
      }
    },
    Aws_service_discovery_private_dns_namespaceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_service_discovery_public_dns_namespace => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name'],
          'providedAttributes' => ['arn', 'description', 'hosted_zone']
        }
      },
      attributes => {
        'aws_service_discovery_public_dns_namespace_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hosted_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_service_discovery_public_dns_namespaceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_service_discovery_service => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['health_check_custom_config', 'name'],
          'providedAttributes' => ['arn', 'description', 'health_check_config', 'health_check_custom_config']
        }
      },
      attributes => {
        'aws_service_discovery_service_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dns_config' => Array[Aws_service_discovery_service_dns_config_502],
        'health_check_config' => {
          'type' => Optional[Array[Aws_service_discovery_service_health_check_config_504]],
          'value' => undef
        },
        'health_check_custom_config' => {
          'type' => Optional[Array[Aws_service_discovery_service_health_check_custom_config_505]],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_service_discovery_serviceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_service_discovery_service_dns_config_502 => {
      attributes => {
        'dns_records' => Array[Aws_service_discovery_service_dns_config_502_dns_records_503],
        'namespace_id' => String,
        'routing_policy' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_service_discovery_service_dns_config_502_dns_records_503 => {
      attributes => {
        'ttl' => Integer,
        'type' => String
      }
    },
    Aws_service_discovery_service_health_check_config_504 => {
      attributes => {
        'failure_threshold' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'resource_path' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_service_discovery_service_health_check_custom_config_505 => {
      attributes => {
        'failure_threshold' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_servicecatalog_portfolio => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'created_time', 'description', 'provider_name', 'tags']
        }
      },
      attributes => {
        'aws_servicecatalog_portfolio_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'created_time' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'provider_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_servicecatalog_portfolioHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_active_receipt_rule_set => {
      attributes => {
        'aws_ses_active_receipt_rule_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'rule_set_name' => String
      }
    },
    Aws_ses_active_receipt_rule_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_configuration_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name']
        }
      },
      attributes => {
        'aws_ses_configuration_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_ses_configuration_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_domain_dkim => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['domain'],
          'providedAttributes' => ['dkim_tokens']
        }
      },
      attributes => {
        'aws_ses_domain_dkim_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'dkim_tokens' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'domain' => String
      }
    },
    Aws_ses_domain_dkimHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_domain_identity => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['domain'],
          'providedAttributes' => ['arn', 'verification_token']
        }
      },
      attributes => {
        'aws_ses_domain_identity_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain' => String,
        'verification_token' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ses_domain_identityHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_domain_identity_verification => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['domain'],
          'providedAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_ses_domain_identity_verification_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain' => String
      }
    },
    Aws_ses_domain_identity_verificationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_domain_mail_from => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['domain'],
          'providedAttributes' => ['behavior_on_mx_failure']
        }
      },
      attributes => {
        'aws_ses_domain_mail_from_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'behavior_on_mx_failure' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain' => String,
        'mail_from_domain' => String
      }
    },
    Aws_ses_domain_mail_fromHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_event_destination => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cloudwatch_destination', 'configuration_set_name', 'enabled', 'kinesis_destination', 'matching_types', 'name', 'sns_destination'],
          'providedAttributes' => ['cloudwatch_destination', 'enabled', 'kinesis_destination', 'sns_destination']
        }
      },
      attributes => {
        'aws_ses_event_destination_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cloudwatch_destination' => {
          'type' => Optional[Array[Aws_ses_event_destination_cloudwatch_destination_506]],
          'value' => undef
        },
        'configuration_set_name' => String,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kinesis_destination' => {
          'type' => Optional[Array[Aws_ses_event_destination_kinesis_destination_507]],
          'value' => undef
        },
        'matching_types' => Array[String],
        'name' => String,
        'sns_destination' => {
          'type' => Optional[Array[Aws_ses_event_destination_sns_destination_508]],
          'value' => undef
        }
      }
    },
    Aws_ses_event_destinationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_event_destination_cloudwatch_destination_506 => {
      attributes => {
        'default_value' => String,
        'dimension_name' => String,
        'value_source' => String
      }
    },
    Aws_ses_event_destination_kinesis_destination_507 => {
      attributes => {
        'role_arn' => String,
        'stream_arn' => String
      }
    },
    Aws_ses_event_destination_sns_destination_508 => {
      attributes => {
        'topic_arn' => String
      }
    },
    Aws_ses_identity_notification_topic => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['identity', 'notification_type'],
          'providedAttributes' => ['topic_arn']
        }
      },
      attributes => {
        'aws_ses_identity_notification_topic_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'identity' => String,
        'notification_type' => String,
        'topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ses_identity_notification_topicHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_receipt_filter => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cidr', 'name', 'policy']
        }
      },
      attributes => {
        'aws_ses_receipt_filter_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cidr' => String,
        'name' => String,
        'policy' => String
      }
    },
    Aws_ses_receipt_filterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_receipt_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'rule_set_name'],
          'providedAttributes' => ['add_header_action', 'after', 'bounce_action', 'enabled', 'lambda_action', 'recipients', 's3_action', 'scan_enabled', 'sns_action', 'stop_action', 'tls_policy', 'workmail_action']
        }
      },
      attributes => {
        'aws_ses_receipt_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'add_header_action' => {
          'type' => Optional[Array[Aws_ses_receipt_rule_add_header_action_509]],
          'value' => undef
        },
        'after' => {
          'type' => Optional[String],
          'value' => undef
        },
        'bounce_action' => {
          'type' => Optional[Array[Aws_ses_receipt_rule_bounce_action_510]],
          'value' => undef
        },
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'lambda_action' => {
          'type' => Optional[Array[Aws_ses_receipt_rule_lambda_action_511]],
          'value' => undef
        },
        'name' => String,
        'recipients' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'rule_set_name' => String,
        's3_action' => {
          'type' => Optional[Array[Aws_ses_receipt_rule_s3_action_512]],
          'value' => undef
        },
        'scan_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'sns_action' => {
          'type' => Optional[Array[Aws_ses_receipt_rule_sns_action_513]],
          'value' => undef
        },
        'stop_action' => {
          'type' => Optional[Array[Aws_ses_receipt_rule_stop_action_514]],
          'value' => undef
        },
        'tls_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'workmail_action' => {
          'type' => Optional[Array[Aws_ses_receipt_rule_workmail_action_515]],
          'value' => undef
        }
      }
    },
    Aws_ses_receipt_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_receipt_rule_add_header_action_509 => {
      attributes => {
        'header_name' => String,
        'header_value' => String,
        'position' => Integer
      }
    },
    Aws_ses_receipt_rule_bounce_action_510 => {
      attributes => {
        'message' => String,
        'position' => Integer,
        'sender' => String,
        'smtp_reply_code' => String,
        'status_code' => {
          'type' => Optional[String],
          'value' => undef
        },
        'topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ses_receipt_rule_lambda_action_511 => {
      attributes => {
        'function_arn' => String,
        'invocation_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'position' => Integer,
        'topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ses_receipt_rule_s3_action_512 => {
      attributes => {
        'bucket_name' => String,
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'object_key_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'position' => Integer,
        'topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ses_receipt_rule_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['rule_set_name']
        }
      },
      attributes => {
        'aws_ses_receipt_rule_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'rule_set_name' => String
      }
    },
    Aws_ses_receipt_rule_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ses_receipt_rule_sns_action_513 => {
      attributes => {
        'position' => Integer,
        'topic_arn' => String
      }
    },
    Aws_ses_receipt_rule_stop_action_514 => {
      attributes => {
        'position' => Integer,
        'scope' => String,
        'topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ses_receipt_rule_workmail_action_515 => {
      attributes => {
        'organization_arn' => String,
        'position' => Integer,
        'topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ses_template => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['html', 'subject', 'text']
        }
      },
      attributes => {
        'aws_ses_template_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'html' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'subject' => {
          'type' => Optional[String],
          'value' => undef
        },
        'text' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ses_templateHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_sfn_activity => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['creation_date', 'tags']
        }
      },
      attributes => {
        'aws_sfn_activity_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'creation_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_sfn_activityHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_sfn_state_machine => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['creation_date', 'status', 'tags']
        }
      },
      attributes => {
        'aws_sfn_state_machine_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'creation_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'definition' => String,
        'name' => String,
        'role_arn' => String,
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_sfn_state_machineHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_simpledb_domain => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name']
        }
      },
      attributes => {
        'aws_simpledb_domain_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_simpledb_domainHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_snapshot_create_volume_permission => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['account_id', 'snapshot_id']
        }
      },
      attributes => {
        'aws_snapshot_create_volume_permission_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'account_id' => String,
        'snapshot_id' => String
      }
    },
    Aws_snapshot_create_volume_permissionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_sns_platform_application => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'platform'],
          'providedAttributes' => ['arn', 'event_delivery_failure_topic_arn', 'event_endpoint_created_topic_arn', 'event_endpoint_deleted_topic_arn', 'event_endpoint_updated_topic_arn', 'failure_feedback_role_arn', 'platform_principal', 'success_feedback_role_arn', 'success_feedback_sample_rate']
        }
      },
      attributes => {
        'aws_sns_platform_application_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'event_delivery_failure_topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'event_endpoint_created_topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'event_endpoint_deleted_topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'event_endpoint_updated_topic_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'failure_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'platform' => String,
        'platform_credential' => String,
        'platform_principal' => {
          'type' => Optional[String],
          'value' => undef
        },
        'success_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'success_feedback_sample_rate' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_sns_platform_applicationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_sns_sms_preferences => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['default_sender_id', 'default_sms_type', 'delivery_status_iam_role_arn', 'delivery_status_success_sampling_rate', 'monthly_spend_limit', 'usage_report_s3_bucket']
        }
      },
      attributes => {
        'aws_sns_sms_preferences_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'default_sender_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_sms_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'delivery_status_iam_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'delivery_status_success_sampling_rate' => {
          'type' => Optional[String],
          'value' => undef
        },
        'monthly_spend_limit' => {
          'type' => Optional[String],
          'value' => undef
        },
        'usage_report_s3_bucket' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_sns_sms_preferencesHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_sns_topic => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 'name_prefix'],
          'providedAttributes' => ['application_failure_feedback_role_arn', 'application_success_feedback_role_arn', 'application_success_feedback_sample_rate', 'arn', 'delivery_policy', 'display_name', 'http_failure_feedback_role_arn', 'http_success_feedback_role_arn', 'http_success_feedback_sample_rate', 'kms_master_key_id', 'lambda_failure_feedback_role_arn', 'lambda_success_feedback_role_arn', 'lambda_success_feedback_sample_rate', 'name', 'name_prefix', 'policy', 'sqs_failure_feedback_role_arn', 'sqs_success_feedback_role_arn', 'sqs_success_feedback_sample_rate']
        }
      },
      attributes => {
        'aws_sns_topic_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'application_failure_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'application_success_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'application_success_feedback_sample_rate' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'delivery_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'display_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'http_failure_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'http_success_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'http_success_feedback_sample_rate' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'kms_master_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'lambda_failure_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'lambda_success_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'lambda_success_feedback_sample_rate' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sqs_failure_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sqs_success_feedback_role_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'sqs_success_feedback_sample_rate' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_sns_topicHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_sns_topic_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['arn']
        }
      },
      attributes => {
        'aws_sns_topic_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => String,
        'policy' => String
      }
    },
    Aws_sns_topic_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_sns_topic_subscription => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['endpoint', 'protocol', 'topic_arn'],
          'providedAttributes' => ['arn', 'confirmation_timeout_in_minutes', 'delivery_policy', 'endpoint_auto_confirms', 'filter_policy', 'raw_message_delivery']
        }
      },
      attributes => {
        'aws_sns_topic_subscription_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'confirmation_timeout_in_minutes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'delivery_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint' => String,
        'endpoint_auto_confirms' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'filter_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'protocol' => String,
        'raw_message_delivery' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'topic_arn' => String
      }
    },
    Aws_sns_topic_subscriptionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_spot_datafeed_subscription => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['bucket', 'prefix'],
          'providedAttributes' => ['prefix']
        }
      },
      attributes => {
        'aws_spot_datafeed_subscription_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'bucket' => String,
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_spot_datafeed_subscriptionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_spot_fleet_request => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['allocation_strategy', 'fleet_type', 'iam_fleet_role', 'instance_interruption_behaviour', 'instance_pools_to_use_count', 'launch_specification', 'load_balancers', 'replace_unhealthy_instances', 'spot_price', 'target_group_arns', 'terminate_instances_with_expiration', 'valid_from', 'valid_until'],
          'providedAttributes' => ['allocation_strategy', 'client_token', 'excess_capacity_termination_policy', 'fleet_type', 'instance_interruption_behaviour', 'instance_pools_to_use_count', 'load_balancers', 'replace_unhealthy_instances', 'spot_price', 'spot_request_state', 'target_group_arns', 'terminate_instances_with_expiration', 'valid_from', 'valid_until', 'wait_for_fulfillment']
        }
      },
      attributes => {
        'aws_spot_fleet_request_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allocation_strategy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'client_token' => {
          'type' => Optional[String],
          'value' => undef
        },
        'excess_capacity_termination_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'fleet_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_fleet_role' => String,
        'instance_interruption_behaviour' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_pools_to_use_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'launch_specification' => Array[Aws_spot_fleet_request_launch_specification_516],
        'load_balancers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'replace_unhealthy_instances' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'spot_price' => {
          'type' => Optional[String],
          'value' => undef
        },
        'spot_request_state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'target_capacity' => Integer,
        'target_group_arns' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'terminate_instances_with_expiration' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'valid_from' => {
          'type' => Optional[String],
          'value' => undef
        },
        'valid_until' => {
          'type' => Optional[String],
          'value' => undef
        },
        'wait_for_fulfillment' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_spot_fleet_requestHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_spot_fleet_request_launch_specification_516 => {
      attributes => {
        'ami' => String,
        'associate_public_ip_address' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ebs_block_device' => {
          'type' => Optional[Array[Aws_spot_fleet_request_launch_specification_516_ebs_block_device_517]],
          'value' => undef
        },
        'ebs_optimized' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ephemeral_block_device' => {
          'type' => Optional[Array[Aws_spot_fleet_request_launch_specification_516_ephemeral_block_device_518]],
          'value' => undef
        },
        'iam_instance_profile' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_instance_profile_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_type' => String,
        'key_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'monitoring' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'placement_group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'placement_tenancy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_block_device' => {
          'type' => Optional[Array[Aws_spot_fleet_request_launch_specification_516_root_block_device_519]],
          'value' => undef
        },
        'spot_price' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'user_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'weighted_capacity' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_spot_fleet_request_launch_specification_516_ebs_block_device_517 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_name' => String,
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_spot_fleet_request_launch_specification_516_ephemeral_block_device_518 => {
      attributes => {
        'device_name' => String,
        'virtual_name' => String
      }
    },
    Aws_spot_fleet_request_launch_specification_516_root_block_device_519 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_spot_instance_request => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['ami', 'arn', 'associate_public_ip_address', 'availability_zone', 'block_device', 'block_duration_minutes', 'cpu_core_count', 'cpu_threads_per_core', 'credit_specification', 'disable_api_termination', 'ebs_block_device', 'ebs_optimized', 'ephemeral_block_device', 'get_password_data', 'host_id', 'iam_instance_profile', 'instance_initiated_shutdown_behavior', 'instance_interruption_behaviour', 'instance_state', 'instance_type', 'ipv6_address_count', 'ipv6_addresses', 'key_name', 'launch_group', 'monitoring', 'network_interface', 'network_interface_id', 'password_data', 'placement_group', 'primary_network_interface_id', 'private_dns', 'private_ip', 'public_dns', 'public_ip', 'root_block_device', 'security_groups', 'source_dest_check', 'spot_price', 'subnet_id', 'tenancy', 'user_data', 'user_data_base64', 'valid_from', 'valid_until', 'vpc_security_group_ids'],
          'providedAttributes' => ['arn', 'associate_public_ip_address', 'availability_zone', 'block_device', 'block_duration_minutes', 'cpu_core_count', 'cpu_threads_per_core', 'credit_specification', 'disable_api_termination', 'ebs_block_device', 'ebs_optimized', 'ephemeral_block_device', 'get_password_data', 'host_id', 'iam_instance_profile', 'instance_initiated_shutdown_behavior', 'instance_interruption_behaviour', 'instance_state', 'ipv6_address_count', 'ipv6_addresses', 'key_name', 'launch_group', 'monitoring', 'network_interface', 'network_interface_id', 'password_data', 'placement_group', 'primary_network_interface_id', 'private_dns', 'private_ip', 'public_dns', 'public_ip', 'root_block_device', 'security_groups', 'source_dest_check', 'spot_bid_status', 'spot_instance_id', 'spot_price', 'spot_request_state', 'spot_type', 'subnet_id', 'tags', 'tenancy', 'user_data', 'user_data_base64', 'valid_from', 'valid_until', 'volume_tags', 'vpc_security_group_ids', 'wait_for_fulfillment']
        }
      },
      attributes => {
        'aws_spot_instance_request_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'ami' => String,
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'associate_public_ip_address' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'block_device' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'block_duration_minutes' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cpu_core_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'cpu_threads_per_core' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'credit_specification' => {
          'type' => Optional[Array[Aws_spot_instance_request_credit_specification_520]],
          'value' => undef
        },
        'disable_api_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ebs_block_device' => {
          'type' => Optional[Array[Aws_spot_instance_request_ebs_block_device_521]],
          'value' => undef
        },
        'ebs_optimized' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'ephemeral_block_device' => {
          'type' => Optional[Array[Aws_spot_instance_request_ephemeral_block_device_522]],
          'value' => undef
        },
        'get_password_data' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'host_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_instance_profile' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_initiated_shutdown_behavior' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_interruption_behaviour' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_type' => String,
        'ipv6_address_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'ipv6_addresses' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'key_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'launch_group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'monitoring' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'network_interface' => {
          'type' => Optional[Array[Aws_spot_instance_request_network_interface_523]],
          'value' => undef
        },
        'network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'password_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'placement_group' => {
          'type' => Optional[String],
          'value' => undef
        },
        'primary_network_interface_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_dns' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_dns' => {
          'type' => Optional[String],
          'value' => undef
        },
        'public_ip' => {
          'type' => Optional[String],
          'value' => undef
        },
        'root_block_device' => {
          'type' => Optional[Array[Aws_spot_instance_request_root_block_device_524]],
          'value' => undef
        },
        'security_groups' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'source_dest_check' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'spot_bid_status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'spot_instance_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'spot_price' => {
          'type' => Optional[String],
          'value' => undef
        },
        'spot_request_state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'spot_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'tenancy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'user_data_base64' => {
          'type' => Optional[String],
          'value' => undef
        },
        'valid_from' => {
          'type' => Optional[String],
          'value' => undef
        },
        'valid_until' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'wait_for_fulfillment' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_spot_instance_requestHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_spot_instance_request_credit_specification_520 => {
      attributes => {
        'cpu_credits' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_spot_instance_request_ebs_block_device_521 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_name' => String,
        'encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_spot_instance_request_ephemeral_block_device_522 => {
      attributes => {
        'device_name' => String,
        'no_device' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'virtual_name' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_spot_instance_request_network_interface_523 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'device_index' => Integer,
        'network_interface_id' => String
      }
    },
    Aws_spot_instance_request_root_block_device_524 => {
      attributes => {
        'delete_on_termination' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'iops' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'volume_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_sqs_queue => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['fifo_queue', 'name', 'name_prefix'],
          'providedAttributes' => ['arn', 'content_based_deduplication', 'delay_seconds', 'fifo_queue', 'kms_data_key_reuse_period_seconds', 'kms_master_key_id', 'max_message_size', 'message_retention_seconds', 'name', 'name_prefix', 'policy', 'receive_wait_time_seconds', 'redrive_policy', 'tags', 'visibility_timeout_seconds']
        }
      },
      attributes => {
        'aws_sqs_queue_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content_based_deduplication' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'delay_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'fifo_queue' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kms_data_key_reuse_period_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'kms_master_key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'max_message_size' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'message_retention_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'receive_wait_time_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'redrive_policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'visibility_timeout_seconds' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_sqs_queueHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_sqs_queue_policy => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['queue_url']
        }
      },
      attributes => {
        'aws_sqs_queue_policy_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => String,
        'queue_url' => String
      }
    },
    Aws_sqs_queue_policyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_activation => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'expiration_date', 'iam_role', 'name', 'registration_limit'],
          'providedAttributes' => ['activation_code', 'description', 'expiration_date', 'expired', 'name', 'registration_count', 'registration_limit']
        }
      },
      attributes => {
        'aws_ssm_activation_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'activation_code' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'expiration_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'expired' => {
          'type' => Optional[String],
          'value' => undef
        },
        'iam_role' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'registration_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'registration_limit' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_ssm_activationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['instance_id', 'name'],
          'providedAttributes' => ['association_id', 'association_name', 'document_version', 'instance_id', 'output_location', 'parameters', 'schedule_expression', 'targets']
        }
      },
      attributes => {
        'aws_ssm_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'association_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'association_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'document_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'instance_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'output_location' => {
          'type' => Optional[Array[Aws_ssm_association_output_location_525]],
          'value' => undef
        },
        'parameters' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'schedule_expression' => {
          'type' => Optional[String],
          'value' => undef
        },
        'targets' => {
          'type' => Optional[Array[Aws_ssm_association_targets_526]],
          'value' => undef
        }
      }
    },
    Aws_ssm_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_association_output_location_525 => {
      attributes => {
        's3_bucket_name' => String,
        's3_key_prefix' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ssm_association_targets_526 => {
      attributes => {
        'key' => String,
        'values' => Array[String]
      }
    },
    Aws_ssm_document => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['arn', 'created_date', 'default_version', 'description', 'document_format', 'hash', 'hash_type', 'latest_version', 'owner', 'parameter', 'permissions', 'platform_types', 'schema_version', 'status', 'tags']
        }
      },
      attributes => {
        'aws_ssm_document_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'content' => String,
        'created_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'document_format' => {
          'type' => Optional[String],
          'value' => undef
        },
        'document_type' => String,
        'hash' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hash_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'latest_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'owner' => {
          'type' => Optional[String],
          'value' => undef
        },
        'parameter' => {
          'type' => Optional[Array[Aws_ssm_document_parameter_527]],
          'value' => undef
        },
        'permissions' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'platform_types' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'schema_version' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_ssm_documentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_document_parameter_527 => {
      attributes => {
        'default_value' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ssm_maintenance_window => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['allow_unassociated_targets', 'enabled', 'end_date', 'schedule_timezone', 'start_date']
        }
      },
      attributes => {
        'aws_ssm_maintenance_window_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allow_unassociated_targets' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'cutoff' => Integer,
        'duration' => Integer,
        'enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'end_date' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'schedule' => String,
        'schedule_timezone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'start_date' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_ssm_maintenance_windowHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_maintenance_window_target => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['resource_type', 'window_id'],
          'providedAttributes' => ['owner_information']
        }
      },
      attributes => {
        'aws_ssm_maintenance_window_target_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'owner_information' => {
          'type' => Optional[String],
          'value' => undef
        },
        'resource_type' => String,
        'targets' => Array[Aws_ssm_maintenance_window_target_targets_528],
        'window_id' => String
      }
    },
    Aws_ssm_maintenance_window_targetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_maintenance_window_target_targets_528 => {
      attributes => {
        'key' => String,
        'values' => Array[String]
      }
    },
    Aws_ssm_maintenance_window_task => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'logging_info', 'max_concurrency', 'max_errors', 'name', 'priority', 'service_role_arn', 'targets', 'task_arn', 'task_parameters', 'task_type', 'window_id'],
          'providedAttributes' => ['description', 'logging_info', 'name', 'priority', 'task_parameters']
        }
      },
      attributes => {
        'aws_ssm_maintenance_window_task_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'logging_info' => {
          'type' => Optional[Array[Aws_ssm_maintenance_window_task_logging_info_529]],
          'value' => undef
        },
        'max_concurrency' => String,
        'max_errors' => String,
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'priority' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'service_role_arn' => String,
        'targets' => Array[Aws_ssm_maintenance_window_task_targets_530],
        'task_arn' => String,
        'task_parameters' => {
          'type' => Optional[Array[Aws_ssm_maintenance_window_task_task_parameters_531]],
          'value' => undef
        },
        'task_type' => String,
        'window_id' => String
      }
    },
    Aws_ssm_maintenance_window_taskHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_maintenance_window_task_logging_info_529 => {
      attributes => {
        's3_bucket_name' => String,
        's3_bucket_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        's3_region' => String
      }
    },
    Aws_ssm_maintenance_window_task_targets_530 => {
      attributes => {
        'key' => String,
        'values' => Array[String]
      }
    },
    Aws_ssm_maintenance_window_task_task_parameters_531 => {
      attributes => {
        'name' => String,
        'values' => Array[String]
      }
    },
    Aws_ssm_parameter => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['allowed_pattern', 'arn', 'description', 'key_id', 'overwrite', 'tags']
        }
      },
      attributes => {
        'aws_ssm_parameter_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'allowed_pattern' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'key_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'overwrite' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'type' => String,
        'value' => String
      }
    },
    Aws_ssm_parameterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_patch_baseline => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['operating_system'],
          'providedAttributes' => ['approval_rule', 'approved_patches', 'approved_patches_compliance_level', 'description', 'global_filter', 'operating_system', 'rejected_patches']
        }
      },
      attributes => {
        'aws_ssm_patch_baseline_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'approval_rule' => {
          'type' => Optional[Array[Aws_ssm_patch_baseline_approval_rule_532]],
          'value' => undef
        },
        'approved_patches' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'approved_patches_compliance_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'global_filter' => {
          'type' => Optional[Array[Aws_ssm_patch_baseline_global_filter_534]],
          'value' => undef
        },
        'name' => String,
        'operating_system' => {
          'type' => Optional[String],
          'value' => undef
        },
        'rejected_patches' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_ssm_patch_baselineHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_patch_baseline_approval_rule_532 => {
      attributes => {
        'approve_after_days' => Integer,
        'compliance_level' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_non_security' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'patch_filter' => Array[Aws_ssm_patch_baseline_approval_rule_532_patch_filter_533]
      }
    },
    Aws_ssm_patch_baseline_approval_rule_532_patch_filter_533 => {
      attributes => {
        'key' => String,
        'values' => Array[String]
      }
    },
    Aws_ssm_patch_baseline_global_filter_534 => {
      attributes => {
        'key' => String,
        'values' => Array[String]
      }
    },
    Aws_ssm_patch_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['baseline_id', 'patch_group']
        }
      },
      attributes => {
        'aws_ssm_patch_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'baseline_id' => String,
        'patch_group' => String
      }
    },
    Aws_ssm_patch_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_resource_data_sync => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name', 's3_destination']
        }
      },
      attributes => {
        'aws_ssm_resource_data_sync_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        's3_destination' => Array[Aws_ssm_resource_data_sync_s3_destination_535]
      }
    },
    Aws_ssm_resource_data_syncHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_ssm_resource_data_sync_s3_destination_535 => {
      attributes => {
        'bucket_name' => String,
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'region' => String,
        'sync_format' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_storagegateway_cache => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['disk_id', 'gateway_arn']
        }
      },
      attributes => {
        'aws_storagegateway_cache_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'disk_id' => String,
        'gateway_arn' => String
      }
    },
    Aws_storagegateway_cacheHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_storagegateway_cached_iscsi_volume => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['gateway_arn', 'network_interface_id', 'snapshot_id', 'source_volume_arn', 'target_name', 'volume_size_in_bytes'],
          'providedAttributes' => ['arn', 'chap_enabled', 'lun_number', 'network_interface_port', 'snapshot_id', 'source_volume_arn', 'target_arn', 'volume_arn', 'volume_id']
        }
      },
      attributes => {
        'aws_storagegateway_cached_iscsi_volume_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'chap_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'gateway_arn' => String,
        'lun_number' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'network_interface_id' => String,
        'network_interface_port' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'snapshot_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source_volume_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'target_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'target_name' => String,
        'volume_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'volume_size_in_bytes' => Integer
      }
    },
    Aws_storagegateway_cached_iscsi_volumeHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_storagegateway_gateway => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['activation_key', 'gateway_ip_address', 'gateway_type', 'medium_changer_type', 'tape_drive_type'],
          'providedAttributes' => ['activation_key', 'arn', 'gateway_id', 'gateway_ip_address', 'gateway_type', 'medium_changer_type', 'smb_active_directory_settings', 'smb_guest_password', 'tape_drive_type']
        }
      },
      attributes => {
        'aws_storagegateway_gateway_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'activation_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'gateway_ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'gateway_name' => String,
        'gateway_timezone' => String,
        'gateway_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'medium_changer_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'smb_active_directory_settings' => {
          'type' => Optional[Array[Aws_storagegateway_gateway_smb_active_directory_settings_536]],
          'value' => undef
        },
        'smb_guest_password' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tape_drive_type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_storagegateway_gatewayHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_storagegateway_gateway_smb_active_directory_settings_536 => {
      attributes => {
        'domain_name' => String,
        'password' => String,
        'username' => String
      }
    },
    Aws_storagegateway_nfs_file_share => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['gateway_arn', 'location_arn', 'role_arn'],
          'providedAttributes' => ['arn', 'default_storage_class', 'fileshare_id', 'guess_mime_type_enabled', 'kms_encrypted', 'kms_key_arn', 'nfs_file_share_defaults', 'object_acl', 'read_only', 'requester_pays', 'squash']
        }
      },
      attributes => {
        'aws_storagegateway_nfs_file_share_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'client_list' => Array[String],
        'default_storage_class' => {
          'type' => Optional[String],
          'value' => undef
        },
        'fileshare_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'gateway_arn' => String,
        'guess_mime_type_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kms_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'location_arn' => String,
        'nfs_file_share_defaults' => {
          'type' => Optional[Array[Aws_storagegateway_nfs_file_share_nfs_file_share_defaults_537]],
          'value' => undef
        },
        'object_acl' => {
          'type' => Optional[String],
          'value' => undef
        },
        'read_only' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'requester_pays' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'role_arn' => String,
        'squash' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_storagegateway_nfs_file_shareHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_storagegateway_nfs_file_share_nfs_file_share_defaults_537 => {
      attributes => {
        'directory_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'file_mode' => {
          'type' => Optional[String],
          'value' => undef
        },
        'group_id' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[Integer],
          'value' => undef
        }
      }
    },
    Aws_storagegateway_smb_file_share => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['authentication', 'gateway_arn', 'location_arn', 'role_arn'],
          'providedAttributes' => ['arn', 'authentication', 'default_storage_class', 'fileshare_id', 'guess_mime_type_enabled', 'invalid_user_list', 'kms_encrypted', 'kms_key_arn', 'object_acl', 'read_only', 'requester_pays', 'valid_user_list']
        }
      },
      attributes => {
        'aws_storagegateway_smb_file_share_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'authentication' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_storage_class' => {
          'type' => Optional[String],
          'value' => undef
        },
        'fileshare_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'gateway_arn' => String,
        'guess_mime_type_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'invalid_user_list' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'kms_encrypted' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'kms_key_arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'location_arn' => String,
        'object_acl' => {
          'type' => Optional[String],
          'value' => undef
        },
        'read_only' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'requester_pays' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'role_arn' => String,
        'valid_user_list' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_storagegateway_smb_file_shareHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_storagegateway_upload_buffer => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['disk_id', 'gateway_arn']
        }
      },
      attributes => {
        'aws_storagegateway_upload_buffer_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'disk_id' => String,
        'gateway_arn' => String
      }
    },
    Aws_storagegateway_upload_bufferHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_storagegateway_working_storage => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['disk_id', 'gateway_arn']
        }
      },
      attributes => {
        'aws_storagegateway_working_storage_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'disk_id' => String,
        'gateway_arn' => String
      }
    },
    Aws_storagegateway_working_storageHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_subnet => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['availability_zone', 'availability_zone_id', 'cidr_block', 'vpc_id'],
          'providedAttributes' => ['arn', 'assign_ipv6_address_on_creation', 'availability_zone', 'availability_zone_id', 'ipv6_cidr_block', 'ipv6_cidr_block_association_id', 'map_public_ip_on_launch', 'owner_id', 'tags']
        }
      },
      attributes => {
        'aws_subnet_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'assign_ipv6_address_on_creation' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'cidr_block' => String,
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_cidr_block_association_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'map_public_ip_on_launch' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => String
      }
    },
    Aws_subnetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_swf_domain => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['description', 'name', 'name_prefix', 'workflow_execution_retention_period_in_days'],
          'providedAttributes' => ['description', 'name', 'name_prefix']
        }
      },
      attributes => {
        'aws_swf_domain_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'description' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'name_prefix' => {
          'type' => Optional[String],
          'value' => undef
        },
        'workflow_execution_retention_period_in_days' => String
      }
    },
    Aws_swf_domainHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_transfer_server => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['identity_provider_type'],
          'providedAttributes' => ['arn', 'endpoint', 'force_destroy', 'identity_provider_type', 'invocation_role', 'logging_role', 'tags', 'url']
        }
      },
      attributes => {
        'aws_transfer_server_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'endpoint' => {
          'type' => Optional[String],
          'value' => undef
        },
        'force_destroy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'identity_provider_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'invocation_role' => {
          'type' => Optional[String],
          'value' => undef
        },
        'logging_role' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'url' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_transfer_serverHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_transfer_ssh_key => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['body', 'server_id', 'user_name']
        }
      },
      attributes => {
        'aws_transfer_ssh_key_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'body' => String,
        'server_id' => String,
        'user_name' => String
      }
    },
    Aws_transfer_ssh_keyHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_transfer_user => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['server_id', 'user_name'],
          'providedAttributes' => ['arn', 'home_directory', 'policy', 'tags']
        }
      },
      attributes => {
        'aws_transfer_user_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'home_directory' => {
          'type' => Optional[String],
          'value' => undef
        },
        'policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'role' => String,
        'server_id' => String,
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'user_name' => String
      }
    },
    Aws_transfer_userHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_volume_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['device_name', 'instance_id', 'volume_id'],
          'providedAttributes' => ['force_detach', 'skip_destroy']
        }
      },
      attributes => {
        'aws_volume_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'device_name' => String,
        'force_detach' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_id' => String,
        'skip_destroy' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'volume_id' => String
      }
    },
    Aws_volume_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cidr_block'],
          'providedAttributes' => ['arn', 'assign_generated_ipv6_cidr_block', 'default_network_acl_id', 'default_route_table_id', 'default_security_group_id', 'dhcp_options_id', 'enable_classiclink', 'enable_classiclink_dns_support', 'enable_dns_hostnames', 'enable_dns_support', 'instance_tenancy', 'ipv6_association_id', 'ipv6_cidr_block', 'main_route_table_id', 'owner_id', 'tags']
        }
      },
      attributes => {
        'aws_vpc_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'assign_generated_ipv6_cidr_block' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'cidr_block' => String,
        'default_network_acl_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_route_table_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'default_security_group_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'dhcp_options_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'enable_classiclink' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_classiclink_dns_support' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_dns_hostnames' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'enable_dns_support' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'instance_tenancy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_association_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ipv6_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'main_route_table_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_vpcHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_dhcp_options => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['domain_name', 'domain_name_servers', 'netbios_name_servers', 'netbios_node_type', 'ntp_servers'],
          'providedAttributes' => ['domain_name', 'domain_name_servers', 'netbios_name_servers', 'netbios_node_type', 'ntp_servers', 'owner_id', 'tags']
        }
      },
      attributes => {
        'aws_vpc_dhcp_options_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'domain_name_servers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'netbios_name_servers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'netbios_node_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ntp_servers' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        }
      }
    },
    Aws_vpc_dhcp_optionsHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_dhcp_options_association => {
      attributes => {
        'aws_vpc_dhcp_options_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'dhcp_options_id' => String,
        'vpc_id' => String
      }
    },
    Aws_vpc_dhcp_options_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_endpoint => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['service_name', 'vpc_endpoint_type', 'vpc_id'],
          'providedAttributes' => ['auto_accept', 'cidr_blocks', 'dns_entry', 'network_interface_ids', 'policy', 'prefix_list_id', 'private_dns_enabled', 'route_table_ids', 'security_group_ids', 'state', 'subnet_ids', 'vpc_endpoint_type']
        }
      },
      attributes => {
        'aws_vpc_endpoint_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'auto_accept' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'cidr_blocks' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'dns_entry' => {
          'type' => Optional[Array[Aws_vpc_endpoint_dns_entry_538]],
          'value' => undef
        },
        'network_interface_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'policy' => {
          'type' => Optional[String],
          'value' => undef
        },
        'prefix_list_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'private_dns_enabled' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'route_table_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'security_group_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'service_name' => String,
        'state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_ids' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'vpc_endpoint_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_id' => String
      }
    },
    Aws_vpc_endpointHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_endpoint_connection_notification => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['vpc_endpoint_id', 'vpc_endpoint_service_id'],
          'providedAttributes' => ['notification_type', 'state', 'vpc_endpoint_id', 'vpc_endpoint_service_id']
        }
      },
      attributes => {
        'aws_vpc_endpoint_connection_notification_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'connection_events' => Array[String],
        'connection_notification_arn' => String,
        'notification_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'state' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_endpoint_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_endpoint_service_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_vpc_endpoint_connection_notificationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_endpoint_dns_entry_538 => {
      attributes => {
        'dns_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'hosted_zone_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_vpc_endpoint_route_table_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['route_table_id', 'vpc_endpoint_id']
        }
      },
      attributes => {
        'aws_vpc_endpoint_route_table_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'route_table_id' => String,
        'vpc_endpoint_id' => String
      }
    },
    Aws_vpc_endpoint_route_table_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_endpoint_service => {
      annotations => {
        Lyra::Resource => {
          'providedAttributes' => ['allowed_principals', 'availability_zones', 'base_endpoint_dns_names', 'private_dns_name', 'service_name', 'service_type', 'state']
        }
      },
      attributes => {
        'aws_vpc_endpoint_service_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'acceptance_required' => Boolean,
        'allowed_principals' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'availability_zones' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'base_endpoint_dns_names' => {
          'type' => Optional[Array[String]],
          'value' => undef
        },
        'network_load_balancer_arns' => Array[String],
        'private_dns_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'service_name' => {
          'type' => Optional[String],
          'value' => undef
        },
        'service_type' => {
          'type' => Optional[String],
          'value' => undef
        },
        'state' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_vpc_endpoint_serviceHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_endpoint_service_allowed_principal => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['principal_arn', 'vpc_endpoint_service_id']
        }
      },
      attributes => {
        'aws_vpc_endpoint_service_allowed_principal_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'principal_arn' => String,
        'vpc_endpoint_service_id' => String
      }
    },
    Aws_vpc_endpoint_service_allowed_principalHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_endpoint_subnet_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['subnet_id', 'vpc_endpoint_id']
        }
      },
      attributes => {
        'aws_vpc_endpoint_subnet_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'subnet_id' => String,
        'vpc_endpoint_id' => String
      }
    },
    Aws_vpc_endpoint_subnet_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_ipv4_cidr_block_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['cidr_block', 'vpc_id']
        }
      },
      attributes => {
        'aws_vpc_ipv4_cidr_block_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'cidr_block' => String,
        'vpc_id' => String
      }
    },
    Aws_vpc_ipv4_cidr_block_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_peering_connection => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['peer_owner_id', 'peer_region', 'peer_vpc_id', 'vpc_id'],
          'providedAttributes' => ['accept_status', 'accepter', 'auto_accept', 'peer_owner_id', 'peer_region', 'requester', 'tags']
        }
      },
      attributes => {
        'aws_vpc_peering_connection_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'accept_status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'accepter' => {
          'type' => Optional[Array[Aws_vpc_peering_connection_accepter_539]],
          'value' => undef
        },
        'auto_accept' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'peer_owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'peer_region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'peer_vpc_id' => String,
        'requester' => {
          'type' => Optional[Array[Aws_vpc_peering_connection_requester_540]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => String
      }
    },
    Aws_vpc_peering_connectionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_peering_connection_accepter => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['vpc_peering_connection_id'],
          'providedAttributes' => ['accept_status', 'accepter', 'auto_accept', 'peer_owner_id', 'peer_region', 'peer_vpc_id', 'requester', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_vpc_peering_connection_accepter_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'accept_status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'accepter' => {
          'type' => Optional[Array[Aws_vpc_peering_connection_accepter_accepter_541]],
          'value' => undef
        },
        'auto_accept' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'peer_owner_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'peer_region' => {
          'type' => Optional[String],
          'value' => undef
        },
        'peer_vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'requester' => {
          'type' => Optional[Array[Aws_vpc_peering_connection_accepter_requester_542]],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_peering_connection_id' => String
      }
    },
    Aws_vpc_peering_connection_accepterHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_peering_connection_accepter_539 => {
      attributes => {
        'allow_classic_link_to_remote_vpc' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_remote_vpc_dns_resolution' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_vpc_to_remote_classic_link' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_vpc_peering_connection_accepter_accepter_541 => {
      attributes => {
        'allow_classic_link_to_remote_vpc' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_remote_vpc_dns_resolution' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_vpc_to_remote_classic_link' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_vpc_peering_connection_accepter_requester_542 => {
      attributes => {
        'allow_classic_link_to_remote_vpc' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_remote_vpc_dns_resolution' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_vpc_to_remote_classic_link' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_vpc_peering_connection_options => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['vpc_peering_connection_id'],
          'providedAttributes' => ['accepter', 'requester']
        }
      },
      attributes => {
        'aws_vpc_peering_connection_options_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'accepter' => {
          'type' => Optional[Array[Aws_vpc_peering_connection_options_accepter_543]],
          'value' => undef
        },
        'requester' => {
          'type' => Optional[Array[Aws_vpc_peering_connection_options_requester_544]],
          'value' => undef
        },
        'vpc_peering_connection_id' => String
      }
    },
    Aws_vpc_peering_connection_optionsHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpc_peering_connection_options_accepter_543 => {
      attributes => {
        'allow_classic_link_to_remote_vpc' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_remote_vpc_dns_resolution' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_vpc_to_remote_classic_link' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_vpc_peering_connection_options_requester_544 => {
      attributes => {
        'allow_classic_link_to_remote_vpc' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_remote_vpc_dns_resolution' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_vpc_to_remote_classic_link' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_vpc_peering_connection_requester_540 => {
      attributes => {
        'allow_classic_link_to_remote_vpc' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_remote_vpc_dns_resolution' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'allow_vpc_to_remote_classic_link' => {
          'type' => Optional[Boolean],
          'value' => undef
        }
      }
    },
    Aws_vpn_connection => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['customer_gateway_id', 'static_routes_only', 'transit_gateway_id', 'tunnel1_inside_cidr', 'tunnel1_preshared_key', 'tunnel2_inside_cidr', 'tunnel2_preshared_key', 'type', 'vpn_gateway_id'],
          'providedAttributes' => ['customer_gateway_configuration', 'routes', 'static_routes_only', 'tags', 'transit_gateway_id', 'tunnel1_address', 'tunnel1_bgp_asn', 'tunnel1_bgp_holdtime', 'tunnel1_cgw_inside_address', 'tunnel1_inside_cidr', 'tunnel1_preshared_key', 'tunnel1_vgw_inside_address', 'tunnel2_address', 'tunnel2_bgp_asn', 'tunnel2_bgp_holdtime', 'tunnel2_cgw_inside_address', 'tunnel2_inside_cidr', 'tunnel2_preshared_key', 'tunnel2_vgw_inside_address', 'vgw_telemetry', 'vpn_gateway_id']
        }
      },
      attributes => {
        'aws_vpn_connection_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'customer_gateway_configuration' => {
          'type' => Optional[String],
          'value' => undef
        },
        'customer_gateway_id' => String,
        'routes' => {
          'type' => Optional[Array[Aws_vpn_connection_routes_545]],
          'value' => undef
        },
        'static_routes_only' => {
          'type' => Optional[Boolean],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'transit_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel1_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel1_bgp_asn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel1_bgp_holdtime' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'tunnel1_cgw_inside_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel1_inside_cidr' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel1_preshared_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel1_vgw_inside_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel2_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel2_bgp_asn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel2_bgp_holdtime' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'tunnel2_cgw_inside_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel2_inside_cidr' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel2_preshared_key' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tunnel2_vgw_inside_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String,
        'vgw_telemetry' => {
          'type' => Optional[Array[Aws_vpn_connection_vgw_telemetry_546]],
          'value' => undef
        },
        'vpn_gateway_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_vpn_connectionHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpn_connection_route => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['destination_cidr_block', 'vpn_connection_id']
        }
      },
      attributes => {
        'aws_vpn_connection_route_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'destination_cidr_block' => String,
        'vpn_connection_id' => String
      }
    },
    Aws_vpn_connection_routeHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpn_connection_routes_545 => {
      attributes => {
        'destination_cidr_block' => {
          'type' => Optional[String],
          'value' => undef
        },
        'source' => {
          'type' => Optional[String],
          'value' => undef
        },
        'state' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_vpn_connection_vgw_telemetry_546 => {
      attributes => {
        'accepted_route_count' => {
          'type' => Optional[Integer],
          'value' => undef
        },
        'last_status_change' => {
          'type' => Optional[String],
          'value' => undef
        },
        'outside_ip_address' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status' => {
          'type' => Optional[String],
          'value' => undef
        },
        'status_message' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_vpn_gateway => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['amazon_side_asn', 'availability_zone'],
          'providedAttributes' => ['amazon_side_asn', 'availability_zone', 'tags', 'vpc_id']
        }
      },
      attributes => {
        'aws_vpn_gateway_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'amazon_side_asn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'availability_zone' => {
          'type' => Optional[String],
          'value' => undef
        },
        'tags' => {
          'type' => Optional[Hash[String, String]],
          'value' => undef
        },
        'vpc_id' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_vpn_gatewayHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpn_gateway_attachment => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['vpc_id', 'vpn_gateway_id']
        }
      },
      attributes => {
        'aws_vpn_gateway_attachment_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'vpc_id' => String,
        'vpn_gateway_id' => String
      }
    },
    Aws_vpn_gateway_attachmentHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_vpn_gateway_route_propagation => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['route_table_id', 'vpn_gateway_id']
        }
      },
      attributes => {
        'aws_vpn_gateway_route_propagation_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'route_table_id' => String,
        'vpn_gateway_id' => String
      }
    },
    Aws_vpn_gateway_route_propagationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_byte_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['byte_match_tuples']
        }
      },
      attributes => {
        'aws_waf_byte_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'byte_match_tuples' => {
          'type' => Optional[Array[Aws_waf_byte_match_set_byte_match_tuples_547]],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_waf_byte_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_byte_match_set_byte_match_tuples_547 => {
      attributes => {
        'field_to_match' => Array[Aws_waf_byte_match_set_byte_match_tuples_547_field_to_match_548],
        'positional_constraint' => String,
        'target_string' => {
          'type' => Optional[String],
          'value' => undef
        },
        'text_transformation' => String
      }
    },
    Aws_waf_byte_match_set_byte_match_tuples_547_field_to_match_548 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_waf_geo_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['geo_match_constraint']
        }
      },
      attributes => {
        'aws_waf_geo_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'geo_match_constraint' => {
          'type' => Optional[Array[Aws_waf_geo_match_set_geo_match_constraint_549]],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_waf_geo_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_geo_match_set_geo_match_constraint_549 => {
      attributes => {
        'type' => String,
        'value' => String
      }
    },
    Aws_waf_ipset => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'ip_set_descriptors']
        }
      },
      attributes => {
        'aws_waf_ipset_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ip_set_descriptors' => {
          'type' => Optional[Array[Aws_waf_ipset_ip_set_descriptors_550]],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_waf_ipsetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_ipset_ip_set_descriptors_550 => {
      attributes => {
        'type' => String,
        'value' => String
      }
    },
    Aws_waf_rate_based_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['metric_name', 'name'],
          'providedAttributes' => ['predicates']
        }
      },
      attributes => {
        'aws_waf_rate_based_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'metric_name' => String,
        'name' => String,
        'predicates' => {
          'type' => Optional[Array[Aws_waf_rate_based_rule_predicates_551]],
          'value' => undef
        },
        'rate_key' => String,
        'rate_limit' => Integer
      }
    },
    Aws_waf_rate_based_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_rate_based_rule_predicates_551 => {
      attributes => {
        'data_id' => String,
        'negated' => Boolean,
        'type' => String
      }
    },
    Aws_waf_regex_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['regex_match_tuple']
        }
      },
      attributes => {
        'aws_waf_regex_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'regex_match_tuple' => {
          'type' => Optional[Array[Aws_waf_regex_match_set_regex_match_tuple_552]],
          'value' => undef
        }
      }
    },
    Aws_waf_regex_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_regex_match_set_regex_match_tuple_552 => {
      attributes => {
        'field_to_match' => Array[Aws_waf_regex_match_set_regex_match_tuple_552_field_to_match_553],
        'regex_pattern_set_id' => String,
        'text_transformation' => String
      }
    },
    Aws_waf_regex_match_set_regex_match_tuple_552_field_to_match_553 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_waf_regex_pattern_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['regex_pattern_strings']
        }
      },
      attributes => {
        'aws_waf_regex_pattern_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'regex_pattern_strings' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_waf_regex_pattern_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['metric_name', 'name'],
          'providedAttributes' => ['predicates']
        }
      },
      attributes => {
        'aws_waf_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'metric_name' => String,
        'name' => String,
        'predicates' => {
          'type' => Optional[Array[Aws_waf_rule_predicates_554]],
          'value' => undef
        }
      }
    },
    Aws_waf_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_rule_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['metric_name', 'name'],
          'providedAttributes' => ['activated_rule']
        }
      },
      attributes => {
        'aws_waf_rule_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'activated_rule' => {
          'type' => Optional[Array[Aws_waf_rule_group_activated_rule_555]],
          'value' => undef
        },
        'metric_name' => String,
        'name' => String
      }
    },
    Aws_waf_rule_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_rule_group_activated_rule_555 => {
      attributes => {
        'action' => Array[Aws_waf_rule_group_activated_rule_555_action_556],
        'priority' => Integer,
        'rule_id' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_waf_rule_group_activated_rule_555_action_556 => {
      attributes => {
        'type' => String
      }
    },
    Aws_waf_rule_predicates_554 => {
      attributes => {
        'data_id' => String,
        'negated' => Boolean,
        'type' => String
      }
    },
    Aws_waf_size_constraint_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['size_constraints']
        }
      },
      attributes => {
        'aws_waf_size_constraint_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'size_constraints' => {
          'type' => Optional[Array[Aws_waf_size_constraint_set_size_constraints_557]],
          'value' => undef
        }
      }
    },
    Aws_waf_size_constraint_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_size_constraint_set_size_constraints_557 => {
      attributes => {
        'comparison_operator' => String,
        'field_to_match' => Array[Aws_waf_size_constraint_set_size_constraints_557_field_to_match_558],
        'size' => Integer,
        'text_transformation' => String
      }
    },
    Aws_waf_size_constraint_set_size_constraints_557_field_to_match_558 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_waf_sql_injection_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['sql_injection_match_tuples']
        }
      },
      attributes => {
        'aws_waf_sql_injection_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'sql_injection_match_tuples' => {
          'type' => Optional[Array[Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559]],
          'value' => undef
        }
      }
    },
    Aws_waf_sql_injection_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559 => {
      attributes => {
        'field_to_match' => Array[Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559_field_to_match_560],
        'text_transformation' => String
      }
    },
    Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559_field_to_match_560 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_waf_web_acl => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['metric_name', 'name'],
          'providedAttributes' => ['rules']
        }
      },
      attributes => {
        'aws_waf_web_acl_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'default_action' => Array[Aws_waf_web_acl_default_action_561],
        'metric_name' => String,
        'name' => String,
        'rules' => {
          'type' => Optional[Array[Aws_waf_web_acl_rules_562]],
          'value' => undef
        }
      }
    },
    Aws_waf_web_aclHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_web_acl_default_action_561 => {
      attributes => {
        'type' => String
      }
    },
    Aws_waf_web_acl_rules_562 => {
      attributes => {
        'action' => {
          'type' => Optional[Array[Aws_waf_web_acl_rules_562_action_563]],
          'value' => undef
        },
        'override_action' => {
          'type' => Optional[Array[Aws_waf_web_acl_rules_562_override_action_564]],
          'value' => undef
        },
        'priority' => Integer,
        'rule_id' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_waf_web_acl_rules_562_action_563 => {
      attributes => {
        'type' => String
      }
    },
    Aws_waf_web_acl_rules_562_override_action_564 => {
      attributes => {
        'type' => String
      }
    },
    Aws_waf_xss_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['xss_match_tuples']
        }
      },
      attributes => {
        'aws_waf_xss_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'xss_match_tuples' => {
          'type' => Optional[Array[Aws_waf_xss_match_set_xss_match_tuples_565]],
          'value' => undef
        }
      }
    },
    Aws_waf_xss_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_waf_xss_match_set_xss_match_tuples_565 => {
      attributes => {
        'field_to_match' => Array[Aws_waf_xss_match_set_xss_match_tuples_565_field_to_match_566],
        'text_transformation' => String
      }
    },
    Aws_waf_xss_match_set_xss_match_tuples_565_field_to_match_566 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_wafregional_byte_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['byte_match_tuple', 'byte_match_tuples']
        }
      },
      attributes => {
        'aws_wafregional_byte_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'byte_match_tuple' => {
          'type' => Optional[Array[Aws_wafregional_byte_match_set_byte_match_tuple_567]],
          'value' => undef
        },
        'byte_match_tuples' => {
          'type' => Optional[Array[Aws_wafregional_byte_match_set_byte_match_tuples_569]],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_wafregional_byte_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_byte_match_set_byte_match_tuple_567 => {
      attributes => {
        'field_to_match' => Array[Aws_wafregional_byte_match_set_byte_match_tuple_567_field_to_match_568],
        'positional_constraint' => String,
        'target_string' => {
          'type' => Optional[String],
          'value' => undef
        },
        'text_transformation' => String
      }
    },
    Aws_wafregional_byte_match_set_byte_match_tuple_567_field_to_match_568 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_wafregional_byte_match_set_byte_match_tuples_569 => {
      attributes => {
        'field_to_match' => Array[Aws_wafregional_byte_match_set_byte_match_tuples_569_field_to_match_570],
        'positional_constraint' => String,
        'target_string' => {
          'type' => Optional[String],
          'value' => undef
        },
        'text_transformation' => String
      }
    },
    Aws_wafregional_byte_match_set_byte_match_tuples_569_field_to_match_570 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_wafregional_geo_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['geo_match_constraint']
        }
      },
      attributes => {
        'aws_wafregional_geo_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'geo_match_constraint' => {
          'type' => Optional[Array[Aws_wafregional_geo_match_set_geo_match_constraint_571]],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_wafregional_geo_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_geo_match_set_geo_match_constraint_571 => {
      attributes => {
        'type' => String,
        'value' => String
      }
    },
    Aws_wafregional_ipset => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['arn', 'ip_set_descriptor']
        }
      },
      attributes => {
        'aws_wafregional_ipset_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'arn' => {
          'type' => Optional[String],
          'value' => undef
        },
        'ip_set_descriptor' => {
          'type' => Optional[Array[Aws_wafregional_ipset_ip_set_descriptor_572]],
          'value' => undef
        },
        'name' => String
      }
    },
    Aws_wafregional_ipsetHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_ipset_ip_set_descriptor_572 => {
      attributes => {
        'type' => String,
        'value' => String
      }
    },
    Aws_wafregional_rate_based_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['metric_name', 'name'],
          'providedAttributes' => ['predicate']
        }
      },
      attributes => {
        'aws_wafregional_rate_based_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'metric_name' => String,
        'name' => String,
        'predicate' => {
          'type' => Optional[Array[Aws_wafregional_rate_based_rule_predicate_573]],
          'value' => undef
        },
        'rate_key' => String,
        'rate_limit' => Integer
      }
    },
    Aws_wafregional_rate_based_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_rate_based_rule_predicate_573 => {
      attributes => {
        'data_id' => String,
        'negated' => Boolean,
        'type' => String
      }
    },
    Aws_wafregional_regex_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['regex_match_tuple']
        }
      },
      attributes => {
        'aws_wafregional_regex_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'regex_match_tuple' => {
          'type' => Optional[Array[Aws_wafregional_regex_match_set_regex_match_tuple_574]],
          'value' => undef
        }
      }
    },
    Aws_wafregional_regex_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_regex_match_set_regex_match_tuple_574 => {
      attributes => {
        'field_to_match' => Array[Aws_wafregional_regex_match_set_regex_match_tuple_574_field_to_match_575],
        'regex_pattern_set_id' => String,
        'text_transformation' => String
      }
    },
    Aws_wafregional_regex_match_set_regex_match_tuple_574_field_to_match_575 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_wafregional_regex_pattern_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['regex_pattern_strings']
        }
      },
      attributes => {
        'aws_wafregional_regex_pattern_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'regex_pattern_strings' => {
          'type' => Optional[Array[String]],
          'value' => undef
        }
      }
    },
    Aws_wafregional_regex_pattern_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_rule => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['metric_name', 'name'],
          'providedAttributes' => ['predicate']
        }
      },
      attributes => {
        'aws_wafregional_rule_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'metric_name' => String,
        'name' => String,
        'predicate' => {
          'type' => Optional[Array[Aws_wafregional_rule_predicate_576]],
          'value' => undef
        }
      }
    },
    Aws_wafregional_ruleHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_rule_group => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['metric_name', 'name'],
          'providedAttributes' => ['activated_rule']
        }
      },
      attributes => {
        'aws_wafregional_rule_group_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'activated_rule' => {
          'type' => Optional[Array[Aws_wafregional_rule_group_activated_rule_577]],
          'value' => undef
        },
        'metric_name' => String,
        'name' => String
      }
    },
    Aws_wafregional_rule_groupHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_rule_group_activated_rule_577 => {
      attributes => {
        'action' => Array[Aws_wafregional_rule_group_activated_rule_577_action_578],
        'priority' => Integer,
        'rule_id' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_wafregional_rule_group_activated_rule_577_action_578 => {
      attributes => {
        'type' => String
      }
    },
    Aws_wafregional_rule_predicate_576 => {
      attributes => {
        'data_id' => String,
        'negated' => Boolean,
        'type' => String
      }
    },
    Aws_wafregional_size_constraint_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['size_constraints']
        }
      },
      attributes => {
        'aws_wafregional_size_constraint_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'size_constraints' => {
          'type' => Optional[Array[Aws_wafregional_size_constraint_set_size_constraints_579]],
          'value' => undef
        }
      }
    },
    Aws_wafregional_size_constraint_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_size_constraint_set_size_constraints_579 => {
      attributes => {
        'comparison_operator' => String,
        'field_to_match' => Array[Aws_wafregional_size_constraint_set_size_constraints_579_field_to_match_580],
        'size' => Integer,
        'text_transformation' => String
      }
    },
    Aws_wafregional_size_constraint_set_size_constraints_579_field_to_match_580 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_wafregional_sql_injection_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['sql_injection_match_tuple']
        }
      },
      attributes => {
        'aws_wafregional_sql_injection_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'sql_injection_match_tuple' => {
          'type' => Optional[Array[Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581]],
          'value' => undef
        }
      }
    },
    Aws_wafregional_sql_injection_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581 => {
      attributes => {
        'field_to_match' => Array[Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581_field_to_match_582],
        'text_transformation' => String
      }
    },
    Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581_field_to_match_582 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    Aws_wafregional_web_acl => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['metric_name', 'name'],
          'providedAttributes' => ['rule']
        }
      },
      attributes => {
        'aws_wafregional_web_acl_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'default_action' => Array[Aws_wafregional_web_acl_default_action_583],
        'metric_name' => String,
        'name' => String,
        'rule' => {
          'type' => Optional[Array[Aws_wafregional_web_acl_rule_584]],
          'value' => undef
        }
      }
    },
    Aws_wafregional_web_aclHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_web_acl_association => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['resource_arn', 'web_acl_id']
        }
      },
      attributes => {
        'aws_wafregional_web_acl_association_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'resource_arn' => String,
        'web_acl_id' => String
      }
    },
    Aws_wafregional_web_acl_associationHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_web_acl_default_action_583 => {
      attributes => {
        'type' => String
      }
    },
    Aws_wafregional_web_acl_rule_584 => {
      attributes => {
        'action' => {
          'type' => Optional[Array[Aws_wafregional_web_acl_rule_584_action_585]],
          'value' => undef
        },
        'override_action' => {
          'type' => Optional[Array[Aws_wafregional_web_acl_rule_584_override_action_586]],
          'value' => undef
        },
        'priority' => Integer,
        'rule_id' => String,
        'type' => {
          'type' => Optional[String],
          'value' => undef
        }
      }
    },
    Aws_wafregional_web_acl_rule_584_action_585 => {
      attributes => {
        'type' => String
      }
    },
    Aws_wafregional_web_acl_rule_584_override_action_586 => {
      attributes => {
        'type' => String
      }
    },
    Aws_wafregional_xss_match_set => {
      annotations => {
        Lyra::Resource => {
          'immutableAttributes' => ['name'],
          'providedAttributes' => ['xss_match_tuple']
        }
      },
      attributes => {
        'aws_wafregional_xss_match_set_id' => {
          'annotations' => {
            TagsAnnotation => {
              'lyra' => 'ignore'
            }
          },
          'type' => Optional[String],
          'value' => undef
        },
        'name' => String,
        'xss_match_tuple' => {
          'type' => Optional[Array[Aws_wafregional_xss_match_set_xss_match_tuple_587]],
          'value' => undef
        }
      }
    },
    Aws_wafregional_xss_match_setHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    },
    Aws_wafregional_xss_match_set_xss_match_tuple_587 => {
      attributes => {
        'field_to_match' => Array[Aws_wafregional_xss_match_set_xss_match_tuple_587_field_to_match_588],
        'text_transformation' => String
      }
    },
    Aws_wafregional_xss_match_set_xss_match_tuple_587_field_to_match_588 => {
      attributes => {
        'data' => {
          'type' => Optional[String],
          'value' => undef
        },
        'type' => String
      }
    },
    GenericHandler => {
      functions => {
        'create' => Callable[
          [Object],
          Tuple[Object, String]],
        'delete' => Callable[String],
        'read' => Callable[
          [String],
          Object],
        'update' => Callable[
          [String, Object],
          Object]
      }
    }
  }
}]
