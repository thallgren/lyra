// Code generated by Lyra DO NOT EDIT.

// This code is generated on a per-Provider basis using "tf-gen"
// Long term our hope is to remove this generation step and adopt dynamic approach

package azurerm

import (
	"github.com/hashicorp/terraform/helper/schema"
	"github.com/lyraproj/lyra/pkg/bridge"
	"github.com/lyraproj/pcore/px"
	"github.com/lyraproj/servicesdk/service"
)

type (
	Api_management struct {
		Api_managementID          *string `lyra:"ignore"`
		Additional_location       *[]Api_management__additional_location
		Certificate               *[]Api_management__certificate
		Gateway_regional_url      *string
		Gateway_url               *string
		Hostname_configuration    *[]Api_management__hostname_configuration
		Identity                  *[]Api_management__identity
		Location                  string
		Management_api_url        *string
		Name                      string
		Notification_sender_email *string
		Portal_url                *string
		Public_ip_addresses       *[]string
		Publisher_email           string
		Publisher_name            string
		Resource_group_name       string
		Scm_url                   *string
		Security                  *[]Api_management__security
		Sku                       []Api_management__sku
		Tags                      *map[string]string
	}

	App_service struct {
		App_serviceID                  *string `lyra:"ignore"`
		App_service_plan_id            string
		App_settings                   *map[string]string
		Client_affinity_enabled        *bool
		Connection_string              *[]App_service__connection_string
		Default_site_hostname          *string
		Enabled                        *bool
		Https_only                     *bool
		Identity                       *[]App_service__identity
		Location                       string
		Name                           string
		Outbound_ip_addresses          *string
		Possible_outbound_ip_addresses *string
		Resource_group_name            string
		Site_config                    *[]App_service__site_config
		Site_credential                *[]App_service__site_credential
		Source_control                 *[]App_service__source_control
		Tags                           *map[string]string
	}

	App_service_active_slot struct {
		App_service_active_slotID *string `lyra:"ignore"`
		App_service_name          string
		App_service_slot_name     string
		Resource_group_name       string
	}

	App_service_custom_hostname_binding struct {
		App_service_custom_hostname_bindingID *string `lyra:"ignore"`
		App_service_name                      string
		Hostname                              string
		Resource_group_name                   string
	}

	App_service_plan struct {
		App_service_planID         *string `lyra:"ignore"`
		App_service_environment_id *string
		Kind                       *string
		Location                   string
		Maximum_number_of_workers  *int64
		Name                       string
		Per_site_scaling           *bool
		Properties                 *[]App_service_plan__properties
		Reserved                   *bool
		Resource_group_name        string
		Sku                        []App_service_plan__sku
		Tags                       *map[string]string
	}

	App_service_slot struct {
		App_service_slotID      *string `lyra:"ignore"`
		App_service_name        string
		App_service_plan_id     string
		App_settings            *map[string]string
		Client_affinity_enabled *bool
		Connection_string       *[]App_service_slot__connection_string
		Default_site_hostname   *string
		Enabled                 *bool
		Https_only              *bool
		Identity                *[]App_service_slot__identity
		Location                string
		Name                    string
		Resource_group_name     string
		Site_config             *[]App_service_slot__site_config
		Tags                    *map[string]string
	}

	Application_gateway struct {
		Application_gatewayID      *string `lyra:"ignore"`
		Authentication_certificate *[]Application_gateway__authentication_certificate
		Backend_address_pool       []Application_gateway__backend_address_pool
		Backend_http_settings      []Application_gateway__backend_http_settings
		Disabled_ssl_protocols     *[]string
		Frontend_ip_configuration  []Application_gateway__frontend_ip_configuration
		Frontend_port              []Application_gateway__frontend_port
		Gateway_ip_configuration   []Application_gateway__gateway_ip_configuration
		Http_listener              []Application_gateway__http_listener
		Location                   string
		Name                       string
		Probe                      *[]Application_gateway__probe
		Request_routing_rule       []Application_gateway__request_routing_rule
		Resource_group_name        string
		Sku                        []Application_gateway__sku
		Ssl_certificate            *[]Application_gateway__ssl_certificate
		Tags                       *map[string]string
		Url_path_map               *[]Application_gateway__url_path_map
		Waf_configuration          *[]Application_gateway__waf_configuration
	}

	Application_insights struct {
		Application_insightsID *string `lyra:"ignore"`
		App_id                 *string
		Application_type       string
		Instrumentation_key    *string
		Location               string
		Name                   string
		Resource_group_name    string
		Tags                   *map[string]string
	}

	Application_insights_api_key struct {
		Application_insights_api_keyID *string `lyra:"ignore"`
		Api_key                        *string
		Application_insights_id        string
		Name                           string
		Read_permissions               *[]string
		Write_permissions              *[]string
	}

	Application_security_group struct {
		Application_security_groupID *string `lyra:"ignore"`
		Location                     string
		Name                         string
		Resource_group_name          string
		Tags                         *map[string]string
	}

	Automation_account struct {
		Automation_accountID     *string `lyra:"ignore"`
		Dsc_primary_access_key   *string
		Dsc_secondary_access_key *string
		Dsc_server_endpoint      *string
		Location                 string
		Name                     string
		Resource_group_name      string
		Sku                      []Automation_account__sku
		Tags                     *map[string]string
	}

	Automation_credential struct {
		Automation_credentialID *string `lyra:"ignore"`
		Account_name            string
		Description             *string
		Name                    string
		Password                string
		Resource_group_name     string
		Username                string
	}

	Automation_dsc_configuration struct {
		Automation_dsc_configurationID *string `lyra:"ignore"`
		Automation_account_name        string
		Content_embedded               string
		Description                    *string
		Location                       string
		Log_verbose                    *bool
		Name                           string
		Resource_group_name            string
		State                          *string
	}

	Automation_dsc_nodeconfiguration struct {
		Automation_dsc_nodeconfigurationID *string `lyra:"ignore"`
		Automation_account_name            string
		Configuration_name                 *string
		Content_embedded                   string
		Name                               string
		Resource_group_name                string
	}

	Automation_module struct {
		Automation_moduleID     *string `lyra:"ignore"`
		Automation_account_name string
		Module_link             []Automation_module__module_link
		Name                    string
		Resource_group_name     string
	}

	Automation_runbook struct {
		Automation_runbookID *string `lyra:"ignore"`
		Account_name         string
		Content              *string
		Description          *string
		Location             string
		Log_progress         bool
		Log_verbose          bool
		Name                 string
		Publish_content_link []Automation_runbook__publish_content_link
		Resource_group_name  string
		Runbook_type         string
		Tags                 *map[string]string
	}

	Automation_schedule struct {
		Automation_scheduleID   *string `lyra:"ignore"`
		Account_name            *string
		Automation_account_name *string
		Description             *string
		Expiry_time             *string
		Frequency               string
		Interval                *int64
		Month_days              *[]int64
		Monthly_occurrence      *[]Automation_schedule__monthly_occurrence
		Name                    string
		Resource_group_name     string
		Start_time              *string
		Timezone                *string
		Week_days               *[]string
	}

	Autoscale_setting struct {
		Autoscale_settingID *string `lyra:"ignore"`
		Enabled             *bool
		Location            string
		Name                string
		Notification        *[]Autoscale_setting__notification
		Profile             []Autoscale_setting__profile
		Resource_group_name string
		Tags                *map[string]string
		Target_resource_id  string
	}

	Availability_set struct {
		Availability_setID           *string `lyra:"ignore"`
		Location                     string
		Managed                      *bool
		Name                         string
		Platform_fault_domain_count  *int64
		Platform_update_domain_count *int64
		Resource_group_name          string
		Tags                         *map[string]string
	}

	Azuread_application struct {
		Azuread_applicationID      *string `lyra:"ignore"`
		Application_id             *string
		Available_to_other_tenants *bool
		Homepage                   *string
		Identifier_uris            *[]string
		Name                       string
		Oauth2_allow_implicit_flow *bool
		Reply_urls                 *[]string
	}

	Azuread_service_principal struct {
		Azuread_service_principalID *string `lyra:"ignore"`
		Application_id              string
		Display_name                *string
	}

	Azuread_service_principal_password struct {
		Azuread_service_principal_passwordID *string `lyra:"ignore"`
		End_date                             string
		Key_id                               *string
		Service_principal_id                 string
		Start_date                           *string
		Value                                string
	}

	Batch_account struct {
		Batch_accountID      *string `lyra:"ignore"`
		Location             string
		Name                 string
		Pool_allocation_mode *string
		Resource_group_name  string
		Storage_account_id   *string
		Tags                 *map[string]string
	}

	Batch_pool struct {
		Batch_poolID                  *string `lyra:"ignore"`
		Account_name                  string
		Auto_scale                    *[]Batch_pool__auto_scale
		Display_name                  *string
		Fixed_scale                   *[]Batch_pool__fixed_scale
		Name                          string
		Node_agent_sku_id             string
		Resource_group_name           string
		Start_task                    *[]Batch_pool__start_task
		Stop_pending_resize_operation *bool
		Storage_image_reference       []Batch_pool__storage_image_reference
		Vm_size                       string
	}

	Cdn_endpoint struct {
		Cdn_endpointID                *string `lyra:"ignore"`
		Content_types_to_compress     *[]string
		Geo_filter                    *[]Cdn_endpoint__geo_filter
		Host_name                     *string
		Is_compression_enabled        *bool
		Is_http_allowed               *bool
		Is_https_allowed              *bool
		Location                      string
		Name                          string
		Optimization_type             *string
		Origin                        []Cdn_endpoint__origin
		Origin_host_header            *string
		Origin_path                   *string
		Probe_path                    *string
		Profile_name                  string
		Querystring_caching_behaviour *string
		Resource_group_name           string
		Tags                          *map[string]string
	}

	Cdn_profile struct {
		Cdn_profileID       *string `lyra:"ignore"`
		Location            string
		Name                string
		Resource_group_name string
		Sku                 string
		Tags                *map[string]string
	}

	Cognitive_account struct {
		Cognitive_accountID *string `lyra:"ignore"`
		Endpoint            *string
		Kind                string
		Location            string
		Name                string
		Resource_group_name string
		Sku                 []Cognitive_account__sku
		Tags                *map[string]string
	}

	Container_group struct {
		Container_groupID         *string `lyra:"ignore"`
		Container                 []Container_group__container
		Dns_name_label            *string
		Fqdn                      *string
		Image_registry_credential *[]Container_group__image_registry_credential
		Ip_address                *string
		Ip_address_type           *string
		Location                  string
		Name                      string
		Os_type                   string
		Resource_group_name       string
		Restart_policy            *string
		Tags                      *map[string]string
	}

	Container_registry struct {
		Container_registryID     *string `lyra:"ignore"`
		Admin_enabled            *bool
		Admin_password           *string
		Admin_username           *string
		Georeplication_locations *[]string
		Location                 string
		Login_server             *string
		Name                     string
		Resource_group_name      string
		Sku                      *string
		Storage_account          *[]Container_registry__storage_account
		Storage_account_id       *string
		Tags                     *map[string]string
	}

	Container_service struct {
		Container_serviceID    *string `lyra:"ignore"`
		Agent_pool_profile     []Container_service__agent_pool_profile
		Diagnostics_profile    []Container_service__diagnostics_profile
		Linux_profile          []Container_service__linux_profile
		Location               string
		Master_profile         []Container_service__master_profile
		Name                   string
		Orchestration_platform string
		Resource_group_name    string
		Service_principal      *[]Container_service__service_principal
		Tags                   *map[string]string
	}

	Cosmosdb_account struct {
		Cosmosdb_accountID                *string `lyra:"ignore"`
		Capabilities                      *[]Cosmosdb_account__capabilities
		Connection_strings                *[]string
		Consistency_policy                []Cosmosdb_account__consistency_policy
		Enable_automatic_failover         *bool
		Enable_multiple_write_locations   *bool
		Endpoint                          *string
		Failover_policy                   *[]Cosmosdb_account__failover_policy
		Geo_location                      *[]Cosmosdb_account__geo_location
		Ip_range_filter                   *string
		Is_virtual_network_filter_enabled *bool
		Kind                              *string
		Location                          string
		Name                              string
		Offer_type                        string
		Primary_master_key                *string
		Primary_readonly_master_key       *string
		Read_endpoints                    *[]string
		Resource_group_name               string
		Secondary_master_key              *string
		Secondary_readonly_master_key     *string
		Tags                              *map[string]string
		Virtual_network_rule              *[]Cosmosdb_account__virtual_network_rule
		Write_endpoints                   *[]string
	}

	Data_lake_analytics_account struct {
		Data_lake_analytics_accountID *string `lyra:"ignore"`
		Default_store_account_name    string
		Location                      string
		Name                          string
		Resource_group_name           string
		Tags                          *map[string]string
		Tier                          *string
	}

	Data_lake_analytics_firewall_rule struct {
		Data_lake_analytics_firewall_ruleID *string `lyra:"ignore"`
		Account_name                        string
		End_ip_address                      string
		Name                                string
		Resource_group_name                 string
		Start_ip_address                    string
	}

	Data_lake_store struct {
		Data_lake_storeID        *string `lyra:"ignore"`
		Encryption_state         *string
		Encryption_type          *string
		Endpoint                 *string
		Firewall_allow_azure_ips *string
		Firewall_state           *string
		Location                 string
		Name                     string
		Resource_group_name      string
		Tags                     *map[string]string
		Tier                     *string
	}

	Data_lake_store_file struct {
		Data_lake_store_fileID *string `lyra:"ignore"`
		Account_name           string
		Local_file_path        string
		Remote_file_path       string
	}

	Data_lake_store_firewall_rule struct {
		Data_lake_store_firewall_ruleID *string `lyra:"ignore"`
		Account_name                    string
		End_ip_address                  string
		Name                            string
		Resource_group_name             string
		Start_ip_address                string
	}

	Databricks_workspace struct {
		Databricks_workspaceID      *string `lyra:"ignore"`
		Location                    string
		Managed_resource_group_id   *string
		Managed_resource_group_name *string
		Name                        string
		Resource_group_name         string
		Sku                         string
		Tags                        *map[string]string
	}

	Dev_test_lab struct {
		Dev_test_labID                       *string `lyra:"ignore"`
		Artifacts_storage_account_id         *string
		Default_premium_storage_account_id   *string
		Default_storage_account_id           *string
		Key_vault_id                         *string
		Location                             string
		Name                                 string
		Premium_data_disk_storage_account_id *string
		Resource_group_name                  string
		Storage_type                         *string
		Tags                                 *map[string]string
		Unique_identifier                    *string
	}

	Dev_test_linux_virtual_machine struct {
		Dev_test_linux_virtual_machineID *string `lyra:"ignore"`
		Allow_claim                      *bool
		Disallow_public_ip_address       *bool
		Fqdn                             *string
		Gallery_image_reference          []Dev_test_linux_virtual_machine__gallery_image_reference
		Inbound_nat_rule                 *[]Dev_test_linux_virtual_machine__inbound_nat_rule
		Lab_name                         string
		Lab_subnet_name                  string
		Lab_virtual_network_id           string
		Location                         string
		Name                             string
		Notes                            *string
		Password                         *string
		Resource_group_name              string
		Size                             string
		Ssh_key                          *string
		Storage_type                     string
		Tags                             *map[string]string
		Unique_identifier                *string
		Username                         string
	}

	Dev_test_policy struct {
		Dev_test_policyID   *string `lyra:"ignore"`
		Description         *string
		Evaluator_type      string
		Fact_data           *string
		Lab_name            string
		Name                string
		Policy_set_name     string
		Resource_group_name string
		Tags                *map[string]string
		Threshold           string
	}

	Dev_test_virtual_network struct {
		Dev_test_virtual_networkID *string `lyra:"ignore"`
		Description                *string
		Lab_name                   string
		Name                       string
		Resource_group_name        string
		Subnet                     *[]Dev_test_virtual_network__subnet
		Tags                       *map[string]string
		Unique_identifier          *string
	}

	Dev_test_windows_virtual_machine struct {
		Dev_test_windows_virtual_machineID *string `lyra:"ignore"`
		Allow_claim                        *bool
		Disallow_public_ip_address         *bool
		Fqdn                               *string
		Gallery_image_reference            []Dev_test_windows_virtual_machine__gallery_image_reference
		Inbound_nat_rule                   *[]Dev_test_windows_virtual_machine__inbound_nat_rule
		Lab_name                           string
		Lab_subnet_name                    string
		Lab_virtual_network_id             string
		Location                           string
		Name                               string
		Notes                              *string
		Password                           string
		Resource_group_name                string
		Size                               string
		Storage_type                       string
		Tags                               *map[string]string
		Unique_identifier                  *string
		Username                           string
	}

	Devspace_controller struct {
		Devspace_controllerID                    *string `lyra:"ignore"`
		Data_plane_fqdn                          *string
		Host_suffix                              string
		Location                                 string
		Name                                     string
		Resource_group_name                      string
		Sku                                      []Devspace_controller__sku
		Tags                                     *map[string]string
		Target_container_host_credentials_base64 string
		Target_container_host_resource_id        string
	}

	Dns_a_record struct {
		Dns_a_recordID      *string `lyra:"ignore"`
		Name                string
		Records             []string
		Resource_group_name string
		Tags                *map[string]string
		Ttl                 int64
		Zone_name           string
	}

	Dns_aaaa_record struct {
		Dns_aaaa_recordID   *string `lyra:"ignore"`
		Name                string
		Records             []string
		Resource_group_name string
		Tags                *map[string]string
		Ttl                 int64
		Zone_name           string
	}

	Dns_caa_record struct {
		Dns_caa_recordID    *string `lyra:"ignore"`
		Name                string
		Record              []Dns_caa_record__record
		Resource_group_name string
		Tags                *map[string]string
		Ttl                 int64
		Zone_name           string
	}

	Dns_cname_record struct {
		Dns_cname_recordID  *string `lyra:"ignore"`
		Name                string
		Record              string
		Records             *string
		Resource_group_name string
		Tags                *map[string]string
		Ttl                 int64
		Zone_name           string
	}

	Dns_mx_record struct {
		Dns_mx_recordID     *string `lyra:"ignore"`
		Name                string
		Record              []Dns_mx_record__record
		Resource_group_name string
		Tags                *map[string]string
		Ttl                 int64
		Zone_name           string
	}

	Dns_ns_record struct {
		Dns_ns_recordID     *string `lyra:"ignore"`
		Name                string
		Record              *[]Dns_ns_record__record
		Records             *[]string
		Resource_group_name string
		Tags                *map[string]string
		Ttl                 int64
		Zone_name           string
	}

	Dns_ptr_record struct {
		Dns_ptr_recordID    *string `lyra:"ignore"`
		Name                string
		Records             []string
		Resource_group_name string
		Tags                *map[string]string
		Ttl                 int64
		Zone_name           string
	}

	Dns_srv_record struct {
		Dns_srv_recordID    *string `lyra:"ignore"`
		Name                string
		Record              []Dns_srv_record__record
		Resource_group_name string
		Tags                *map[string]string
		Ttl                 int64
		Zone_name           string
	}

	Dns_txt_record struct {
		Dns_txt_recordID    *string `lyra:"ignore"`
		Name                string
		Record              []Dns_txt_record__record
		Resource_group_name string
		Tags                *map[string]string
		Ttl                 int64
		Zone_name           string
	}

	Dns_zone struct {
		Dns_zoneID                       *string `lyra:"ignore"`
		Max_number_of_record_sets        *int64
		Name                             string
		Name_servers                     *[]string
		Number_of_record_sets            *int64
		Registration_virtual_network_ids *[]string
		Resolution_virtual_network_ids   *[]string
		Resource_group_name              string
		Tags                             *map[string]string
		Zone_type                        *string
	}

	Eventgrid_topic struct {
		Eventgrid_topicID    *string `lyra:"ignore"`
		Endpoint             *string
		Location             string
		Name                 string
		Primary_access_key   *string
		Resource_group_name  string
		Secondary_access_key *string
		Tags                 *map[string]string
	}

	Eventhub struct {
		EventhubID          *string `lyra:"ignore"`
		Capture_description *[]Eventhub__capture_description
		Location            *string
		Message_retention   int64
		Name                string
		Namespace_name      string
		Partition_count     int64
		Partition_ids       *[]string
		Resource_group_name string
	}

	Eventhub_authorization_rule struct {
		Eventhub_authorization_ruleID *string `lyra:"ignore"`
		Eventhub_name                 string
		Listen                        *bool
		Location                      *string
		Manage                        *bool
		Name                          string
		Namespace_name                string
		Primary_connection_string     *string
		Primary_key                   *string
		Resource_group_name           string
		Secondary_connection_string   *string
		Secondary_key                 *string
		Send                          *bool
	}

	Eventhub_consumer_group struct {
		Eventhub_consumer_groupID *string `lyra:"ignore"`
		Eventhub_name             string
		Location                  *string
		Name                      string
		Namespace_name            string
		Resource_group_name       string
		User_metadata             *string
	}

	Eventhub_namespace struct {
		Eventhub_namespaceID                *string `lyra:"ignore"`
		Auto_inflate_enabled                *bool
		Capacity                            *int64
		Default_primary_connection_string   *string
		Default_primary_key                 *string
		Default_secondary_connection_string *string
		Default_secondary_key               *string
		Kafka_enabled                       *bool
		Location                            string
		Maximum_throughput_units            *int64
		Name                                string
		Resource_group_name                 string
		Sku                                 string
		Tags                                *map[string]string
	}

	Eventhub_namespace_authorization_rule struct {
		Eventhub_namespace_authorization_ruleID *string `lyra:"ignore"`
		Listen                                  *bool
		Location                                *string
		Manage                                  *bool
		Name                                    string
		Namespace_name                          string
		Primary_connection_string               *string
		Primary_key                             *string
		Resource_group_name                     string
		Secondary_connection_string             *string
		Secondary_key                           *string
		Send                                    *bool
	}

	Express_route_circuit struct {
		Express_route_circuitID             *string `lyra:"ignore"`
		Allow_classic_operations            *bool
		Bandwidth_in_mbps                   int64
		Location                            string
		Name                                string
		Peering_location                    string
		Resource_group_name                 string
		Service_key                         *string
		Service_provider_name               string
		Service_provider_provisioning_state *string
		Sku                                 []Express_route_circuit__sku
		Tags                                *map[string]string
	}

	Express_route_circuit_authorization struct {
		Express_route_circuit_authorizationID *string `lyra:"ignore"`
		Authorization_key                     *string
		Authorization_use_status              *string
		Express_route_circuit_name            string
		Name                                  string
		Resource_group_name                   string
	}

	Express_route_circuit_peering struct {
		Express_route_circuit_peeringID *string `lyra:"ignore"`
		Azure_asn                       *int64
		Express_route_circuit_name      string
		Microsoft_peering_config        *[]Express_route_circuit_peering__microsoft_peering_config
		Peer_asn                        *int64
		Peering_type                    string
		Primary_azure_port              *string
		Primary_peer_address_prefix     string
		Resource_group_name             string
		Secondary_azure_port            *string
		Secondary_peer_address_prefix   string
		Shared_key                      *string
		Vlan_id                         int64
	}

	Firewall struct {
		FirewallID          *string `lyra:"ignore"`
		Ip_configuration    []Firewall__ip_configuration
		Location            string
		Name                string
		Resource_group_name string
		Tags                *map[string]string
	}

	Firewall_application_rule_collection struct {
		Firewall_application_rule_collectionID *string `lyra:"ignore"`
		Action                                 string
		Azure_firewall_name                    string
		Name                                   string
		Priority                               int64
		Resource_group_name                    string
		Rule                                   []Firewall_application_rule_collection__rule
	}

	Firewall_network_rule_collection struct {
		Firewall_network_rule_collectionID *string `lyra:"ignore"`
		Action                             string
		Azure_firewall_name                string
		Name                               string
		Priority                           int64
		Resource_group_name                string
		Rule                               []Firewall_network_rule_collection__rule
	}

	Function_app struct {
		Function_appID            *string `lyra:"ignore"`
		App_service_plan_id       string
		App_settings              *map[string]string
		Client_affinity_enabled   *bool
		Connection_string         *[]Function_app__connection_string
		Default_hostname          *string
		Enable_builtin_logging    *bool
		Enabled                   *bool
		Https_only                *bool
		Identity                  *[]Function_app__identity
		Location                  string
		Name                      string
		Outbound_ip_addresses     *string
		Resource_group_name       string
		Site_config               *[]Function_app__site_config
		Site_credential           *[]Function_app__site_credential
		Storage_connection_string string
		Tags                      *map[string]string
		Version                   *string
	}

	Image struct {
		ImageID                   *string `lyra:"ignore"`
		Data_disk                 *[]Image__data_disk
		Location                  string
		Name                      string
		Os_disk                   *[]Image__os_disk
		Resource_group_name       string
		Source_virtual_machine_id *string
		Tags                      *map[string]string
	}

	Iothub struct {
		IothubID                      *string `lyra:"ignore"`
		Endpoint                      *[]Iothub__endpoint
		Event_hub_events_endpoint     *string
		Event_hub_events_path         *string
		Event_hub_operations_endpoint *string
		Event_hub_operations_path     *string
		Hostname                      *string
		Location                      string
		Name                          string
		Resource_group_name           string
		Route                         *[]Iothub__route
		Shared_access_policy          *[]Iothub__shared_access_policy
		Sku                           []Iothub__sku
		Tags                          *map[string]string
		Type                          *string
	}

	Iothub_consumer_group struct {
		Iothub_consumer_groupID *string `lyra:"ignore"`
		Eventhub_endpoint_name  string
		Iothub_name             string
		Name                    string
		Resource_group_name     string
	}

	Key_vault struct {
		Key_vaultID                     *string `lyra:"ignore"`
		Access_policy                   *[]Key_vault__access_policy
		Enabled_for_deployment          *bool
		Enabled_for_disk_encryption     *bool
		Enabled_for_template_deployment *bool
		Location                        string
		Name                            string
		Network_acls                    *[]Key_vault__network_acls
		Resource_group_name             string
		Sku                             []Key_vault__sku
		Tags                            *map[string]string
		Tenant_id                       string
		Vault_uri                       *string
	}

	Key_vault_access_policy struct {
		Key_vault_access_policyID *string `lyra:"ignore"`
		Application_id            *string
		Certificate_permissions   *[]string
		Key_permissions           *[]string
		Object_id                 string
		Resource_group_name       string
		Secret_permissions        *[]string
		Tenant_id                 string
		Vault_name                string
	}

	Key_vault_certificate struct {
		Key_vault_certificateID *string `lyra:"ignore"`
		Certificate             *[]Key_vault_certificate__certificate
		Certificate_data        *string
		Certificate_policy      []Key_vault_certificate__certificate_policy
		Name                    string
		Secret_id               *string
		Tags                    *map[string]string
		Thumbprint              *string
		Vault_uri               string
		Version                 *string
	}

	Key_vault_key struct {
		Key_vault_keyID *string `lyra:"ignore"`
		E               *string
		Key_opts        []string
		Key_size        int64
		Key_type        string
		N               *string
		Name            string
		Tags            *map[string]string
		Vault_uri       string
		Version         *string
	}

	Key_vault_secret struct {
		Key_vault_secretID *string `lyra:"ignore"`
		Content_type       *string
		Name               string
		Tags               *map[string]string
		Value              string
		Vault_uri          string
		Version            *string
	}

	Kubernetes_cluster struct {
		Kubernetes_clusterID      *string `lyra:"ignore"`
		Addon_profile             *[]Kubernetes_cluster__addon_profile
		Agent_pool_profile        []Kubernetes_cluster__agent_pool_profile
		Dns_prefix                string
		Fqdn                      *string
		Kube_admin_config         *[]Kubernetes_cluster__kube_admin_config
		Kube_admin_config_raw     *string
		Kube_config               *[]Kubernetes_cluster__kube_config
		Kube_config_raw           *string
		Kubernetes_version        *string
		Linux_profile             *[]Kubernetes_cluster__linux_profile
		Location                  string
		Name                      string
		Network_profile           *[]Kubernetes_cluster__network_profile
		Node_resource_group       *string
		Resource_group_name       string
		Role_based_access_control *[]Kubernetes_cluster__role_based_access_control
		Service_principal         []Kubernetes_cluster__service_principal
		Tags                      *map[string]string
	}

	Lb struct {
		LbID                      *string `lyra:"ignore"`
		Frontend_ip_configuration *[]Lb__frontend_ip_configuration
		Location                  string
		Name                      string
		Private_ip_address        *string
		Private_ip_addresses      *[]string
		Resource_group_name       string
		Sku                       *string
		Tags                      *map[string]string
	}

	Lb_backend_address_pool struct {
		Lb_backend_address_poolID *string `lyra:"ignore"`
		Backend_ip_configurations *[]string
		Load_balancing_rules      *[]string
		Loadbalancer_id           string
		Location                  *string
		Name                      string
		Resource_group_name       string
	}

	Lb_nat_pool struct {
		Lb_nat_poolID                  *string `lyra:"ignore"`
		Backend_port                   int64
		Frontend_ip_configuration_id   *string
		Frontend_ip_configuration_name string
		Frontend_port_end              int64
		Frontend_port_start            int64
		Loadbalancer_id                string
		Location                       *string
		Name                           string
		Protocol                       string
		Resource_group_name            string
	}

	Lb_nat_rule struct {
		Lb_nat_ruleID                  *string `lyra:"ignore"`
		Backend_ip_configuration_id    *string
		Backend_port                   int64
		Enable_floating_ip             *bool
		Frontend_ip_configuration_id   *string
		Frontend_ip_configuration_name string
		Frontend_port                  int64
		Loadbalancer_id                string
		Location                       *string
		Name                           string
		Protocol                       string
		Resource_group_name            string
	}

	Lb_probe struct {
		Lb_probeID          *string `lyra:"ignore"`
		Interval_in_seconds *int64
		Load_balancer_rules *[]string
		Loadbalancer_id     string
		Location            *string
		Name                string
		Number_of_probes    *int64
		Port                int64
		Protocol            *string
		Request_path        *string
		Resource_group_name string
	}

	Lb_rule struct {
		Lb_ruleID                      *string `lyra:"ignore"`
		Backend_address_pool_id        *string
		Backend_port                   int64
		Enable_floating_ip             *bool
		Frontend_ip_configuration_id   *string
		Frontend_ip_configuration_name string
		Frontend_port                  int64
		Idle_timeout_in_minutes        *int64
		Load_distribution              *string
		Loadbalancer_id                string
		Location                       *string
		Name                           string
		Probe_id                       *string
		Protocol                       string
		Resource_group_name            string
	}

	Local_network_gateway struct {
		Local_network_gatewayID *string `lyra:"ignore"`
		Address_space           []string
		Bgp_settings            *[]Local_network_gateway__bgp_settings
		Gateway_address         string
		Location                string
		Name                    string
		Resource_group_name     string
		Tags                    *map[string]string
	}

	Log_analytics_solution struct {
		Log_analytics_solutionID *string `lyra:"ignore"`
		Location                 string
		Plan                     []Log_analytics_solution__plan
		Resource_group_name      string
		Solution_name            string
		Workspace_name           string
		Workspace_resource_id    string
	}

	Log_analytics_workspace struct {
		Log_analytics_workspaceID *string `lyra:"ignore"`
		Location                  string
		Name                      string
		Portal_url                *string
		Primary_shared_key        *string
		Resource_group_name       string
		Retention_in_days         *int64
		Secondary_shared_key      *string
		Sku                       string
		Tags                      *map[string]string
		Workspace_id              *string
	}

	Log_analytics_workspace_linked_service struct {
		Log_analytics_workspace_linked_serviceID *string `lyra:"ignore"`
		Linked_service_name                      *string
		Linked_service_properties                map[string]Log_analytics_workspace_linked_service__linked_service_properties
		Name                                     *string
		Resource_group_name                      string
		Tags                                     *map[string]string
		Workspace_name                           string
	}

	Logic_app_action_custom struct {
		Logic_app_action_customID *string `lyra:"ignore"`
		Body                      string
		Logic_app_id              string
		Name                      string
	}

	Logic_app_action_http struct {
		Logic_app_action_httpID *string `lyra:"ignore"`
		Body                    *string
		Headers                 *map[string]string
		Logic_app_id            string
		Method                  string
		Name                    string
		Uri                     string
	}

	Logic_app_trigger_custom struct {
		Logic_app_trigger_customID *string `lyra:"ignore"`
		Body                       string
		Logic_app_id               string
		Name                       string
	}

	Logic_app_trigger_http_request struct {
		Logic_app_trigger_http_requestID *string `lyra:"ignore"`
		Logic_app_id                     string
		Method                           *string
		Name                             string
		Relative_path                    *string
		Schema                           string
	}

	Logic_app_trigger_recurrence struct {
		Logic_app_trigger_recurrenceID *string `lyra:"ignore"`
		Frequency                      string
		Interval                       int64
		Logic_app_id                   string
		Name                           string
	}

	Logic_app_workflow struct {
		Logic_app_workflowID *string `lyra:"ignore"`
		Access_endpoint      *string
		Location             string
		Name                 string
		Parameters           *map[string]string
		Resource_group_name  string
		Tags                 *map[string]string
		Workflow_schema      *string
		Workflow_version     *string
	}

	Managed_disk struct {
		Managed_diskID       *string `lyra:"ignore"`
		Create_option        string
		Disk_size_gb         *int64
		Encryption_settings  *[]Managed_disk__encryption_settings
		Image_reference_id   *string
		Location             string
		Name                 string
		Os_type              *string
		Resource_group_name  string
		Source_resource_id   *string
		Source_uri           *string
		Storage_account_type string
		Tags                 *map[string]string
		Zones                *[]string
	}

	Management_group struct {
		Management_groupID         *string `lyra:"ignore"`
		Display_name               *string
		Group_id                   *string
		Parent_management_group_id *string
		Subscription_ids           *[]string
	}

	Management_lock struct {
		Management_lockID *string `lyra:"ignore"`
		Lock_level        string
		Name              string
		Notes             *string
		Scope             string
	}

	Mariadb_database struct {
		Mariadb_databaseID  *string `lyra:"ignore"`
		Charset             string
		Collation           string
		Name                string
		Resource_group_name string
		Server_name         string
	}

	Mariadb_server struct {
		Mariadb_serverID             *string `lyra:"ignore"`
		Administrator_login          string
		Administrator_login_password string
		Fqdn                         *string
		Location                     string
		Name                         string
		Resource_group_name          string
		Sku                          []Mariadb_server__sku
		Ssl_enforcement              string
		Storage_profile              []Mariadb_server__storage_profile
		Tags                         *map[string]string
		Version                      string
	}

	Metric_alertrule struct {
		Metric_alertruleID  *string `lyra:"ignore"`
		Aggregation         string
		Description         *string
		Email_action        *[]Metric_alertrule__email_action
		Enabled             *bool
		Location            string
		Metric_name         string
		Name                string
		Operator            string
		Period              string
		Resource_group_name string
		Resource_id         string
		Tags                *map[string]string
		Threshold           float64
		Webhook_action      *[]Metric_alertrule__webhook_action
	}

	Monitor_action_group struct {
		Monitor_action_groupID *string `lyra:"ignore"`
		Email_receiver         *[]Monitor_action_group__email_receiver
		Enabled                *bool
		Name                   string
		Resource_group_name    string
		Short_name             string
		Sms_receiver           *[]Monitor_action_group__sms_receiver
		Tags                   *map[string]string
		Webhook_receiver       *[]Monitor_action_group__webhook_receiver
	}

	Monitor_activity_log_alert struct {
		Monitor_activity_log_alertID *string `lyra:"ignore"`
		Action                       *[]Monitor_activity_log_alert__action
		Criteria                     []Monitor_activity_log_alert__criteria
		Description                  *string
		Enabled                      *bool
		Name                         string
		Resource_group_name          string
		Scopes                       []string
		Tags                         *map[string]string
	}

	Monitor_diagnostic_setting struct {
		Monitor_diagnostic_settingID   *string `lyra:"ignore"`
		Eventhub_authorization_rule_id *string
		Eventhub_name                  *string
		Log                            *[]Monitor_diagnostic_setting__log
		Log_analytics_workspace_id     *string
		Metric                         *[]Monitor_diagnostic_setting__metric
		Name                           string
		Storage_account_id             *string
		Target_resource_id             string
	}

	Monitor_log_profile struct {
		Monitor_log_profileID *string `lyra:"ignore"`
		Categories            []string
		Locations             []string
		Name                  string
		Retention_policy      []Monitor_log_profile__retention_policy
		Servicebus_rule_id    *string
		Storage_account_id    *string
	}

	Monitor_metric_alert struct {
		Monitor_metric_alertID *string `lyra:"ignore"`
		Action                 *[]Monitor_metric_alert__action
		Auto_mitigate          *bool
		Criteria               []Monitor_metric_alert__criteria
		Description            *string
		Enabled                *bool
		Frequency              *string
		Name                   string
		Resource_group_name    string
		Scopes                 []string
		Severity               *int64
		Tags                   *map[string]string
		Window_size            *string
	}

	Mssql_elasticpool struct {
		Mssql_elasticpoolID     *string `lyra:"ignore"`
		Elastic_pool_properties *[]Mssql_elasticpool__elastic_pool_properties
		Location                string
		Max_size_bytes          *int64
		Name                    string
		Per_database_settings   []Mssql_elasticpool__per_database_settings
		Resource_group_name     string
		Server_name             string
		Sku                     []Mssql_elasticpool__sku
		Tags                    *map[string]string
		Zone_redundant          *bool
	}

	Mysql_configuration struct {
		Mysql_configurationID *string `lyra:"ignore"`
		Name                  string
		Resource_group_name   string
		Server_name           string
		Value                 string
	}

	Mysql_database struct {
		Mysql_databaseID    *string `lyra:"ignore"`
		Charset             string
		Collation           string
		Name                string
		Resource_group_name string
		Server_name         string
	}

	Mysql_firewall_rule struct {
		Mysql_firewall_ruleID *string `lyra:"ignore"`
		End_ip_address        string
		Name                  string
		Resource_group_name   string
		Server_name           string
		Start_ip_address      string
	}

	Mysql_server struct {
		Mysql_serverID               *string `lyra:"ignore"`
		Administrator_login          string
		Administrator_login_password string
		Fqdn                         *string
		Location                     string
		Name                         string
		Resource_group_name          string
		Sku                          []Mysql_server__sku
		Ssl_enforcement              string
		Storage_profile              []Mysql_server__storage_profile
		Tags                         *map[string]string
		Version                      string
	}

	Mysql_virtual_network_rule struct {
		Mysql_virtual_network_ruleID *string `lyra:"ignore"`
		Name                         string
		Resource_group_name          string
		Server_name                  string
		Subnet_id                    string
	}

	Network_interface struct {
		Network_interfaceID           *string `lyra:"ignore"`
		Applied_dns_servers           *[]string
		Dns_servers                   *[]string
		Enable_accelerated_networking *bool
		Enable_ip_forwarding          *bool
		Internal_dns_name_label       *string
		Internal_fqdn                 *string
		Ip_configuration              []Network_interface__ip_configuration
		Location                      string
		Mac_address                   *string
		Name                          string
		Network_security_group_id     *string
		Private_ip_address            *string
		Private_ip_addresses          *[]string
		Resource_group_name           string
		Tags                          *map[string]string
		Virtual_machine_id            *string
	}

	Network_interface_application_gateway_backend_address_pool_association struct {
		Network_interface_application_gateway_backend_address_pool_associationID *string `lyra:"ignore"`
		Backend_address_pool_id                                                  string
		Ip_configuration_name                                                    string
		Network_interface_id                                                     string
	}

	Network_interface_backend_address_pool_association struct {
		Network_interface_backend_address_pool_associationID *string `lyra:"ignore"`
		Backend_address_pool_id                              string
		Ip_configuration_name                                string
		Network_interface_id                                 string
	}

	Network_interface_nat_rule_association struct {
		Network_interface_nat_rule_associationID *string `lyra:"ignore"`
		Ip_configuration_name                    string
		Nat_rule_id                              string
		Network_interface_id                     string
	}

	Network_security_group struct {
		Network_security_groupID *string `lyra:"ignore"`
		Location                 string
		Name                     string
		Resource_group_name      string
		Security_rule            *[]Network_security_group__security_rule
		Tags                     *map[string]string
	}

	Network_security_rule struct {
		Network_security_ruleID                    *string `lyra:"ignore"`
		Access                                     string
		Description                                *string
		Destination_address_prefix                 *string
		Destination_address_prefixes               *[]string
		Destination_application_security_group_ids *[]string
		Destination_port_range                     *string
		Destination_port_ranges                    *[]string
		Direction                                  string
		Name                                       string
		Network_security_group_name                string
		Priority                                   int64
		Protocol                                   string
		Resource_group_name                        string
		Source_address_prefix                      *string
		Source_address_prefixes                    *[]string
		Source_application_security_group_ids      *[]string
		Source_port_range                          *string
		Source_port_ranges                         *[]string
	}

	Network_watcher struct {
		Network_watcherID   *string `lyra:"ignore"`
		Location            string
		Name                string
		Resource_group_name string
		Tags                *map[string]string
	}

	Notification_hub struct {
		Notification_hubID  *string `lyra:"ignore"`
		Apns_credential     *[]Notification_hub__apns_credential
		Gcm_credential      *[]Notification_hub__gcm_credential
		Location            string
		Name                string
		Namespace_name      string
		Resource_group_name string
	}

	Notification_hub_authorization_rule struct {
		Notification_hub_authorization_ruleID *string `lyra:"ignore"`
		Listen                                *bool
		Manage                                *bool
		Name                                  string
		Namespace_name                        string
		Notification_hub_name                 string
		Primary_access_key                    *string
		Resource_group_name                   string
		Secondary_access_key                  *string
		Send                                  *bool
	}

	Notification_hub_namespace struct {
		Notification_hub_namespaceID *string `lyra:"ignore"`
		Enabled                      *bool
		Location                     string
		Name                         string
		Namespace_type               string
		Resource_group_name          string
		Servicebus_endpoint          *string
		Sku                          []Notification_hub_namespace__sku
	}

	Packet_capture struct {
		Packet_captureID          *string `lyra:"ignore"`
		Filter                    *[]Packet_capture__filter
		Maximum_bytes_per_packet  *int64
		Maximum_bytes_per_session *int64
		Maximum_capture_duration  *int64
		Name                      string
		Network_watcher_name      string
		Resource_group_name       string
		Storage_location          []Packet_capture__storage_location
		Target_resource_id        string
	}

	Policy_assignment struct {
		Policy_assignmentID  *string `lyra:"ignore"`
		Description          *string
		Display_name         *string
		Identity             *[]Policy_assignment__identity
		Location             *string
		Name                 string
		Not_scopes           *[]string
		Parameters           *string
		Policy_definition_id string
		Scope                string
	}

	Policy_definition struct {
		Policy_definitionID *string `lyra:"ignore"`
		Description         *string
		Display_name        string
		Management_group_id *string
		Metadata            *string
		Mode                string
		Name                string
		Parameters          *string
		Policy_rule         *string
		Policy_type         string
	}

	Policy_set_definition struct {
		Policy_set_definitionID *string `lyra:"ignore"`
		Description             *string
		Display_name            string
		Management_group_id     *string
		Metadata                *string
		Name                    string
		Parameters              *string
		Policy_definitions      *string
		Policy_type             string
	}

	Postgresql_configuration struct {
		Postgresql_configurationID *string `lyra:"ignore"`
		Name                       string
		Resource_group_name        string
		Server_name                string
		Value                      string
	}

	Postgresql_database struct {
		Postgresql_databaseID *string `lyra:"ignore"`
		Charset               string
		Collation             string
		Name                  string
		Resource_group_name   string
		Server_name           string
	}

	Postgresql_firewall_rule struct {
		Postgresql_firewall_ruleID *string `lyra:"ignore"`
		End_ip_address             string
		Name                       string
		Resource_group_name        string
		Server_name                string
		Start_ip_address           string
	}

	Postgresql_server struct {
		Postgresql_serverID          *string `lyra:"ignore"`
		Administrator_login          string
		Administrator_login_password string
		Fqdn                         *string
		Location                     string
		Name                         string
		Resource_group_name          string
		Sku                          []Postgresql_server__sku
		Ssl_enforcement              string
		Storage_profile              []Postgresql_server__storage_profile
		Tags                         *map[string]string
		Version                      string
	}

	Postgresql_virtual_network_rule struct {
		Postgresql_virtual_network_ruleID    *string `lyra:"ignore"`
		Ignore_missing_vnet_service_endpoint *bool
		Name                                 string
		Resource_group_name                  string
		Server_name                          string
		Subnet_id                            string
	}

	Public_ip struct {
		Public_ipID                  *string `lyra:"ignore"`
		Allocation_method            *string
		Domain_name_label            *string
		Fqdn                         *string
		Idle_timeout_in_minutes      *int64
		Ip_address                   *string
		Ip_version                   *string
		Location                     string
		Name                         string
		Public_ip_address_allocation *string
		Resource_group_name          string
		Reverse_fqdn                 *string
		Sku                          *string
		Tags                         *map[string]string
		Zones                        *[]string
	}

	Recovery_services_protected_vm struct {
		Recovery_services_protected_vmID *string `lyra:"ignore"`
		Backup_policy_id                 string
		Recovery_vault_name              string
		Resource_group_name              string
		Source_vm_id                     string
		Tags                             *map[string]string
	}

	Recovery_services_protection_policy_vm struct {
		Recovery_services_protection_policy_vmID *string `lyra:"ignore"`
		Backup                                   []Recovery_services_protection_policy_vm__backup
		Name                                     string
		Recovery_vault_name                      string
		Resource_group_name                      string
		Retention_daily                          *[]Recovery_services_protection_policy_vm__retention_daily
		Retention_monthly                        *[]Recovery_services_protection_policy_vm__retention_monthly
		Retention_weekly                         *[]Recovery_services_protection_policy_vm__retention_weekly
		Retention_yearly                         *[]Recovery_services_protection_policy_vm__retention_yearly
		Tags                                     *map[string]string
		Timezone                                 *string
	}

	Recovery_services_vault struct {
		Recovery_services_vaultID *string `lyra:"ignore"`
		Location                  string
		Name                      string
		Resource_group_name       string
		Sku                       string
		Tags                      *map[string]string
	}

	Redis_cache struct {
		Redis_cacheID             *string `lyra:"ignore"`
		Capacity                  int64
		Enable_non_ssl_port       *bool
		Family                    string
		Hostname                  *string
		Location                  string
		Name                      string
		Patch_schedule            *[]Redis_cache__patch_schedule
		Port                      *int64
		Primary_access_key        *string
		Private_static_ip_address *string
		Redis_configuration       []Redis_cache__redis_configuration
		Resource_group_name       string
		Secondary_access_key      *string
		Shard_count               *int64
		Sku_name                  string
		Ssl_port                  *int64
		Subnet_id                 *string
		Tags                      *map[string]string
		Zones                     *[]string
	}

	Redis_firewall_rule struct {
		Redis_firewall_ruleID *string `lyra:"ignore"`
		End_ip                string
		Name                  string
		Redis_cache_name      string
		Resource_group_name   string
		Start_ip              string
	}

	Relay_namespace struct {
		Relay_namespaceID           *string `lyra:"ignore"`
		Location                    string
		Metric_id                   *string
		Name                        string
		Primary_connection_string   *string
		Primary_key                 *string
		Resource_group_name         string
		Secondary_connection_string *string
		Secondary_key               *string
		Sku                         []Relay_namespace__sku
		Tags                        *map[string]string
	}

	Resource_group struct {
		Resource_groupID *string `lyra:"ignore"`
		Location         string
		Name             string
		Tags             *map[string]string
	}

	Role_assignment struct {
		Role_assignmentID    *string `lyra:"ignore"`
		Name                 *string
		Principal_id         string
		Role_definition_id   *string
		Role_definition_name *string
		Scope                string
	}

	Role_definition struct {
		Role_definitionID  *string `lyra:"ignore"`
		Assignable_scopes  []string
		Description        *string
		Name               string
		Permissions        []Role_definition__permissions
		Role_definition_id *string
		Scope              string
	}

	Route struct {
		RouteID                *string `lyra:"ignore"`
		Address_prefix         string
		Name                   string
		Next_hop_in_ip_address *string
		Next_hop_type          string
		Resource_group_name    string
		Route_table_name       string
	}

	Route_table struct {
		Route_tableID                 *string `lyra:"ignore"`
		Disable_bgp_route_propagation *bool
		Location                      string
		Name                          string
		Resource_group_name           string
		Route                         *[]Route_table__route
		Subnets                       *[]string
		Tags                          *map[string]string
	}

	Scheduler_job struct {
		Scheduler_jobID            *string `lyra:"ignore"`
		Action_storage_queue       *[]Scheduler_job__action_storage_queue
		Action_web                 *[]Scheduler_job__action_web
		Error_action_storage_queue *[]Scheduler_job__error_action_storage_queue
		Error_action_web           *[]Scheduler_job__error_action_web
		Job_collection_name        string
		Name                       string
		Recurrence                 *[]Scheduler_job__recurrence
		Resource_group_name        string
		Retry                      *[]Scheduler_job__retry
		Start_time                 *string
		State                      *string
	}

	Scheduler_job_collection struct {
		Scheduler_job_collectionID *string `lyra:"ignore"`
		Location                   string
		Name                       string
		Quota                      *[]Scheduler_job_collection__quota
		Resource_group_name        string
		Sku                        string
		State                      *string
		Tags                       *map[string]string
	}

	Search_service struct {
		Search_serviceID    *string `lyra:"ignore"`
		Location            string
		Name                string
		Partition_count     *int64
		Primary_key         *string
		Replica_count       *int64
		Resource_group_name string
		Secondary_key       *string
		Sku                 string
		Tags                *map[string]string
	}

	Security_center_contact struct {
		Security_center_contactID *string `lyra:"ignore"`
		Alert_notifications       bool
		Alerts_to_admins          bool
		Email                     string
		Phone                     string
	}

	Security_center_subscription_pricing struct {
		Security_center_subscription_pricingID *string `lyra:"ignore"`
		Tier                                   string
	}

	Security_center_workspace struct {
		Security_center_workspaceID *string `lyra:"ignore"`
		Scope                       string
		Workspace_id                string
	}

	Service_fabric_cluster struct {
		Service_fabric_clusterID      *string `lyra:"ignore"`
		Add_on_features               *[]string
		Azure_active_directory        *[]Service_fabric_cluster__azure_active_directory
		Certificate                   *[]Service_fabric_cluster__certificate
		Client_certificate_thumbprint *[]Service_fabric_cluster__client_certificate_thumbprint
		Cluster_code_version          *string
		Cluster_endpoint              *string
		Diagnostics_config            *[]Service_fabric_cluster__diagnostics_config
		Fabric_settings               *[]Service_fabric_cluster__fabric_settings
		Location                      string
		Management_endpoint           string
		Name                          string
		Node_type                     []Service_fabric_cluster__node_type
		Reliability_level             string
		Resource_group_name           string
		Reverse_proxy_certificate     *[]Service_fabric_cluster__reverse_proxy_certificate
		Tags                          *map[string]string
		Upgrade_mode                  string
		Vm_image                      string
	}

	Servicebus_namespace struct {
		Servicebus_namespaceID              *string `lyra:"ignore"`
		Capacity                            *int64
		Default_primary_connection_string   *string
		Default_primary_key                 *string
		Default_secondary_connection_string *string
		Default_secondary_key               *string
		Location                            string
		Name                                string
		Resource_group_name                 string
		Sku                                 string
		Tags                                *map[string]string
	}

	Servicebus_namespace_authorization_rule struct {
		Servicebus_namespace_authorization_ruleID *string `lyra:"ignore"`
		Listen                                    *bool
		Manage                                    *bool
		Name                                      string
		Namespace_name                            string
		Primary_connection_string                 *string
		Primary_key                               *string
		Resource_group_name                       string
		Secondary_connection_string               *string
		Secondary_key                             *string
		Send                                      *bool
	}

	Servicebus_queue struct {
		Servicebus_queueID                      *string `lyra:"ignore"`
		Auto_delete_on_idle                     *string
		Dead_lettering_on_message_expiration    *bool
		Default_message_ttl                     *string
		Duplicate_detection_history_time_window *string
		Enable_batched_operations               *bool
		Enable_express                          *bool
		Enable_partitioning                     *bool
		Location                                *string
		Lock_duration                           *string
		Max_delivery_count                      *int64
		Max_size_in_megabytes                   *int64
		Name                                    string
		Namespace_name                          string
		Requires_duplicate_detection            *bool
		Requires_session                        *bool
		Resource_group_name                     string
		Support_ordering                        *bool
	}

	Servicebus_queue_authorization_rule struct {
		Servicebus_queue_authorization_ruleID *string `lyra:"ignore"`
		Listen                                *bool
		Manage                                *bool
		Name                                  string
		Namespace_name                        string
		Primary_connection_string             *string
		Primary_key                           *string
		Queue_name                            string
		Resource_group_name                   string
		Secondary_connection_string           *string
		Secondary_key                         *string
		Send                                  *bool
	}

	Servicebus_subscription struct {
		Servicebus_subscriptionID                      *string `lyra:"ignore"`
		Auto_delete_on_idle                            *string
		Dead_lettering_on_filter_evaluation_exceptions *bool
		Dead_lettering_on_message_expiration           *bool
		Default_message_ttl                            *string
		Enable_batched_operations                      *bool
		Forward_to                                     *string
		Location                                       *string
		Lock_duration                                  *string
		Max_delivery_count                             int64
		Name                                           string
		Namespace_name                                 string
		Requires_session                               *bool
		Resource_group_name                            string
		Topic_name                                     string
	}

	Servicebus_subscription_rule struct {
		Servicebus_subscription_ruleID *string `lyra:"ignore"`
		Action                         *string
		Correlation_filter             *[]Servicebus_subscription_rule__correlation_filter
		Filter_type                    string
		Name                           string
		Namespace_name                 string
		Resource_group_name            string
		Sql_filter                     *string
		Subscription_name              string
		Topic_name                     string
	}

	Servicebus_topic struct {
		Servicebus_topicID                          *string `lyra:"ignore"`
		Auto_delete_on_idle                         *string
		Default_message_ttl                         *string
		Duplicate_detection_history_time_window     *string
		Enable_batched_operations                   *bool
		Enable_express                              *bool
		Enable_filtering_messages_before_publishing *bool
		Enable_partitioning                         *bool
		Location                                    *string
		Max_size_in_megabytes                       *int64
		Name                                        string
		Namespace_name                              string
		Requires_duplicate_detection                *bool
		Resource_group_name                         string
		Status                                      *string
		Support_ordering                            *bool
	}

	Servicebus_topic_authorization_rule struct {
		Servicebus_topic_authorization_ruleID *string `lyra:"ignore"`
		Listen                                *bool
		Manage                                *bool
		Name                                  string
		Namespace_name                        string
		Primary_connection_string             *string
		Primary_key                           *string
		Resource_group_name                   string
		Secondary_connection_string           *string
		Secondary_key                         *string
		Send                                  *bool
		Topic_name                            string
	}

	Shared_image struct {
		Shared_imageID        *string `lyra:"ignore"`
		Description           *string
		Eula                  *string
		Gallery_name          string
		Identifier            []Shared_image__identifier
		Location              string
		Name                  string
		Os_type               string
		Privacy_statement_uri *string
		Release_note_uri      *string
		Resource_group_name   string
		Tags                  *map[string]string
	}

	Shared_image_gallery struct {
		Shared_image_galleryID *string `lyra:"ignore"`
		Description            *string
		Location               string
		Name                   string
		Resource_group_name    string
		Tags                   *map[string]string
		Unique_name            *string
	}

	Shared_image_version struct {
		Shared_image_versionID *string `lyra:"ignore"`
		Exclude_from_latest    *bool
		Gallery_name           string
		Image_name             string
		Location               string
		Managed_image_id       string
		Name                   string
		Resource_group_name    string
		Tags                   *map[string]string
		Target_region          []Shared_image_version__target_region
	}

	Signalr_service struct {
		Signalr_serviceID   *string `lyra:"ignore"`
		Hostname            *string
		Ip_address          *string
		Location            string
		Name                string
		Public_port         *int64
		Resource_group_name string
		Server_port         *int64
		Sku                 []Signalr_service__sku
		Tags                *map[string]string
	}

	Snapshot struct {
		SnapshotID          *string `lyra:"ignore"`
		Create_option       string
		Disk_size_gb        *int64
		Encryption_settings *[]Snapshot__encryption_settings
		Location            string
		Name                string
		Resource_group_name string
		Source_resource_id  *string
		Source_uri          *string
		Storage_account_id  *string
		Tags                *map[string]string
	}

	Sql_active_directory_administrator struct {
		Sql_active_directory_administratorID *string `lyra:"ignore"`
		Login                                string
		Object_id                            string
		Resource_group_name                  string
		Server_name                          string
		Tenant_id                            string
	}

	Sql_database struct {
		Sql_databaseID                   *string `lyra:"ignore"`
		Collation                        *string
		Create_mode                      *string
		Creation_date                    *string
		Default_secondary_location       *string
		Edition                          *string
		Elastic_pool_name                *string
		Encryption                       *string
		Import                           *[]Sql_database__import
		Location                         string
		Max_size_bytes                   *string
		Name                             string
		Requested_service_objective_id   *string
		Requested_service_objective_name *string
		Resource_group_name              string
		Restore_point_in_time            *string
		Server_name                      string
		Source_database_deletion_date    *string
		Source_database_id               *string
		Tags                             *map[string]string
		Threat_detection_policy          *[]Sql_database__threat_detection_policy
	}

	Sql_elasticpool struct {
		Sql_elasticpoolID   *string `lyra:"ignore"`
		Creation_date       *string
		Db_dtu_max          *int64
		Db_dtu_min          *int64
		Dtu                 int64
		Edition             string
		Location            string
		Name                string
		Pool_size           *int64
		Resource_group_name string
		Server_name         string
		Tags                *map[string]string
	}

	Sql_firewall_rule struct {
		Sql_firewall_ruleID *string `lyra:"ignore"`
		End_ip_address      string
		Name                string
		Resource_group_name string
		Server_name         string
		Start_ip_address    string
	}

	Sql_server struct {
		Sql_serverID                 *string `lyra:"ignore"`
		Administrator_login          string
		Administrator_login_password string
		Fully_qualified_domain_name  *string
		Location                     string
		Name                         string
		Resource_group_name          string
		Tags                         *map[string]string
		Version                      string
	}

	Sql_virtual_network_rule struct {
		Sql_virtual_network_ruleID           *string `lyra:"ignore"`
		Ignore_missing_vnet_service_endpoint *bool
		Name                                 string
		Resource_group_name                  string
		Server_name                          string
		Subnet_id                            string
	}

	Storage_account struct {
		Storage_accountID                *string `lyra:"ignore"`
		Access_tier                      *string
		Account_encryption_source        *string
		Account_kind                     *string
		Account_replication_type         string
		Account_tier                     string
		Account_type                     *string
		Custom_domain                    *[]Storage_account__custom_domain
		Enable_blob_encryption           *bool
		Enable_file_encryption           *bool
		Enable_https_traffic_only        *bool
		Identity                         *[]Storage_account__identity
		Location                         string
		Name                             string
		Network_rules                    *[]Storage_account__network_rules
		Primary_access_key               *string
		Primary_blob_connection_string   *string
		Primary_blob_endpoint            *string
		Primary_connection_string        *string
		Primary_file_endpoint            *string
		Primary_location                 *string
		Primary_queue_endpoint           *string
		Primary_table_endpoint           *string
		Resource_group_name              string
		Secondary_access_key             *string
		Secondary_blob_connection_string *string
		Secondary_blob_endpoint          *string
		Secondary_connection_string      *string
		Secondary_location               *string
		Secondary_queue_endpoint         *string
		Secondary_table_endpoint         *string
		Tags                             *map[string]string
	}

	Storage_blob struct {
		Storage_blobID         *string `lyra:"ignore"`
		Attempts               *int64
		Content_type           *string
		Name                   string
		Parallelism            *int64
		Resource_group_name    string
		Size                   *int64
		Source                 *string
		Source_uri             *string
		Storage_account_name   string
		Storage_container_name string
		Type                   *string
		Url                    *string
	}

	Storage_container struct {
		Storage_containerID   *string `lyra:"ignore"`
		Container_access_type *string
		Name                  string
		Properties            *map[string]string
		Resource_group_name   string
		Storage_account_name  string
	}

	Storage_queue struct {
		Storage_queueID      *string `lyra:"ignore"`
		Name                 string
		Resource_group_name  string
		Storage_account_name string
	}

	Storage_share struct {
		Storage_shareID      *string `lyra:"ignore"`
		Name                 string
		Quota                *int64
		Resource_group_name  string
		Storage_account_name string
		Url                  *string
	}

	Storage_table struct {
		Storage_tableID      *string `lyra:"ignore"`
		Name                 string
		Resource_group_name  string
		Storage_account_name string
	}

	Subnet struct {
		SubnetID                  *string `lyra:"ignore"`
		Address_prefix            string
		Delegation                *[]Subnet__delegation
		Ip_configurations         *[]string
		Name                      string
		Network_security_group_id *string
		Resource_group_name       string
		Route_table_id            *string
		Service_endpoints         *[]string
		Virtual_network_name      string
	}

	Subnet_network_security_group_association struct {
		Subnet_network_security_group_associationID *string `lyra:"ignore"`
		Network_security_group_id                   string
		Subnet_id                                   string
	}

	Subnet_route_table_association struct {
		Subnet_route_table_associationID *string `lyra:"ignore"`
		Route_table_id                   string
		Subnet_id                        string
	}

	Template_deployment struct {
		Template_deploymentID *string `lyra:"ignore"`
		Deployment_mode       string
		Name                  string
		Outputs               *map[string]string
		Parameters            *map[string]string
		Parameters_body       *string
		Resource_group_name   string
		Template_body         *string
	}

	Traffic_manager_endpoint struct {
		Traffic_manager_endpointID *string `lyra:"ignore"`
		Endpoint_location          *string
		Endpoint_monitor_status    *string
		Endpoint_status            *string
		Geo_mappings               *[]string
		Min_child_endpoints        *int64
		Name                       string
		Priority                   *int64
		Profile_name               string
		Resource_group_name        string
		Target                     *string
		Target_resource_id         *string
		Type                       string
		Weight                     *int64
	}

	Traffic_manager_profile struct {
		Traffic_manager_profileID *string `lyra:"ignore"`
		Dns_config                []Traffic_manager_profile__dns_config
		Fqdn                      *string
		Monitor_config            []Traffic_manager_profile__monitor_config
		Name                      string
		Profile_status            *string
		Resource_group_name       string
		Tags                      *map[string]string
		Traffic_routing_method    string
	}

	User_assigned_identity struct {
		User_assigned_identityID *string `lyra:"ignore"`
		Client_id                *string
		Location                 string
		Name                     string
		Principal_id             *string
		Resource_group_name      string
		Tags                     *map[string]string
	}

	Virtual_machine struct {
		Virtual_machineID                *string `lyra:"ignore"`
		Availability_set_id              *string
		Boot_diagnostics                 *[]Virtual_machine__boot_diagnostics
		Delete_data_disks_on_termination *bool
		Delete_os_disk_on_termination    *bool
		Identity                         *[]Virtual_machine__identity
		License_type                     *string
		Location                         string
		Name                             string
		Network_interface_ids            []string
		Os_profile                       *[]Virtual_machine__os_profile
		Os_profile_linux_config          *[]Virtual_machine__os_profile_linux_config
		Os_profile_secrets               *[]Virtual_machine__os_profile_secrets
		Os_profile_windows_config        *[]Virtual_machine__os_profile_windows_config
		Plan                             *[]Virtual_machine__plan
		Primary_network_interface_id     *string
		Resource_group_name              string
		Storage_data_disk                *[]Virtual_machine__storage_data_disk
		Storage_image_reference          *[]Virtual_machine__storage_image_reference
		Storage_os_disk                  []Virtual_machine__storage_os_disk
		Tags                             *map[string]string
		Vm_size                          string
		Zones                            *[]string
	}

	Virtual_machine_data_disk_attachment struct {
		Virtual_machine_data_disk_attachmentID *string `lyra:"ignore"`
		Caching                                string
		Create_option                          *string
		Lun                                    int64
		Managed_disk_id                        string
		Virtual_machine_id                     string
		Write_accelerator_enabled              *bool
	}

	Virtual_machine_extension struct {
		Virtual_machine_extensionID *string `lyra:"ignore"`
		Auto_upgrade_minor_version  *bool
		Location                    string
		Name                        string
		Protected_settings          *string
		Publisher                   string
		Resource_group_name         string
		Settings                    *string
		Tags                        *map[string]string
		Type                        string
		Type_handler_version        string
		Virtual_machine_name        string
	}

	Virtual_machine_scale_set struct {
		Virtual_machine_scale_setID     *string `lyra:"ignore"`
		Automatic_os_upgrade            *bool
		Boot_diagnostics                *[]Virtual_machine_scale_set__boot_diagnostics
		Eviction_policy                 *string
		Extension                       *[]Virtual_machine_scale_set__extension
		Health_probe_id                 *string
		Identity                        *[]Virtual_machine_scale_set__identity
		License_type                    *string
		Location                        string
		Name                            string
		Network_profile                 []Virtual_machine_scale_set__network_profile
		Os_profile                      []Virtual_machine_scale_set__os_profile
		Os_profile_linux_config         *[]Virtual_machine_scale_set__os_profile_linux_config
		Os_profile_secrets              *[]Virtual_machine_scale_set__os_profile_secrets
		Os_profile_windows_config       *[]Virtual_machine_scale_set__os_profile_windows_config
		Overprovision                   *bool
		Plan                            *[]Virtual_machine_scale_set__plan
		Priority                        *string
		Resource_group_name             string
		Rolling_upgrade_policy          *[]Virtual_machine_scale_set__rolling_upgrade_policy
		Single_placement_group          *bool
		Sku                             []Virtual_machine_scale_set__sku
		Storage_profile_data_disk       *[]Virtual_machine_scale_set__storage_profile_data_disk
		Storage_profile_image_reference *[]Virtual_machine_scale_set__storage_profile_image_reference
		Storage_profile_os_disk         []Virtual_machine_scale_set__storage_profile_os_disk
		Tags                            *map[string]string
		Upgrade_policy_mode             string
		Zones                           *[]string
	}

	Virtual_network struct {
		Virtual_networkID   *string `lyra:"ignore"`
		Address_space       []string
		Dns_servers         *[]string
		Location            string
		Name                string
		Resource_group_name string
		Subnet              *[]Virtual_network__subnet
		Tags                *map[string]string
	}

	Virtual_network_gateway struct {
		Virtual_network_gatewayID        *string `lyra:"ignore"`
		Active_active                    *bool
		Bgp_settings                     *[]Virtual_network_gateway__bgp_settings
		Default_local_network_gateway_id *string
		Enable_bgp                       *bool
		Ip_configuration                 []Virtual_network_gateway__ip_configuration
		Location                         string
		Name                             string
		Resource_group_name              string
		Sku                              string
		Tags                             *map[string]string
		Type                             string
		Vpn_client_configuration         *[]Virtual_network_gateway__vpn_client_configuration
		Vpn_type                         *string
	}

	Virtual_network_gateway_connection struct {
		Virtual_network_gateway_connectionID *string `lyra:"ignore"`
		Authorization_key                    *string
		Enable_bgp                           *bool
		Express_route_circuit_id             *string
		Ipsec_policy                         *[]Virtual_network_gateway_connection__ipsec_policy
		Local_network_gateway_id             *string
		Location                             string
		Name                                 string
		Peer_virtual_network_gateway_id      *string
		Resource_group_name                  string
		Routing_weight                       *int64
		Shared_key                           *string
		Tags                                 *map[string]string
		Type                                 string
		Use_policy_based_traffic_selectors   *bool
		Virtual_network_gateway_id           string
	}

	Virtual_network_peering struct {
		Virtual_network_peeringID    *string `lyra:"ignore"`
		Allow_forwarded_traffic      *bool
		Allow_gateway_transit        *bool
		Allow_virtual_network_access *bool
		Name                         string
		Remote_virtual_network_id    string
		Resource_group_name          string
		Use_remote_gateways          *bool
		Virtual_network_name         string
	}

	Api_management__additional_location struct {
		Gateway_regional_url *string
		Location             string
		Public_ip_addresses  *[]string
	}

	Api_management__certificate struct {
		Certificate_password string
		Encoded_certificate  string
		Store_name           string
	}

	Api_management__hostname_configuration__management struct {
		Certificate                  *string
		Certificate_password         *string
		Host_name                    string
		Key_vault_id                 *string
		Negotiate_client_certificate *bool
	}

	Api_management__hostname_configuration__portal struct {
		Certificate                  *string
		Certificate_password         *string
		Host_name                    string
		Key_vault_id                 *string
		Negotiate_client_certificate *bool
	}

	Api_management__hostname_configuration__proxy struct {
		Certificate                  *string
		Certificate_password         *string
		Default_ssl_binding          *bool
		Host_name                    string
		Key_vault_id                 *string
		Negotiate_client_certificate *bool
	}

	Api_management__hostname_configuration__scm struct {
		Certificate                  *string
		Certificate_password         *string
		Host_name                    string
		Key_vault_id                 *string
		Negotiate_client_certificate *bool
	}

	Api_management__hostname_configuration struct {
		Management *[]Api_management__hostname_configuration__management
		Portal     *[]Api_management__hostname_configuration__portal
		Proxy      *[]Api_management__hostname_configuration__proxy
		Scm        *[]Api_management__hostname_configuration__scm
	}

	Api_management__identity struct {
		Principal_id *string
		Tenant_id    *string
		Type         string
	}

	Api_management__security struct {
		Disable_backend_ssl30      *bool
		Disable_backend_tls10      *bool
		Disable_backend_tls11      *bool
		Disable_frontend_ssl30     *bool
		Disable_frontend_tls10     *bool
		Disable_frontend_tls11     *bool
		Disable_triple_des_chipers *bool
	}

	Api_management__sku struct {
		Capacity int64
		Name     string
	}

	App_service__connection_string struct {
		Name  string
		Type  string
		Value string
	}

	App_service__identity struct {
		Principal_id *string
		Tenant_id    *string
		Type         string
	}

	App_service__site_config__ip_restriction struct {
		Ip_address  string
		Subnet_mask *string
	}

	App_service__site_config struct {
		Always_on                 *bool
		App_command_line          *string
		Default_documents         *[]string
		Dotnet_framework_version  *string
		Ftps_state                *string
		Http2_enabled             *bool
		Ip_restriction            *[]App_service__site_config__ip_restriction
		Java_container            *string
		Java_container_version    *string
		Java_version              *string
		Linux_fx_version          *string
		Local_mysql_enabled       *bool
		Managed_pipeline_mode     *string
		Min_tls_version           *string
		Php_version               *string
		Python_version            *string
		Remote_debugging_enabled  *bool
		Remote_debugging_version  *string
		Scm_type                  *string
		Use_32_bit_worker_process *bool
		Virtual_network_name      *string
		Websockets_enabled        *bool
	}

	App_service__site_credential struct {
		Password *string
		Username *string
	}

	App_service__source_control struct {
		Branch   *string
		Repo_url *string
	}

	App_service_plan__properties struct {
		App_service_environment_id *string
		Per_site_scaling           *bool
		Reserved                   *bool
	}

	App_service_plan__sku struct {
		Capacity *int64
		Size     string
		Tier     string
	}

	App_service_slot__connection_string struct {
		Name  string
		Type  string
		Value string
	}

	App_service_slot__identity struct {
		Principal_id *string
		Tenant_id    *string
		Type         string
	}

	App_service_slot__site_config__ip_restriction struct {
		Ip_address  string
		Subnet_mask *string
	}

	App_service_slot__site_config struct {
		Always_on                 *bool
		App_command_line          *string
		Default_documents         *[]string
		Dotnet_framework_version  *string
		Ftps_state                *string
		Http2_enabled             *bool
		Ip_restriction            *[]App_service_slot__site_config__ip_restriction
		Java_container            *string
		Java_container_version    *string
		Java_version              *string
		Linux_fx_version          *string
		Local_mysql_enabled       *bool
		Managed_pipeline_mode     *string
		Min_tls_version           *string
		Php_version               *string
		Python_version            *string
		Remote_debugging_enabled  *bool
		Remote_debugging_version  *string
		Scm_type                  *string
		Use_32_bit_worker_process *bool
		Virtual_network_name      *string
		Websockets_enabled        *bool
	}

	Application_gateway__authentication_certificate struct {
		Data string
		Id   *string
		Name string
	}

	Application_gateway__backend_address_pool struct {
		Fqdn_list       *[]string
		Id              *string
		Ip_address_list *[]string
		Name            string
	}

	Application_gateway__backend_http_settings__authentication_certificate struct {
		Id   *string
		Name string
	}

	Application_gateway__backend_http_settings struct {
		Authentication_certificate *[]Application_gateway__backend_http_settings__authentication_certificate
		Cookie_based_affinity      string
		Id                         *string
		Name                       string
		Port                       int64
		Probe_id                   *string
		Probe_name                 *string
		Protocol                   string
		Request_timeout            *int64
	}

	Application_gateway__frontend_ip_configuration struct {
		Id                            *string
		Name                          string
		Private_ip_address            *string
		Private_ip_address_allocation *string
		Public_ip_address_id          *string
		Subnet_id                     *string
	}

	Application_gateway__frontend_port struct {
		Id   *string
		Name string
		Port int64
	}

	Application_gateway__gateway_ip_configuration struct {
		Id        *string
		Name      string
		Subnet_id string
	}

	Application_gateway__http_listener struct {
		Frontend_ip_configuration_id   *string
		Frontend_ip_configuration_name string
		Frontend_port_id               *string
		Frontend_port_name             string
		Host_name                      *string
		Id                             *string
		Name                           string
		Protocol                       string
		Require_sni                    *bool
		Ssl_certificate_id             *string
		Ssl_certificate_name           *string
	}

	Application_gateway__probe__match struct {
		Body        *string
		Status_code *[]string
	}

	Application_gateway__probe struct {
		Host                string
		Id                  *string
		Interval            int64
		Match               *[]Application_gateway__probe__match
		Minimum_servers     *int64
		Name                string
		Path                string
		Protocol            string
		Timeout             int64
		Unhealthy_threshold int64
	}

	Application_gateway__request_routing_rule struct {
		Backend_address_pool_id    *string
		Backend_address_pool_name  *string
		Backend_http_settings_id   *string
		Backend_http_settings_name *string
		Http_listener_id           *string
		Http_listener_name         string
		Id                         *string
		Name                       string
		Rule_type                  string
		Url_path_map_id            *string
		Url_path_map_name          *string
	}

	Application_gateway__sku struct {
		Capacity int64
		Name     string
		Tier     string
	}

	Application_gateway__ssl_certificate struct {
		Data             string
		Id               *string
		Name             string
		Password         string
		Public_cert_data *string
	}

	Application_gateway__url_path_map__path_rule struct {
		Backend_address_pool_id    *string
		Backend_address_pool_name  string
		Backend_http_settings_id   *string
		Backend_http_settings_name string
		Id                         *string
		Name                       string
		Paths                      []string
	}

	Application_gateway__url_path_map struct {
		Default_backend_address_pool_id    *string
		Default_backend_address_pool_name  string
		Default_backend_http_settings_id   *string
		Default_backend_http_settings_name string
		Id                                 *string
		Name                               string
		Path_rule                          []Application_gateway__url_path_map__path_rule
	}

	Application_gateway__waf_configuration struct {
		Enabled          bool
		Firewall_mode    string
		Rule_set_type    *string
		Rule_set_version string
	}

	Automation_account__sku struct {
		Name *string
	}

	Automation_module__module_link__hash struct {
		Algorithm string
		Value     string
	}

	Automation_module__module_link struct {
		Hash *[]Automation_module__module_link__hash
		Uri  string
	}

	Automation_runbook__publish_content_link__hash struct {
		Algorithm string
		Value     string
	}

	Automation_runbook__publish_content_link struct {
		Hash    *[]Automation_runbook__publish_content_link__hash
		Uri     string
		Version *string
	}

	Automation_schedule__monthly_occurrence struct {
		Day        string
		Occurrence int64
	}

	Autoscale_setting__notification__email struct {
		Custom_emails                         *[]string
		Send_to_subscription_administrator    *bool
		Send_to_subscription_co_administrator *bool
	}

	Autoscale_setting__notification__webhook struct {
		Properties  *map[string]string
		Service_uri string
	}

	Autoscale_setting__notification struct {
		Email   *[]Autoscale_setting__notification__email
		Webhook *[]Autoscale_setting__notification__webhook
	}

	Autoscale_setting__profile__capacity struct {
		Default int64
		Maximum int64
		Minimum int64
	}

	Autoscale_setting__profile__fixed_date struct {
		End      string
		Start    string
		Timezone *string
	}

	Autoscale_setting__profile__recurrence struct {
		Days     []string
		Hours    []int64
		Minutes  []int64
		Timezone *string
	}

	Autoscale_setting__profile__rule__metric_trigger struct {
		Metric_name        string
		Metric_resource_id string
		Operator           string
		Statistic          string
		Threshold          float64
		Time_aggregation   string
		Time_grain         string
		Time_window        string
	}

	Autoscale_setting__profile__rule__scale_action struct {
		Cooldown  string
		Direction string
		Type      string
		Value     int64
	}

	Autoscale_setting__profile__rule struct {
		Metric_trigger []Autoscale_setting__profile__rule__metric_trigger
		Scale_action   []Autoscale_setting__profile__rule__scale_action
	}

	Autoscale_setting__profile struct {
		Capacity   []Autoscale_setting__profile__capacity
		Fixed_date *[]Autoscale_setting__profile__fixed_date
		Name       string
		Recurrence *[]Autoscale_setting__profile__recurrence
		Rule       *[]Autoscale_setting__profile__rule
	}

	Batch_pool__auto_scale struct {
		Evaluation_interval *string
		Formula             string
	}

	Batch_pool__fixed_scale struct {
		Resize_timeout            *string
		Target_dedicated_nodes    *int64
		Target_low_priority_nodes *int64
	}

	Batch_pool__start_task__user_identity__auto_user struct {
		Elevation_level *string
		Scope           *string
	}

	Batch_pool__start_task__user_identity struct {
		Auto_user *[]Batch_pool__start_task__user_identity__auto_user
		User_name *string
	}

	Batch_pool__start_task struct {
		Command_line         string
		Environment          *map[string]string
		Max_task_retry_count *int64
		User_identity        []Batch_pool__start_task__user_identity
		Wait_for_success     *bool
	}

	Batch_pool__storage_image_reference struct {
		Id        *string
		Offer     string
		Publisher string
		Sku       string
		Version   string
	}

	Cdn_endpoint__geo_filter struct {
		Action        string
		Country_codes []string
		Relative_path string
	}

	Cdn_endpoint__origin struct {
		Host_name  string
		Http_port  *int64
		Https_port *int64
		Name       string
	}

	Cognitive_account__sku struct {
		Name string
		Tier string
	}

	Container_group__container__ports struct {
		Port     *int64
		Protocol *string
	}

	Container_group__container__volume struct {
		Mount_path           string
		Name                 string
		Read_only            *bool
		Share_name           string
		Storage_account_key  string
		Storage_account_name string
	}

	Container_group__container struct {
		Command                      *string
		Commands                     *[]string
		Cpu                          float64
		Environment_variables        *map[string]string
		Image                        string
		Memory                       float64
		Name                         string
		Port                         *int64
		Ports                        *[]Container_group__container__ports
		Protocol                     *string
		Secure_environment_variables *map[string]string
		Volume                       *[]Container_group__container__volume
	}

	Container_group__image_registry_credential struct {
		Password string
		Server   string
		Username string
	}

	Container_registry__storage_account struct {
		Access_key string
		Name       string
	}

	Container_service__agent_pool_profile struct {
		Count      *int64
		Dns_prefix string
		Fqdn       *string
		Name       string
		Vm_size    string
	}

	Container_service__diagnostics_profile struct {
		Enabled     bool
		Storage_uri *string
	}

	Container_service__linux_profile__ssh_key struct {
		Key_data string
	}

	Container_service__linux_profile struct {
		Admin_username string
		Ssh_key        []Container_service__linux_profile__ssh_key
	}

	Container_service__master_profile struct {
		Count      *int64
		Dns_prefix string
		Fqdn       *string
	}

	Container_service__service_principal struct {
		Client_id     string
		Client_secret string
	}

	Cosmosdb_account__capabilities struct {
		Name string
	}

	Cosmosdb_account__consistency_policy struct {
		Consistency_level       string
		Max_interval_in_seconds *int64
		Max_staleness_prefix    *int64
	}

	Cosmosdb_account__failover_policy struct {
		Id       *string
		Location string
		Priority int64
	}

	Cosmosdb_account__geo_location struct {
		Failover_priority int64
		Id                *string
		Location          string
		Prefix            *string
	}

	Cosmosdb_account__virtual_network_rule struct {
		Id string
	}

	Dev_test_linux_virtual_machine__gallery_image_reference struct {
		Offer     string
		Publisher string
		Sku       string
		Version   string
	}

	Dev_test_linux_virtual_machine__inbound_nat_rule struct {
		Backend_port  int64
		Frontend_port *int64
		Protocol      string
	}

	Dev_test_virtual_network__subnet struct {
		Name                            *string
		Use_in_virtual_machine_creation *string
		Use_public_ip_address           *string
	}

	Dev_test_windows_virtual_machine__gallery_image_reference struct {
		Offer     string
		Publisher string
		Sku       string
		Version   string
	}

	Dev_test_windows_virtual_machine__inbound_nat_rule struct {
		Backend_port  int64
		Frontend_port *int64
		Protocol      string
	}

	Devspace_controller__sku struct {
		Name string
		Tier string
	}

	Dns_caa_record__record struct {
		Flags int64
		Tag   string
		Value string
	}

	Dns_mx_record__record struct {
		Exchange   string
		Preference string
	}

	Dns_ns_record__record struct {
		Nsdname string
	}

	Dns_srv_record__record struct {
		Port     int64
		Priority int64
		Target   string
		Weight   int64
	}

	Dns_txt_record__record struct {
		Value string
	}

	Eventhub__capture_description__destination struct {
		Archive_name_format string
		Blob_container_name string
		Name                string
		Storage_account_id  string
	}

	Eventhub__capture_description struct {
		Destination         []Eventhub__capture_description__destination
		Enabled             bool
		Encoding            string
		Interval_in_seconds *int64
		Size_limit_in_bytes *int64
	}

	Express_route_circuit__sku struct {
		Family string
		Tier   string
	}

	Express_route_circuit_peering__microsoft_peering_config struct {
		Advertised_public_prefixes []string
	}

	Firewall__ip_configuration struct {
		Internal_public_ip_address_id *string
		Name                          string
		Private_ip_address            *string
		Public_ip_address_id          *string
		Subnet_id                     string
	}

	Firewall_application_rule_collection__rule__protocol struct {
		Port *int64
		Type string
	}

	Firewall_application_rule_collection__rule struct {
		Description      *string
		Fqdn_tags        *[]string
		Name             string
		Protocol         *[]Firewall_application_rule_collection__rule__protocol
		Source_addresses []string
		Target_fqdns     *[]string
	}

	Firewall_network_rule_collection__rule struct {
		Description           *string
		Destination_addresses []string
		Destination_ports     []string
		Name                  string
		Protocols             []string
		Source_addresses      []string
	}

	Function_app__connection_string struct {
		Name  string
		Type  string
		Value string
	}

	Function_app__identity struct {
		Principal_id *string
		Tenant_id    *string
		Type         string
	}

	Function_app__site_config struct {
		Always_on                 *bool
		Use_32_bit_worker_process *bool
		Websockets_enabled        *bool
	}

	Function_app__site_credential struct {
		Password *string
		Username *string
	}

	Image__data_disk struct {
		Blob_uri        *string
		Caching         *string
		Lun             *int64
		Managed_disk_id *string
		Size_gb         *int64
	}

	Image__os_disk struct {
		Blob_uri        *string
		Caching         *string
		Managed_disk_id *string
		Os_state        *string
		Os_type         *string
		Size_gb         *int64
	}

	Iothub__endpoint struct {
		Batch_frequency_in_seconds *int64
		Connection_string          string
		Container_name             *string
		Encoding                   *string
		File_name_format           *string
		Max_chunk_size_in_bytes    *int64
		Name                       string
		Type                       string
	}

	Iothub__route struct {
		Condition      *string
		Enabled        bool
		Endpoint_names []string
		Name           string
		Source         string
	}

	Iothub__shared_access_policy struct {
		Key_name      *string
		Permissions   *string
		Primary_key   *string
		Secondary_key *string
	}

	Iothub__sku struct {
		Capacity int64
		Name     string
		Tier     string
	}

	Key_vault__access_policy struct {
		Application_id          *string
		Certificate_permissions *[]string
		Key_permissions         *[]string
		Object_id               string
		Secret_permissions      *[]string
		Tenant_id               string
	}

	Key_vault__network_acls struct {
		Bypass                     string
		Default_action             string
		Ip_rules                   *[]string
		Virtual_network_subnet_ids *[]string
	}

	Key_vault__sku struct {
		Name string
	}

	Key_vault_certificate__certificate struct {
		Contents string
		Password *string
	}

	Key_vault_certificate__certificate_policy__issuer_parameters struct {
		Name string
	}

	Key_vault_certificate__certificate_policy__key_properties struct {
		Exportable bool
		Key_size   int64
		Key_type   string
		Reuse_key  bool
	}

	Key_vault_certificate__certificate_policy__lifetime_action__action struct {
		Action_type string
	}

	Key_vault_certificate__certificate_policy__lifetime_action__trigger struct {
		Days_before_expiry  *int64
		Lifetime_percentage *int64
	}

	Key_vault_certificate__certificate_policy__lifetime_action struct {
		Action  []Key_vault_certificate__certificate_policy__lifetime_action__action
		Trigger []Key_vault_certificate__certificate_policy__lifetime_action__trigger
	}

	Key_vault_certificate__certificate_policy__secret_properties struct {
		Content_type string
	}

	Key_vault_certificate__certificate_policy__x509_certificate_properties__subject_alternative_names struct {
		Dns_names *[]string
		Emails    *[]string
		Upns      *[]string
	}

	Key_vault_certificate__certificate_policy__x509_certificate_properties struct {
		Extended_key_usage        *[]string
		Key_usage                 []string
		Subject                   string
		Subject_alternative_names *[]Key_vault_certificate__certificate_policy__x509_certificate_properties__subject_alternative_names
		Validity_in_months        int64
	}

	Key_vault_certificate__certificate_policy struct {
		Issuer_parameters           []Key_vault_certificate__certificate_policy__issuer_parameters
		Key_properties              []Key_vault_certificate__certificate_policy__key_properties
		Lifetime_action             *[]Key_vault_certificate__certificate_policy__lifetime_action
		Secret_properties           []Key_vault_certificate__certificate_policy__secret_properties
		X509_certificate_properties *[]Key_vault_certificate__certificate_policy__x509_certificate_properties
	}

	Kubernetes_cluster__addon_profile__aci_connector_linux struct {
		Enabled     bool
		Subnet_name string
	}

	Kubernetes_cluster__addon_profile__http_application_routing struct {
		Enabled                            bool
		Http_application_routing_zone_name *string
	}

	Kubernetes_cluster__addon_profile__oms_agent struct {
		Enabled                    bool
		Log_analytics_workspace_id string
	}

	Kubernetes_cluster__addon_profile struct {
		Aci_connector_linux      *[]Kubernetes_cluster__addon_profile__aci_connector_linux
		Http_application_routing *[]Kubernetes_cluster__addon_profile__http_application_routing
		Oms_agent                *[]Kubernetes_cluster__addon_profile__oms_agent
	}

	Kubernetes_cluster__agent_pool_profile struct {
		Count           *int64
		Dns_prefix      *string
		Fqdn            *string
		Max_pods        *int64
		Name            string
		Os_disk_size_gb *int64
		Os_type         *string
		Vm_size         string
		Vnet_subnet_id  *string
	}

	Kubernetes_cluster__kube_admin_config struct {
		Client_certificate     *string
		Client_key             *string
		Cluster_ca_certificate *string
		Host                   *string
		Password               *string
		Username               *string
	}

	Kubernetes_cluster__kube_config struct {
		Client_certificate     *string
		Client_key             *string
		Cluster_ca_certificate *string
		Host                   *string
		Password               *string
		Username               *string
	}

	Kubernetes_cluster__linux_profile__ssh_key struct {
		Key_data string
	}

	Kubernetes_cluster__linux_profile struct {
		Admin_username string
		Ssh_key        []Kubernetes_cluster__linux_profile__ssh_key
	}

	Kubernetes_cluster__network_profile struct {
		Dns_service_ip     *string
		Docker_bridge_cidr *string
		Network_plugin     string
		Pod_cidr           *string
		Service_cidr       *string
	}

	Kubernetes_cluster__role_based_access_control__azure_active_directory struct {
		Client_app_id     string
		Server_app_id     string
		Server_app_secret string
		Tenant_id         *string
	}

	Kubernetes_cluster__role_based_access_control struct {
		Azure_active_directory *[]Kubernetes_cluster__role_based_access_control__azure_active_directory
		Enabled                bool
	}

	Kubernetes_cluster__service_principal struct {
		Client_id     string
		Client_secret string
	}

	Lb__frontend_ip_configuration struct {
		Inbound_nat_rules             *[]string
		Load_balancer_rules           *[]string
		Name                          string
		Private_ip_address            *string
		Private_ip_address_allocation *string
		Public_ip_address_id          *string
		Subnet_id                     *string
		Zones                         *[]string
	}

	Local_network_gateway__bgp_settings struct {
		Asn                 int64
		Bgp_peering_address string
		Peer_weight         *int64
	}

	Log_analytics_solution__plan struct {
		Name           *string
		Product        string
		Promotion_code *string
		Publisher      string
	}

	Log_analytics_workspace_linked_service__linked_service_properties struct {
		Resource_id string
	}

	Managed_disk__encryption_settings__disk_encryption_key struct {
		Secret_url      string
		Source_vault_id string
	}

	Managed_disk__encryption_settings__key_encryption_key struct {
		Key_url         string
		Source_vault_id string
	}

	Managed_disk__encryption_settings struct {
		Disk_encryption_key *[]Managed_disk__encryption_settings__disk_encryption_key
		Enabled             bool
		Key_encryption_key  *[]Managed_disk__encryption_settings__key_encryption_key
	}

	Mariadb_server__sku struct {
		Capacity int64
		Family   string
		Name     string
		Tier     string
	}

	Mariadb_server__storage_profile struct {
		Backup_retention_days *int64
		Geo_redundant_backup  *string
		Storage_mb            int64
	}

	Metric_alertrule__email_action struct {
		Custom_emails          *[]string
		Send_to_service_owners *bool
	}

	Metric_alertrule__webhook_action struct {
		Properties  *map[string]string
		Service_uri string
	}

	Monitor_action_group__email_receiver struct {
		Email_address string
		Name          string
	}

	Monitor_action_group__sms_receiver struct {
		Country_code string
		Name         string
		Phone_number string
	}

	Monitor_action_group__webhook_receiver struct {
		Name        string
		Service_uri string
	}

	Monitor_activity_log_alert__action struct {
		Action_group_id    string
		Webhook_properties *map[string]string
	}

	Monitor_activity_log_alert__criteria struct {
		Caller            *string
		Category          string
		Level             *string
		Operation_name    *string
		Resource_group    *string
		Resource_id       *string
		Resource_provider *string
		Resource_type     *string
		Status            *string
		Sub_status        *string
	}

	Monitor_diagnostic_setting__log__retention_policy struct {
		Days    *int64
		Enabled bool
	}

	Monitor_diagnostic_setting__log struct {
		Category         string
		Enabled          *bool
		Retention_policy []Monitor_diagnostic_setting__log__retention_policy
	}

	Monitor_diagnostic_setting__metric__retention_policy struct {
		Days    *int64
		Enabled bool
	}

	Monitor_diagnostic_setting__metric struct {
		Category         string
		Enabled          *bool
		Retention_policy []Monitor_diagnostic_setting__metric__retention_policy
	}

	Monitor_log_profile__retention_policy struct {
		Days    *int64
		Enabled bool
	}

	Monitor_metric_alert__action struct {
		Action_group_id    string
		Webhook_properties *map[string]string
	}

	Monitor_metric_alert__criteria__dimension struct {
		Name     string
		Operator string
		Values   []string
	}

	Monitor_metric_alert__criteria struct {
		Aggregation      string
		Dimension        *[]Monitor_metric_alert__criteria__dimension
		Metric_name      string
		Metric_namespace string
		Operator         string
		Threshold        float64
	}

	Mssql_elasticpool__elastic_pool_properties struct {
		Creation_date  *string
		License_type   *string
		Max_size_bytes *int64
		State          *string
		Zone_redundant *bool
	}

	Mssql_elasticpool__per_database_settings struct {
		Max_capacity float64
		Min_capacity float64
	}

	Mssql_elasticpool__sku struct {
		Capacity int64
		Family   *string
		Name     string
		Tier     string
	}

	Mysql_server__sku struct {
		Capacity int64
		Family   string
		Name     string
		Tier     string
	}

	Mysql_server__storage_profile struct {
		Backup_retention_days *int64
		Geo_redundant_backup  *string
		Storage_mb            int64
	}

	Network_interface__ip_configuration struct {
		Application_gateway_backend_address_pools_ids *[]string
		Application_security_group_ids                *[]string
		Load_balancer_backend_address_pools_ids       *[]string
		Load_balancer_inbound_nat_rules_ids           *[]string
		Name                                          string
		Primary                                       *bool
		Private_ip_address                            *string
		Private_ip_address_allocation                 string
		Private_ip_address_version                    *string
		Public_ip_address_id                          *string
		Subnet_id                                     *string
	}

	Network_security_group__security_rule struct {
		Access                                     string
		Description                                *string
		Destination_address_prefix                 *string
		Destination_address_prefixes               *[]string
		Destination_application_security_group_ids *[]string
		Destination_port_range                     *string
		Destination_port_ranges                    *[]string
		Direction                                  string
		Name                                       string
		Priority                                   int64
		Protocol                                   string
		Source_address_prefix                      *string
		Source_address_prefixes                    *[]string
		Source_application_security_group_ids      *[]string
		Source_port_range                          *string
		Source_port_ranges                         *[]string
	}

	Notification_hub__apns_credential struct {
		Application_mode string
		Bundle_id        string
		Key_id           string
		Team_id          string
		Token            string
	}

	Notification_hub__gcm_credential struct {
		Api_key string
	}

	Notification_hub_namespace__sku struct {
		Name string
	}

	Packet_capture__filter struct {
		Local_ip_address  *string
		Local_port        *string
		Protocol          string
		Remote_ip_address *string
		Remote_port       *string
	}

	Packet_capture__storage_location struct {
		File_path          *string
		Storage_account_id *string
		Storage_path       *string
	}

	Policy_assignment__identity struct {
		Principal_id *string
		Tenant_id    *string
		Type         *string
	}

	Postgresql_server__sku struct {
		Capacity int64
		Family   string
		Name     string
		Tier     string
	}

	Postgresql_server__storage_profile struct {
		Backup_retention_days *int64
		Geo_redundant_backup  *string
		Storage_mb            int64
	}

	Recovery_services_protection_policy_vm__backup struct {
		Frequency string
		Time      string
		Weekdays  *[]string
	}

	Recovery_services_protection_policy_vm__retention_daily struct {
		Count int64
	}

	Recovery_services_protection_policy_vm__retention_monthly struct {
		Count    int64
		Weekdays []string
		Weeks    []string
	}

	Recovery_services_protection_policy_vm__retention_weekly struct {
		Count    int64
		Weekdays []string
	}

	Recovery_services_protection_policy_vm__retention_yearly struct {
		Count    int64
		Months   []string
		Weekdays []string
		Weeks    []string
	}

	Redis_cache__patch_schedule struct {
		Day_of_week    string
		Start_hour_utc *int64
	}

	Redis_cache__redis_configuration struct {
		Maxclients                    *int64
		Maxmemory_delta               *int64
		Maxmemory_policy              *string
		Maxmemory_reserved            *int64
		Notify_keyspace_events        *string
		Rdb_backup_enabled            *bool
		Rdb_backup_frequency          *int64
		Rdb_backup_max_snapshot_count *int64
		Rdb_storage_connection_string *string
	}

	Relay_namespace__sku struct {
		Name string
	}

	Role_definition__permissions struct {
		Actions          *[]string
		Data_actions     *[]string
		Not_actions      *[]string
		Not_data_actions *[]string
	}

	Route_table__route struct {
		Address_prefix         string
		Name                   string
		Next_hop_in_ip_address *string
		Next_hop_type          string
	}

	Scheduler_job__action_storage_queue struct {
		Message              string
		Sas_token            string
		Storage_account_name string
		Storage_queue_name   string
	}

	Scheduler_job__action_web__authentication_active_directory struct {
		Audience  *string
		Client_id string
		Secret    string
		Tenant_id string
	}

	Scheduler_job__action_web__authentication_basic struct {
		Password string
		Username string
	}

	Scheduler_job__action_web__authentication_certificate struct {
		Expiration   *string
		Password     string
		Pfx          string
		Subject_name *string
		Thumbprint   *string
	}

	Scheduler_job__action_web struct {
		Authentication_active_directory *[]Scheduler_job__action_web__authentication_active_directory
		Authentication_basic            *[]Scheduler_job__action_web__authentication_basic
		Authentication_certificate      *[]Scheduler_job__action_web__authentication_certificate
		Body                            *string
		Headers                         *map[string]string
		Method                          string
		Url                             string
	}

	Scheduler_job__error_action_storage_queue struct {
		Message              string
		Sas_token            string
		Storage_account_name string
		Storage_queue_name   string
	}

	Scheduler_job__error_action_web__authentication_active_directory struct {
		Audience  *string
		Client_id string
		Secret    string
		Tenant_id string
	}

	Scheduler_job__error_action_web__authentication_basic struct {
		Password string
		Username string
	}

	Scheduler_job__error_action_web__authentication_certificate struct {
		Expiration   *string
		Password     string
		Pfx          string
		Subject_name *string
		Thumbprint   *string
	}

	Scheduler_job__error_action_web struct {
		Authentication_active_directory *[]Scheduler_job__error_action_web__authentication_active_directory
		Authentication_basic            *[]Scheduler_job__error_action_web__authentication_basic
		Authentication_certificate      *[]Scheduler_job__error_action_web__authentication_certificate
		Body                            *string
		Headers                         *map[string]string
		Method                          string
		Url                             string
	}

	Scheduler_job__recurrence__monthly_occurrences struct {
		Day        string
		Occurrence int64
	}

	Scheduler_job__recurrence struct {
		Count               *int64
		End_time            *string
		Frequency           string
		Hours               *[]int64
		Interval            *int64
		Minutes             *[]int64
		Month_days          *[]int64
		Monthly_occurrences *[]Scheduler_job__recurrence__monthly_occurrences
		Week_days           *[]string
	}

	Scheduler_job__retry struct {
		Count    *int64
		Interval *string
	}

	Scheduler_job_collection__quota struct {
		Max_job_count            *int64
		Max_recurrence_frequency string
		Max_recurrence_interval  *int64
		Max_retry_interval       *int64
	}

	Service_fabric_cluster__azure_active_directory struct {
		Client_application_id  string
		Cluster_application_id string
		Tenant_id              string
	}

	Service_fabric_cluster__certificate struct {
		Thumbprint           string
		Thumbprint_secondary *string
		X509_store_name      string
	}

	Service_fabric_cluster__client_certificate_thumbprint struct {
		Is_admin   bool
		Thumbprint string
	}

	Service_fabric_cluster__diagnostics_config struct {
		Blob_endpoint              string
		Protected_account_key_name string
		Queue_endpoint             string
		Storage_account_name       string
		Table_endpoint             string
	}

	Service_fabric_cluster__fabric_settings struct {
		Name       string
		Parameters *map[string]string
	}

	Service_fabric_cluster__node_type__application_ports struct {
		End_port   int64
		Start_port int64
	}

	Service_fabric_cluster__node_type__ephemeral_ports struct {
		End_port   int64
		Start_port int64
	}

	Service_fabric_cluster__node_type struct {
		Application_ports           *[]Service_fabric_cluster__node_type__application_ports
		Client_endpoint_port        int64
		Durability_level            *string
		Ephemeral_ports             *[]Service_fabric_cluster__node_type__ephemeral_ports
		Http_endpoint_port          int64
		Instance_count              int64
		Is_primary                  bool
		Name                        string
		Reverse_proxy_endpoint_port *int64
	}

	Service_fabric_cluster__reverse_proxy_certificate struct {
		Thumbprint           string
		Thumbprint_secondary *string
		X509_store_name      string
	}

	Servicebus_subscription_rule__correlation_filter struct {
		Content_type        *string
		Correlation_id      *string
		Label               *string
		Message_id          *string
		Reply_to            *string
		Reply_to_session_id *string
		Session_id          *string
		To                  *string
	}

	Shared_image__identifier struct {
		Offer     string
		Publisher string
		Sku       string
	}

	Shared_image_version__target_region struct {
		Name                   string
		Regional_replica_count int64
	}

	Signalr_service__sku struct {
		Capacity int64
		Name     string
	}

	Snapshot__encryption_settings__disk_encryption_key struct {
		Secret_url      string
		Source_vault_id string
	}

	Snapshot__encryption_settings__key_encryption_key struct {
		Key_url         string
		Source_vault_id string
	}

	Snapshot__encryption_settings struct {
		Disk_encryption_key *[]Snapshot__encryption_settings__disk_encryption_key
		Enabled             bool
		Key_encryption_key  *[]Snapshot__encryption_settings__key_encryption_key
	}

	Sql_database__import struct {
		Administrator_login          string
		Administrator_login_password string
		Authentication_type          string
		Operation_mode               *string
		Storage_key                  string
		Storage_key_type             string
		Storage_uri                  string
	}

	Sql_database__threat_detection_policy struct {
		Disabled_alerts            *[]string
		Email_account_admins       *string
		Email_addresses            *[]string
		Retention_days             *int64
		State                      *string
		Storage_account_access_key *string
		Storage_endpoint           *string
		Use_server_default         *string
	}

	Storage_account__custom_domain struct {
		Name          string
		Use_subdomain *bool
	}

	Storage_account__identity struct {
		Principal_id *string
		Tenant_id    *string
		Type         string
	}

	Storage_account__network_rules struct {
		Bypass                     *[]string
		Ip_rules                   *[]string
		Virtual_network_subnet_ids *[]string
	}

	Subnet__delegation__service_delegation struct {
		Actions *[]string
		Name    string
	}

	Subnet__delegation struct {
		Name               string
		Service_delegation []Subnet__delegation__service_delegation
	}

	Traffic_manager_profile__dns_config struct {
		Relative_name string
		Ttl           int64
	}

	Traffic_manager_profile__monitor_config struct {
		Path     *string
		Port     int64
		Protocol string
	}

	Virtual_machine__boot_diagnostics struct {
		Enabled     bool
		Storage_uri string
	}

	Virtual_machine__identity struct {
		Identity_ids *[]string
		Principal_id *string
		Type         string
	}

	Virtual_machine__os_profile struct {
		Admin_password *string
		Admin_username string
		Computer_name  string
		Custom_data    *string
	}

	Virtual_machine__os_profile_linux_config__ssh_keys struct {
		Key_data string
		Path     string
	}

	Virtual_machine__os_profile_linux_config struct {
		Disable_password_authentication bool
		Ssh_keys                        *[]Virtual_machine__os_profile_linux_config__ssh_keys
	}

	Virtual_machine__os_profile_secrets__vault_certificates struct {
		Certificate_store *string
		Certificate_url   string
	}

	Virtual_machine__os_profile_secrets struct {
		Source_vault_id    string
		Vault_certificates *[]Virtual_machine__os_profile_secrets__vault_certificates
	}

	Virtual_machine__os_profile_windows_config__additional_unattend_config struct {
		Component    string
		Content      string
		Pass         string
		Setting_name string
	}

	Virtual_machine__os_profile_windows_config__winrm struct {
		Certificate_url *string
		Protocol        string
	}

	Virtual_machine__os_profile_windows_config struct {
		Additional_unattend_config *[]Virtual_machine__os_profile_windows_config__additional_unattend_config
		Enable_automatic_upgrades  *bool
		Provision_vm_agent         *bool
		Timezone                   *string
		Winrm                      *[]Virtual_machine__os_profile_windows_config__winrm
	}

	Virtual_machine__plan struct {
		Name      string
		Product   string
		Publisher string
	}

	Virtual_machine__storage_data_disk struct {
		Caching                   *string
		Create_option             string
		Disk_size_gb              *int64
		Lun                       int64
		Managed_disk_id           *string
		Managed_disk_type         *string
		Name                      string
		Vhd_uri                   *string
		Write_accelerator_enabled *bool
	}

	Virtual_machine__storage_image_reference struct {
		Id        *string
		Offer     *string
		Publisher *string
		Sku       *string
		Version   *string
	}

	Virtual_machine__storage_os_disk struct {
		Caching                   *string
		Create_option             string
		Disk_size_gb              *int64
		Image_uri                 *string
		Managed_disk_id           *string
		Managed_disk_type         *string
		Name                      string
		Os_type                   *string
		Vhd_uri                   *string
		Write_accelerator_enabled *bool
	}

	Virtual_machine_scale_set__boot_diagnostics struct {
		Enabled     *bool
		Storage_uri string
	}

	Virtual_machine_scale_set__extension struct {
		Auto_upgrade_minor_version *bool
		Name                       string
		Protected_settings         *string
		Publisher                  string
		Settings                   *string
		Type                       string
		Type_handler_version       string
	}

	Virtual_machine_scale_set__identity struct {
		Identity_ids *[]string
		Principal_id *string
		Type         string
	}

	Virtual_machine_scale_set__network_profile__dns_settings struct {
		Dns_servers []string
	}

	Virtual_machine_scale_set__network_profile__ip_configuration__public_ip_address_configuration struct {
		Domain_name_label string
		Idle_timeout      int64
		Name              string
	}

	Virtual_machine_scale_set__network_profile__ip_configuration struct {
		Application_gateway_backend_address_pool_ids *[]string
		Application_security_group_ids               *[]string
		Load_balancer_backend_address_pool_ids       *[]string
		Load_balancer_inbound_nat_rules_ids          *[]string
		Name                                         string
		Primary                                      bool
		Public_ip_address_configuration              *[]Virtual_machine_scale_set__network_profile__ip_configuration__public_ip_address_configuration
		Subnet_id                                    string
	}

	Virtual_machine_scale_set__network_profile struct {
		Accelerated_networking    *bool
		Dns_settings              *[]Virtual_machine_scale_set__network_profile__dns_settings
		Ip_configuration          []Virtual_machine_scale_set__network_profile__ip_configuration
		Ip_forwarding             *bool
		Name                      string
		Network_security_group_id *string
		Primary                   bool
	}

	Virtual_machine_scale_set__os_profile struct {
		Admin_password       *string
		Admin_username       string
		Computer_name_prefix string
		Custom_data          *string
	}

	Virtual_machine_scale_set__os_profile_linux_config__ssh_keys struct {
		Key_data *string
		Path     string
	}

	Virtual_machine_scale_set__os_profile_linux_config struct {
		Disable_password_authentication *bool
		Ssh_keys                        *[]Virtual_machine_scale_set__os_profile_linux_config__ssh_keys
	}

	Virtual_machine_scale_set__os_profile_secrets__vault_certificates struct {
		Certificate_store *string
		Certificate_url   string
	}

	Virtual_machine_scale_set__os_profile_secrets struct {
		Source_vault_id    string
		Vault_certificates *[]Virtual_machine_scale_set__os_profile_secrets__vault_certificates
	}

	Virtual_machine_scale_set__os_profile_windows_config__additional_unattend_config struct {
		Component    string
		Content      string
		Pass         string
		Setting_name string
	}

	Virtual_machine_scale_set__os_profile_windows_config__winrm struct {
		Certificate_url *string
		Protocol        string
	}

	Virtual_machine_scale_set__os_profile_windows_config struct {
		Additional_unattend_config *[]Virtual_machine_scale_set__os_profile_windows_config__additional_unattend_config
		Enable_automatic_upgrades  *bool
		Provision_vm_agent         *bool
		Winrm                      *[]Virtual_machine_scale_set__os_profile_windows_config__winrm
	}

	Virtual_machine_scale_set__plan struct {
		Name      string
		Product   string
		Publisher string
	}

	Virtual_machine_scale_set__rolling_upgrade_policy struct {
		Max_batch_instance_percent              *int64
		Max_unhealthy_instance_percent          *int64
		Max_unhealthy_upgraded_instance_percent *int64
		Pause_time_between_batches              *string
	}

	Virtual_machine_scale_set__sku struct {
		Capacity int64
		Name     string
		Tier     *string
	}

	Virtual_machine_scale_set__storage_profile_data_disk struct {
		Caching           *string
		Create_option     string
		Disk_size_gb      *int64
		Lun               int64
		Managed_disk_type *string
	}

	Virtual_machine_scale_set__storage_profile_image_reference struct {
		Id        *string
		Offer     *string
		Publisher *string
		Sku       *string
		Version   *string
	}

	Virtual_machine_scale_set__storage_profile_os_disk struct {
		Caching           *string
		Create_option     string
		Image             *string
		Managed_disk_type *string
		Name              *string
		Os_type           *string
		Vhd_containers    *[]string
	}

	Virtual_network__subnet struct {
		Address_prefix string
		Id             *string
		Name           string
		Security_group *string
	}

	Virtual_network_gateway__bgp_settings struct {
		Asn             *int64
		Peer_weight     *int64
		Peering_address *string
	}

	Virtual_network_gateway__ip_configuration struct {
		Name                          *string
		Private_ip_address_allocation *string
		Public_ip_address_id          *string
		Subnet_id                     string
	}

	Virtual_network_gateway__vpn_client_configuration__revoked_certificate struct {
		Name       string
		Thumbprint string
	}

	Virtual_network_gateway__vpn_client_configuration__root_certificate struct {
		Name             string
		Public_cert_data string
	}

	Virtual_network_gateway__vpn_client_configuration struct {
		Address_space         []string
		Radius_server_address *string
		Radius_server_secret  *string
		Revoked_certificate   *[]Virtual_network_gateway__vpn_client_configuration__revoked_certificate
		Root_certificate      *[]Virtual_network_gateway__vpn_client_configuration__root_certificate
		Vpn_client_protocols  *[]string
	}

	Virtual_network_gateway_connection__ipsec_policy struct {
		Dh_group         string
		Ike_encryption   string
		Ike_integrity    string
		Ipsec_encryption string
		Ipsec_integrity  string
		Pfs_group        string
		Sa_datasize      *int64
		Sa_lifetime      *int64
	}
)

func Initialize(sb *service.Builder, p *schema.Provider) {
	// Generic handler API
	sb.RegisterAPI("TerraformAzureRM::GenericHandler", bridge.NewTFHandler(nil, "", nil))

	// Registration of resource types with handler
	var rt px.Type
	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Api_management{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("api_managementID", "gateway_regional_url", "gateway_url", "hostname_configuration", "management_api_url", "notification_sender_email", "portal_url", "public_ip_addresses", "scm_url", "security", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Api_managementHandler", bridge.NewTFHandler(p, "azurerm_api_management", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&App_service{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("app_serviceID", "app_settings", "client_affinity_enabled", "connection_string", "default_site_hostname", "identity", "outbound_ip_addresses", "possible_outbound_ip_addresses", "site_config", "site_credential", "source_control", "tags")
		b.ImmutableAttributes("app_service_plan_id", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::App_serviceHandler", bridge.NewTFHandler(p, "azurerm_app_service", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&App_service_active_slot{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("app_service_active_slotID")
		b.ImmutableAttributes("app_service_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::App_service_active_slotHandler", bridge.NewTFHandler(p, "azurerm_app_service_active_slot", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&App_service_custom_hostname_binding{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("app_service_custom_hostname_bindingID")
		b.ImmutableAttributes("app_service_name", "hostname", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::App_service_custom_hostname_bindingHandler", bridge.NewTFHandler(p, "azurerm_app_service_custom_hostname_binding", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&App_service_plan{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("app_service_planID", "app_service_environment_id", "maximum_number_of_workers", "per_site_scaling", "properties", "reserved", "tags")
		b.ImmutableAttributes("app_service_environment_id", "kind", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::App_service_planHandler", bridge.NewTFHandler(p, "azurerm_app_service_plan", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&App_service_slot{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("app_service_slotID", "app_settings", "client_affinity_enabled", "connection_string", "default_site_hostname", "site_config", "tags")
		b.ImmutableAttributes("app_service_name", "app_service_plan_id", "identity", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::App_service_slotHandler", bridge.NewTFHandler(p, "azurerm_app_service_slot", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Application_gateway{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("application_gatewayID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Application_gatewayHandler", bridge.NewTFHandler(p, "azurerm_application_gateway", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Application_insights{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("application_insightsID", "app_id", "instrumentation_key", "tags")
		b.ImmutableAttributes("application_type", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Application_insightsHandler", bridge.NewTFHandler(p, "azurerm_application_insights", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Application_insights_api_key{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("application_insights_api_keyID", "api_key")
		b.ImmutableAttributes("application_insights_id", "name", "read_permissions", "write_permissions")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Application_insights_api_keyHandler", bridge.NewTFHandler(p, "azurerm_application_insights_api_key", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Application_security_group{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("application_security_groupID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Application_security_groupHandler", bridge.NewTFHandler(p, "azurerm_application_security_group", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Automation_account{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("automation_accountID", "dsc_primary_access_key", "dsc_secondary_access_key", "dsc_server_endpoint", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Automation_accountHandler", bridge.NewTFHandler(p, "azurerm_automation_account", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Automation_credential{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("automation_credentialID")
		b.ImmutableAttributes("account_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Automation_credentialHandler", bridge.NewTFHandler(p, "azurerm_automation_credential", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Automation_dsc_configuration{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("automation_dsc_configurationID", "state")
		b.ImmutableAttributes("automation_account_name", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Automation_dsc_configurationHandler", bridge.NewTFHandler(p, "azurerm_automation_dsc_configuration", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Automation_dsc_nodeconfiguration{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("automation_dsc_nodeconfigurationID", "configuration_name")
		b.ImmutableAttributes("automation_account_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Automation_dsc_nodeconfigurationHandler", bridge.NewTFHandler(p, "azurerm_automation_dsc_nodeconfiguration", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Automation_module{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("automation_moduleID")
		b.ImmutableAttributes("automation_account_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Automation_moduleHandler", bridge.NewTFHandler(p, "azurerm_automation_module", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Automation_runbook{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("automation_runbookID", "content", "tags")
		b.ImmutableAttributes("account_name", "location", "name", "resource_group_name", "runbook_type")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Automation_runbookHandler", bridge.NewTFHandler(p, "azurerm_automation_runbook", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Automation_schedule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("automation_scheduleID", "account_name", "automation_account_name", "expiry_time", "interval", "start_time")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Automation_scheduleHandler", bridge.NewTFHandler(p, "azurerm_automation_schedule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Autoscale_setting{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("autoscale_settingID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name", "target_resource_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Autoscale_settingHandler", bridge.NewTFHandler(p, "azurerm_autoscale_setting", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Availability_set{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("availability_setID", "tags")
		b.ImmutableAttributes("location", "managed", "name", "platform_fault_domain_count", "platform_update_domain_count", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Availability_setHandler", bridge.NewTFHandler(p, "azurerm_availability_set", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Azuread_application{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("azuread_applicationID", "application_id", "homepage", "identifier_uris", "reply_urls")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Azuread_applicationHandler", bridge.NewTFHandler(p, "azurerm_azuread_application", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Azuread_service_principal{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("azuread_service_principalID", "display_name")
		b.ImmutableAttributes("application_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Azuread_service_principalHandler", bridge.NewTFHandler(p, "azurerm_azuread_service_principal", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Azuread_service_principal_password{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("azuread_service_principal_passwordID", "key_id", "start_date")
		b.ImmutableAttributes("end_date", "key_id", "service_principal_id", "start_date", "value")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Azuread_service_principal_passwordHandler", bridge.NewTFHandler(p, "azurerm_azuread_service_principal_password", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Batch_account{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("batch_accountID", "storage_account_id", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Batch_accountHandler", bridge.NewTFHandler(p, "azurerm_batch_account", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Batch_pool{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("batch_poolID")
		b.ImmutableAttributes("account_name", "display_name", "name", "node_agent_sku_id", "resource_group_name", "storage_image_reference", "vm_size")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Batch_poolHandler", bridge.NewTFHandler(p, "azurerm_batch_pool", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Cdn_endpoint{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("cdn_endpointID", "content_types_to_compress", "host_name", "origin_host_header", "origin_path", "probe_path", "tags")
		b.ImmutableAttributes("location", "name", "origin", "profile_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Cdn_endpointHandler", bridge.NewTFHandler(p, "azurerm_cdn_endpoint", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Cdn_profile{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("cdn_profileID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name", "sku")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Cdn_profileHandler", bridge.NewTFHandler(p, "azurerm_cdn_profile", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Cognitive_account{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("cognitive_accountID", "endpoint", "tags")
		b.ImmutableAttributes("kind", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Cognitive_accountHandler", bridge.NewTFHandler(p, "azurerm_cognitive_account", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Container_group{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("container_groupID", "fqdn", "ip_address", "tags")
		b.ImmutableAttributes("container", "dns_name_label", "image_registry_credential", "ip_address_type", "location", "name", "os_type", "resource_group_name", "restart_policy", "tags")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Container_groupHandler", bridge.NewTFHandler(p, "azurerm_container_group", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Container_registry{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("container_registryID", "admin_password", "admin_username", "login_server", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Container_registryHandler", bridge.NewTFHandler(p, "azurerm_container_registry", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Container_service{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("container_serviceID", "tags")
		b.ImmutableAttributes("location", "name", "orchestration_platform", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Container_serviceHandler", bridge.NewTFHandler(p, "azurerm_container_service", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Cosmosdb_account{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("cosmosdb_accountID", "connection_strings", "endpoint", "geo_location", "primary_master_key", "primary_readonly_master_key", "read_endpoints", "secondary_master_key", "secondary_readonly_master_key", "tags", "write_endpoints")
		b.ImmutableAttributes("kind", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Cosmosdb_accountHandler", bridge.NewTFHandler(p, "azurerm_cosmosdb_account", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Data_lake_analytics_account{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("data_lake_analytics_accountID", "tags")
		b.ImmutableAttributes("default_store_account_name", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Data_lake_analytics_accountHandler", bridge.NewTFHandler(p, "azurerm_data_lake_analytics_account", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Data_lake_analytics_firewall_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("data_lake_analytics_firewall_ruleID")
		b.ImmutableAttributes("account_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Data_lake_analytics_firewall_ruleHandler", bridge.NewTFHandler(p, "azurerm_data_lake_analytics_firewall_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Data_lake_store{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("data_lake_storeID", "encryption_type", "endpoint", "tags")
		b.ImmutableAttributes("encryption_state", "encryption_type", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Data_lake_storeHandler", bridge.NewTFHandler(p, "azurerm_data_lake_store", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Data_lake_store_file{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("data_lake_store_fileID")
		b.ImmutableAttributes("account_name", "local_file_path", "remote_file_path")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Data_lake_store_fileHandler", bridge.NewTFHandler(p, "azurerm_data_lake_store_file", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Data_lake_store_firewall_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("data_lake_store_firewall_ruleID")
		b.ImmutableAttributes("account_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Data_lake_store_firewall_ruleHandler", bridge.NewTFHandler(p, "azurerm_data_lake_store_firewall_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Databricks_workspace{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("databricks_workspaceID", "managed_resource_group_id", "managed_resource_group_name", "tags")
		b.ImmutableAttributes("location", "managed_resource_group_name", "name", "resource_group_name", "sku")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Databricks_workspaceHandler", bridge.NewTFHandler(p, "azurerm_databricks_workspace", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dev_test_lab{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dev_test_labID", "artifacts_storage_account_id", "default_premium_storage_account_id", "default_storage_account_id", "key_vault_id", "premium_data_disk_storage_account_id", "tags", "unique_identifier")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dev_test_labHandler", bridge.NewTFHandler(p, "azurerm_dev_test_lab", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dev_test_linux_virtual_machine{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dev_test_linux_virtual_machineID", "fqdn", "tags", "unique_identifier")
		b.ImmutableAttributes("disallow_public_ip_address", "inbound_nat_rule", "lab_name", "lab_subnet_name", "lab_virtual_network_id", "location", "name", "password", "resource_group_name", "size", "ssh_key", "username")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dev_test_linux_virtual_machineHandler", bridge.NewTFHandler(p, "azurerm_dev_test_linux_virtual_machine", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dev_test_policy{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dev_test_policyID", "tags")
		b.ImmutableAttributes("evaluator_type", "lab_name", "name", "policy_set_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dev_test_policyHandler", bridge.NewTFHandler(p, "azurerm_dev_test_policy", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dev_test_virtual_network{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dev_test_virtual_networkID", "subnet", "tags", "unique_identifier")
		b.ImmutableAttributes("lab_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dev_test_virtual_networkHandler", bridge.NewTFHandler(p, "azurerm_dev_test_virtual_network", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dev_test_windows_virtual_machine{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dev_test_windows_virtual_machineID", "fqdn", "tags", "unique_identifier")
		b.ImmutableAttributes("disallow_public_ip_address", "inbound_nat_rule", "lab_name", "lab_subnet_name", "lab_virtual_network_id", "location", "name", "password", "resource_group_name", "size", "username")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dev_test_windows_virtual_machineHandler", bridge.NewTFHandler(p, "azurerm_dev_test_windows_virtual_machine", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Devspace_controller{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("devspace_controllerID", "data_plane_fqdn", "tags")
		b.ImmutableAttributes("host_suffix", "location", "name", "resource_group_name", "sku", "target_container_host_credentials_base64", "target_container_host_resource_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Devspace_controllerHandler", bridge.NewTFHandler(p, "azurerm_devspace_controller", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_a_record{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_a_recordID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_a_recordHandler", bridge.NewTFHandler(p, "azurerm_dns_a_record", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_aaaa_record{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_aaaa_recordID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_aaaa_recordHandler", bridge.NewTFHandler(p, "azurerm_dns_aaaa_record", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_caa_record{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_caa_recordID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_caa_recordHandler", bridge.NewTFHandler(p, "azurerm_dns_caa_record", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_cname_record{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_cname_recordID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_cname_recordHandler", bridge.NewTFHandler(p, "azurerm_dns_cname_record", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_mx_record{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_mx_recordID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_mx_recordHandler", bridge.NewTFHandler(p, "azurerm_dns_mx_record", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_ns_record{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_ns_recordID", "record", "records", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_ns_recordHandler", bridge.NewTFHandler(p, "azurerm_dns_ns_record", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_ptr_record{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_ptr_recordID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_ptr_recordHandler", bridge.NewTFHandler(p, "azurerm_dns_ptr_record", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_srv_record{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_srv_recordID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_srv_recordHandler", bridge.NewTFHandler(p, "azurerm_dns_srv_record", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_txt_record{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_txt_recordID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_txt_recordHandler", bridge.NewTFHandler(p, "azurerm_dns_txt_record", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Dns_zone{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("dns_zoneID", "max_number_of_record_sets", "name_servers", "number_of_record_sets", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Dns_zoneHandler", bridge.NewTFHandler(p, "azurerm_dns_zone", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Eventgrid_topic{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("eventgrid_topicID", "endpoint", "primary_access_key", "secondary_access_key", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Eventgrid_topicHandler", bridge.NewTFHandler(p, "azurerm_eventgrid_topic", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Eventhub{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("eventhubID", "partition_ids")
		b.ImmutableAttributes("location", "name", "namespace_name", "partition_count", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::EventhubHandler", bridge.NewTFHandler(p, "azurerm_eventhub", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Eventhub_authorization_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("eventhub_authorization_ruleID", "primary_connection_string", "primary_key", "secondary_connection_string", "secondary_key")
		b.ImmutableAttributes("eventhub_name", "location", "name", "namespace_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Eventhub_authorization_ruleHandler", bridge.NewTFHandler(p, "azurerm_eventhub_authorization_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Eventhub_consumer_group{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("eventhub_consumer_groupID")
		b.ImmutableAttributes("eventhub_name", "location", "name", "namespace_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Eventhub_consumer_groupHandler", bridge.NewTFHandler(p, "azurerm_eventhub_consumer_group", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Eventhub_namespace{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("eventhub_namespaceID", "default_primary_connection_string", "default_primary_key", "default_secondary_connection_string", "default_secondary_key", "maximum_throughput_units", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Eventhub_namespaceHandler", bridge.NewTFHandler(p, "azurerm_eventhub_namespace", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Eventhub_namespace_authorization_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("eventhub_namespace_authorization_ruleID", "primary_connection_string", "primary_key", "secondary_connection_string", "secondary_key")
		b.ImmutableAttributes("location", "name", "namespace_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Eventhub_namespace_authorization_ruleHandler", bridge.NewTFHandler(p, "azurerm_eventhub_namespace_authorization_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Express_route_circuit{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("express_route_circuitID", "service_key", "service_provider_provisioning_state", "tags")
		b.ImmutableAttributes("location", "name", "peering_location", "resource_group_name", "service_provider_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Express_route_circuitHandler", bridge.NewTFHandler(p, "azurerm_express_route_circuit", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Express_route_circuit_authorization{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("express_route_circuit_authorizationID", "authorization_key", "authorization_use_status")
		b.ImmutableAttributes("express_route_circuit_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Express_route_circuit_authorizationHandler", bridge.NewTFHandler(p, "azurerm_express_route_circuit_authorization", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Express_route_circuit_peering{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("express_route_circuit_peeringID", "azure_asn", "peer_asn", "primary_azure_port", "secondary_azure_port")
		b.ImmutableAttributes("express_route_circuit_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Express_route_circuit_peeringHandler", bridge.NewTFHandler(p, "azurerm_express_route_circuit_peering", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Firewall{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("firewallID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::FirewallHandler", bridge.NewTFHandler(p, "azurerm_firewall", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Firewall_application_rule_collection{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("firewall_application_rule_collectionID")
		b.ImmutableAttributes("azure_firewall_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Firewall_application_rule_collectionHandler", bridge.NewTFHandler(p, "azurerm_firewall_application_rule_collection", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Firewall_network_rule_collection{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("firewall_network_rule_collectionID")
		b.ImmutableAttributes("azure_firewall_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Firewall_network_rule_collectionHandler", bridge.NewTFHandler(p, "azurerm_firewall_network_rule_collection", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Function_app{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("function_appID", "client_affinity_enabled", "connection_string", "default_hostname", "identity", "outbound_ip_addresses", "site_config", "site_credential", "tags")
		b.ImmutableAttributes("app_service_plan_id", "location", "name", "resource_group_name", "storage_connection_string")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Function_appHandler", bridge.NewTFHandler(p, "azurerm_function_app", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Image{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("imageID", "tags")
		b.ImmutableAttributes("location", "name", "os_disk", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::ImageHandler", bridge.NewTFHandler(p, "azurerm_image", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Iothub{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("iothubID", "event_hub_events_endpoint", "event_hub_events_path", "event_hub_operations_endpoint", "event_hub_operations_path", "hostname", "shared_access_policy", "tags", "type")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::IothubHandler", bridge.NewTFHandler(p, "azurerm_iothub", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Iothub_consumer_group{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("iothub_consumer_groupID")
		b.ImmutableAttributes("eventhub_endpoint_name", "iothub_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Iothub_consumer_groupHandler", bridge.NewTFHandler(p, "azurerm_iothub_consumer_group", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Key_vault{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("key_vaultID", "access_policy", "tags", "vault_uri")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Key_vaultHandler", bridge.NewTFHandler(p, "azurerm_key_vault", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Key_vault_access_policy{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("key_vault_access_policyID")
		b.ImmutableAttributes("application_id", "object_id", "resource_group_name", "tenant_id", "vault_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Key_vault_access_policyHandler", bridge.NewTFHandler(p, "azurerm_key_vault_access_policy", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Key_vault_certificate{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("key_vault_certificateID", "certificate_data", "secret_id", "tags", "thumbprint", "version")
		b.ImmutableAttributes("certificate", "certificate_policy", "name", "vault_uri")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Key_vault_certificateHandler", bridge.NewTFHandler(p, "azurerm_key_vault_certificate", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Key_vault_key{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("key_vault_keyID", "e", "n", "tags", "version")
		b.ImmutableAttributes("key_size", "key_type", "name", "vault_uri")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Key_vault_keyHandler", bridge.NewTFHandler(p, "azurerm_key_vault_key", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Key_vault_secret{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("key_vault_secretID", "tags", "version")
		b.ImmutableAttributes("name", "vault_uri")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Key_vault_secretHandler", bridge.NewTFHandler(p, "azurerm_key_vault_secret", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Kubernetes_cluster{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("kubernetes_clusterID", "addon_profile", "fqdn", "kube_admin_config", "kube_admin_config_raw", "kube_config", "kube_config_raw", "kubernetes_version", "network_profile", "node_resource_group", "role_based_access_control", "tags")
		b.ImmutableAttributes("dns_prefix", "location", "name", "network_profile", "resource_group_name", "role_based_access_control")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Kubernetes_clusterHandler", bridge.NewTFHandler(p, "azurerm_kubernetes_cluster", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Lb{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("lbID", "private_ip_address", "private_ip_addresses", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name", "sku")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::LbHandler", bridge.NewTFHandler(p, "azurerm_lb", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Lb_backend_address_pool{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("lb_backend_address_poolID", "backend_ip_configurations", "load_balancing_rules")
		b.ImmutableAttributes("loadbalancer_id", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Lb_backend_address_poolHandler", bridge.NewTFHandler(p, "azurerm_lb_backend_address_pool", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Lb_nat_pool{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("lb_nat_poolID", "frontend_ip_configuration_id")
		b.ImmutableAttributes("loadbalancer_id", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Lb_nat_poolHandler", bridge.NewTFHandler(p, "azurerm_lb_nat_pool", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Lb_nat_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("lb_nat_ruleID", "backend_ip_configuration_id", "enable_floating_ip", "frontend_ip_configuration_id")
		b.ImmutableAttributes("loadbalancer_id", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Lb_nat_ruleHandler", bridge.NewTFHandler(p, "azurerm_lb_nat_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Lb_probe{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("lb_probeID", "load_balancer_rules", "protocol")
		b.ImmutableAttributes("loadbalancer_id", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Lb_probeHandler", bridge.NewTFHandler(p, "azurerm_lb_probe", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Lb_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("lb_ruleID", "backend_address_pool_id", "frontend_ip_configuration_id", "idle_timeout_in_minutes", "load_distribution", "probe_id")
		b.ImmutableAttributes("loadbalancer_id", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Lb_ruleHandler", bridge.NewTFHandler(p, "azurerm_lb_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Local_network_gateway{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("local_network_gatewayID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Local_network_gatewayHandler", bridge.NewTFHandler(p, "azurerm_local_network_gateway", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Log_analytics_solution{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("log_analytics_solutionID")
		b.ImmutableAttributes("location", "resource_group_name", "solution_name", "workspace_name", "workspace_resource_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Log_analytics_solutionHandler", bridge.NewTFHandler(p, "azurerm_log_analytics_solution", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Log_analytics_workspace{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("log_analytics_workspaceID", "portal_url", "primary_shared_key", "retention_in_days", "secondary_shared_key", "tags", "workspace_id")
		b.ImmutableAttributes("location", "name", "resource_group_name", "sku")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Log_analytics_workspaceHandler", bridge.NewTFHandler(p, "azurerm_log_analytics_workspace", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Log_analytics_workspace_linked_service{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("log_analytics_workspace_linked_serviceID", "name", "tags")
		b.ImmutableAttributes("linked_service_name", "linked_service_properties", "resource_group_name", "workspace_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Log_analytics_workspace_linked_serviceHandler", bridge.NewTFHandler(p, "azurerm_log_analytics_workspace_linked_service", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Logic_app_action_custom{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("logic_app_action_customID")
		b.ImmutableAttributes("logic_app_id", "name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Logic_app_action_customHandler", bridge.NewTFHandler(p, "azurerm_logic_app_action_custom", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Logic_app_action_http{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("logic_app_action_httpID")
		b.ImmutableAttributes("logic_app_id", "name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Logic_app_action_httpHandler", bridge.NewTFHandler(p, "azurerm_logic_app_action_http", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Logic_app_trigger_custom{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("logic_app_trigger_customID")
		b.ImmutableAttributes("logic_app_id", "name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Logic_app_trigger_customHandler", bridge.NewTFHandler(p, "azurerm_logic_app_trigger_custom", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Logic_app_trigger_http_request{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("logic_app_trigger_http_requestID")
		b.ImmutableAttributes("logic_app_id", "name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Logic_app_trigger_http_requestHandler", bridge.NewTFHandler(p, "azurerm_logic_app_trigger_http_request", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Logic_app_trigger_recurrence{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("logic_app_trigger_recurrenceID")
		b.ImmutableAttributes("logic_app_id", "name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Logic_app_trigger_recurrenceHandler", bridge.NewTFHandler(p, "azurerm_logic_app_trigger_recurrence", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Logic_app_workflow{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("logic_app_workflowID", "access_endpoint", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name", "workflow_schema", "workflow_version")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Logic_app_workflowHandler", bridge.NewTFHandler(p, "azurerm_logic_app_workflow", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Managed_disk{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("managed_diskID", "disk_size_gb", "source_uri", "tags")
		b.ImmutableAttributes("create_option", "image_reference_id", "location", "name", "resource_group_name", "source_resource_id", "source_uri", "zones")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Managed_diskHandler", bridge.NewTFHandler(p, "azurerm_managed_disk", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Management_group{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("management_groupID", "display_name", "group_id", "parent_management_group_id")
		b.ImmutableAttributes("group_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Management_groupHandler", bridge.NewTFHandler(p, "azurerm_management_group", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Management_lock{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("management_lockID")
		b.ImmutableAttributes("lock_level", "name", "notes", "scope")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Management_lockHandler", bridge.NewTFHandler(p, "azurerm_management_lock", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Mariadb_database{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("mariadb_databaseID")
		b.ImmutableAttributes("charset", "collation", "name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Mariadb_databaseHandler", bridge.NewTFHandler(p, "azurerm_mariadb_database", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Mariadb_server{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("mariadb_serverID", "fqdn", "tags")
		b.ImmutableAttributes("administrator_login", "location", "name", "resource_group_name", "version")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Mariadb_serverHandler", bridge.NewTFHandler(p, "azurerm_mariadb_server", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Metric_alertrule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("metric_alertruleID", "description", "email_action", "tags", "webhook_action")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Metric_alertruleHandler", bridge.NewTFHandler(p, "azurerm_metric_alertrule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Monitor_action_group{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("monitor_action_groupID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Monitor_action_groupHandler", bridge.NewTFHandler(p, "azurerm_monitor_action_group", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Monitor_activity_log_alert{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("monitor_activity_log_alertID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Monitor_activity_log_alertHandler", bridge.NewTFHandler(p, "azurerm_monitor_activity_log_alert", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Monitor_diagnostic_setting{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("monitor_diagnostic_settingID")
		b.ImmutableAttributes("eventhub_authorization_rule_id", "eventhub_name", "log_analytics_workspace_id", "name", "storage_account_id", "target_resource_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Monitor_diagnostic_settingHandler", bridge.NewTFHandler(p, "azurerm_monitor_diagnostic_setting", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Monitor_log_profile{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("monitor_log_profileID")
		b.ImmutableAttributes("name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Monitor_log_profileHandler", bridge.NewTFHandler(p, "azurerm_monitor_log_profile", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Monitor_metric_alert{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("monitor_metric_alertID", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Monitor_metric_alertHandler", bridge.NewTFHandler(p, "azurerm_monitor_metric_alert", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Mssql_elasticpool{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("mssql_elasticpoolID", "elastic_pool_properties", "max_size_bytes", "tags", "zone_redundant")
		b.ImmutableAttributes("location", "name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Mssql_elasticpoolHandler", bridge.NewTFHandler(p, "azurerm_mssql_elasticpool", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Mysql_configuration{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("mysql_configurationID")
		b.ImmutableAttributes("name", "resource_group_name", "server_name", "value")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Mysql_configurationHandler", bridge.NewTFHandler(p, "azurerm_mysql_configuration", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Mysql_database{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("mysql_databaseID")
		b.ImmutableAttributes("charset", "collation", "name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Mysql_databaseHandler", bridge.NewTFHandler(p, "azurerm_mysql_database", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Mysql_firewall_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("mysql_firewall_ruleID")
		b.ImmutableAttributes("name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Mysql_firewall_ruleHandler", bridge.NewTFHandler(p, "azurerm_mysql_firewall_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Mysql_server{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("mysql_serverID", "fqdn", "tags")
		b.ImmutableAttributes("administrator_login", "location", "name", "resource_group_name", "version")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Mysql_serverHandler", bridge.NewTFHandler(p, "azurerm_mysql_server", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Mysql_virtual_network_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("mysql_virtual_network_ruleID")
		b.ImmutableAttributes("name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Mysql_virtual_network_ruleHandler", bridge.NewTFHandler(p, "azurerm_mysql_virtual_network_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Network_interface{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("network_interfaceID", "applied_dns_servers", "dns_servers", "internal_dns_name_label", "internal_fqdn", "mac_address", "private_ip_address", "private_ip_addresses", "tags", "virtual_machine_id")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Network_interfaceHandler", bridge.NewTFHandler(p, "azurerm_network_interface", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Network_interface_application_gateway_backend_address_pool_association{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("network_interface_application_gateway_backend_address_pool_associationID")
		b.ImmutableAttributes("backend_address_pool_id", "ip_configuration_name", "network_interface_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Network_interface_application_gateway_backend_address_pool_associationHandler", bridge.NewTFHandler(p, "azurerm_network_interface_application_gateway_backend_address_pool_association", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Network_interface_backend_address_pool_association{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("network_interface_backend_address_pool_associationID")
		b.ImmutableAttributes("backend_address_pool_id", "ip_configuration_name", "network_interface_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Network_interface_backend_address_pool_associationHandler", bridge.NewTFHandler(p, "azurerm_network_interface_backend_address_pool_association", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Network_interface_nat_rule_association{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("network_interface_nat_rule_associationID")
		b.ImmutableAttributes("ip_configuration_name", "nat_rule_id", "network_interface_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Network_interface_nat_rule_associationHandler", bridge.NewTFHandler(p, "azurerm_network_interface_nat_rule_association", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Network_security_group{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("network_security_groupID", "security_rule", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Network_security_groupHandler", bridge.NewTFHandler(p, "azurerm_network_security_group", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Network_security_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("network_security_ruleID")
		b.ImmutableAttributes("name", "network_security_group_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Network_security_ruleHandler", bridge.NewTFHandler(p, "azurerm_network_security_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Network_watcher{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("network_watcherID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Network_watcherHandler", bridge.NewTFHandler(p, "azurerm_network_watcher", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Notification_hub{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("notification_hubID")
		b.ImmutableAttributes("location", "name", "namespace_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Notification_hubHandler", bridge.NewTFHandler(p, "azurerm_notification_hub", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Notification_hub_authorization_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("notification_hub_authorization_ruleID", "primary_access_key", "secondary_access_key")
		b.ImmutableAttributes("name", "namespace_name", "notification_hub_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Notification_hub_authorization_ruleHandler", bridge.NewTFHandler(p, "azurerm_notification_hub_authorization_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Notification_hub_namespace{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("notification_hub_namespaceID", "servicebus_endpoint")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Notification_hub_namespaceHandler", bridge.NewTFHandler(p, "azurerm_notification_hub_namespace", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Packet_capture{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("packet_captureID")
		b.ImmutableAttributes("filter", "maximum_bytes_per_packet", "maximum_bytes_per_session", "maximum_capture_duration", "name", "network_watcher_name", "resource_group_name", "storage_location", "target_resource_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Packet_captureHandler", bridge.NewTFHandler(p, "azurerm_packet_capture", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Policy_assignment{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("policy_assignmentID", "identity")
		b.ImmutableAttributes("location", "name", "parameters", "policy_definition_id", "scope")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Policy_assignmentHandler", bridge.NewTFHandler(p, "azurerm_policy_assignment", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Policy_definition{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("policy_definitionID")
		b.ImmutableAttributes("management_group_id", "mode", "name", "policy_type")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Policy_definitionHandler", bridge.NewTFHandler(p, "azurerm_policy_definition", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Policy_set_definition{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("policy_set_definitionID")
		b.ImmutableAttributes("management_group_id", "name", "policy_type")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Policy_set_definitionHandler", bridge.NewTFHandler(p, "azurerm_policy_set_definition", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Postgresql_configuration{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("postgresql_configurationID")
		b.ImmutableAttributes("name", "resource_group_name", "server_name", "value")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Postgresql_configurationHandler", bridge.NewTFHandler(p, "azurerm_postgresql_configuration", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Postgresql_database{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("postgresql_databaseID")
		b.ImmutableAttributes("charset", "collation", "name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Postgresql_databaseHandler", bridge.NewTFHandler(p, "azurerm_postgresql_database", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Postgresql_firewall_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("postgresql_firewall_ruleID")
		b.ImmutableAttributes("end_ip_address", "name", "resource_group_name", "server_name", "start_ip_address")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Postgresql_firewall_ruleHandler", bridge.NewTFHandler(p, "azurerm_postgresql_firewall_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Postgresql_server{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("postgresql_serverID", "fqdn", "tags")
		b.ImmutableAttributes("administrator_login", "location", "name", "resource_group_name", "version")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Postgresql_serverHandler", bridge.NewTFHandler(p, "azurerm_postgresql_server", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Postgresql_virtual_network_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("postgresql_virtual_network_ruleID")
		b.ImmutableAttributes("name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Postgresql_virtual_network_ruleHandler", bridge.NewTFHandler(p, "azurerm_postgresql_virtual_network_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Public_ip{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("public_ipID", "allocation_method", "fqdn", "ip_address", "public_ip_address_allocation", "tags")
		b.ImmutableAttributes("ip_version", "location", "name", "resource_group_name", "sku", "zones")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Public_ipHandler", bridge.NewTFHandler(p, "azurerm_public_ip", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Recovery_services_protected_vm{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("recovery_services_protected_vmID", "tags")
		b.ImmutableAttributes("backup_policy_id", "recovery_vault_name", "resource_group_name", "source_vm_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Recovery_services_protected_vmHandler", bridge.NewTFHandler(p, "azurerm_recovery_services_protected_vm", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Recovery_services_protection_policy_vm{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("recovery_services_protection_policy_vmID", "tags")
		b.ImmutableAttributes("name", "recovery_vault_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Recovery_services_protection_policy_vmHandler", bridge.NewTFHandler(p, "azurerm_recovery_services_protection_policy_vm", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Recovery_services_vault{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("recovery_services_vaultID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Recovery_services_vaultHandler", bridge.NewTFHandler(p, "azurerm_recovery_services_vault", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Redis_cache{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("redis_cacheID", "hostname", "port", "primary_access_key", "private_static_ip_address", "secondary_access_key", "ssl_port", "tags")
		b.ImmutableAttributes("location", "name", "private_static_ip_address", "resource_group_name", "subnet_id", "zones")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Redis_cacheHandler", bridge.NewTFHandler(p, "azurerm_redis_cache", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Redis_firewall_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("redis_firewall_ruleID")
		b.ImmutableAttributes("name", "redis_cache_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Redis_firewall_ruleHandler", bridge.NewTFHandler(p, "azurerm_redis_firewall_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Relay_namespace{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("relay_namespaceID", "metric_id", "primary_connection_string", "primary_key", "secondary_connection_string", "secondary_key", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Relay_namespaceHandler", bridge.NewTFHandler(p, "azurerm_relay_namespace", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Resource_group{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("resource_groupID", "tags")
		b.ImmutableAttributes("location", "name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Resource_groupHandler", bridge.NewTFHandler(p, "azurerm_resource_group", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Role_assignment{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("role_assignmentID", "name", "role_definition_id", "role_definition_name")
		b.ImmutableAttributes("name", "principal_id", "role_definition_id", "role_definition_name", "scope")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Role_assignmentHandler", bridge.NewTFHandler(p, "azurerm_role_assignment", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Role_definition{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("role_definitionID", "role_definition_id")
		b.ImmutableAttributes("role_definition_id", "scope")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Role_definitionHandler", bridge.NewTFHandler(p, "azurerm_role_definition", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Route{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("routeID")
		b.ImmutableAttributes("name", "resource_group_name", "route_table_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::RouteHandler", bridge.NewTFHandler(p, "azurerm_route", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Route_table{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("route_tableID", "route", "subnets", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Route_tableHandler", bridge.NewTFHandler(p, "azurerm_route_table", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Scheduler_job{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("scheduler_jobID", "start_time", "state")
		b.ImmutableAttributes("job_collection_name", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Scheduler_jobHandler", bridge.NewTFHandler(p, "azurerm_scheduler_job", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Scheduler_job_collection{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("scheduler_job_collectionID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Scheduler_job_collectionHandler", bridge.NewTFHandler(p, "azurerm_scheduler_job_collection", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Search_service{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("search_serviceID", "partition_count", "primary_key", "replica_count", "secondary_key", "tags")
		b.ImmutableAttributes("location", "name", "partition_count", "replica_count", "resource_group_name", "sku", "tags")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Search_serviceHandler", bridge.NewTFHandler(p, "azurerm_search_service", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Security_center_contact{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("security_center_contactID")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Security_center_contactHandler", bridge.NewTFHandler(p, "azurerm_security_center_contact", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Security_center_subscription_pricing{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("security_center_subscription_pricingID")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Security_center_subscription_pricingHandler", bridge.NewTFHandler(p, "azurerm_security_center_subscription_pricing", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Security_center_workspace{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("security_center_workspaceID")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Security_center_workspaceHandler", bridge.NewTFHandler(p, "azurerm_security_center_workspace", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Service_fabric_cluster{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("service_fabric_clusterID", "cluster_code_version", "cluster_endpoint", "tags")
		b.ImmutableAttributes("azure_active_directory", "diagnostics_config", "location", "management_endpoint", "name", "resource_group_name", "vm_image")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Service_fabric_clusterHandler", bridge.NewTFHandler(p, "azurerm_service_fabric_cluster", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Servicebus_namespace{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("servicebus_namespaceID", "default_primary_connection_string", "default_primary_key", "default_secondary_connection_string", "default_secondary_key", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name", "sku")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Servicebus_namespaceHandler", bridge.NewTFHandler(p, "azurerm_servicebus_namespace", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Servicebus_namespace_authorization_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("servicebus_namespace_authorization_ruleID", "primary_connection_string", "primary_key", "secondary_connection_string", "secondary_key")
		b.ImmutableAttributes("name", "namespace_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Servicebus_namespace_authorization_ruleHandler", bridge.NewTFHandler(p, "azurerm_servicebus_namespace_authorization_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Servicebus_queue{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("servicebus_queueID", "auto_delete_on_idle", "default_message_ttl", "duplicate_detection_history_time_window", "lock_duration", "max_size_in_megabytes")
		b.ImmutableAttributes("enable_partitioning", "location", "name", "namespace_name", "requires_duplicate_detection", "requires_session", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Servicebus_queueHandler", bridge.NewTFHandler(p, "azurerm_servicebus_queue", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Servicebus_queue_authorization_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("servicebus_queue_authorization_ruleID", "primary_connection_string", "primary_key", "secondary_connection_string", "secondary_key")
		b.ImmutableAttributes("name", "namespace_name", "queue_name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Servicebus_queue_authorization_ruleHandler", bridge.NewTFHandler(p, "azurerm_servicebus_queue_authorization_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Servicebus_subscription{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("servicebus_subscriptionID", "auto_delete_on_idle", "default_message_ttl", "lock_duration")
		b.ImmutableAttributes("location", "name", "namespace_name", "requires_session", "resource_group_name", "topic_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Servicebus_subscriptionHandler", bridge.NewTFHandler(p, "azurerm_servicebus_subscription", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Servicebus_subscription_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("servicebus_subscription_ruleID")
		b.ImmutableAttributes("name", "namespace_name", "resource_group_name", "subscription_name", "topic_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Servicebus_subscription_ruleHandler", bridge.NewTFHandler(p, "azurerm_servicebus_subscription_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Servicebus_topic{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("servicebus_topicID", "auto_delete_on_idle", "default_message_ttl", "duplicate_detection_history_time_window", "max_size_in_megabytes")
		b.ImmutableAttributes("enable_partitioning", "location", "name", "namespace_name", "requires_duplicate_detection", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Servicebus_topicHandler", bridge.NewTFHandler(p, "azurerm_servicebus_topic", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Servicebus_topic_authorization_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("servicebus_topic_authorization_ruleID", "primary_connection_string", "primary_key", "secondary_connection_string", "secondary_key")
		b.ImmutableAttributes("name", "namespace_name", "resource_group_name", "topic_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Servicebus_topic_authorization_ruleHandler", bridge.NewTFHandler(p, "azurerm_servicebus_topic_authorization_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Shared_image{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("shared_imageID", "tags")
		b.ImmutableAttributes("gallery_name", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Shared_imageHandler", bridge.NewTFHandler(p, "azurerm_shared_image", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Shared_image_gallery{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("shared_image_galleryID", "tags", "unique_name")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Shared_image_galleryHandler", bridge.NewTFHandler(p, "azurerm_shared_image_gallery", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Shared_image_version{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("shared_image_versionID", "tags")
		b.ImmutableAttributes("gallery_name", "image_name", "location", "managed_image_id", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Shared_image_versionHandler", bridge.NewTFHandler(p, "azurerm_shared_image_version", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Signalr_service{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("signalr_serviceID", "hostname", "ip_address", "public_port", "server_port", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Signalr_serviceHandler", bridge.NewTFHandler(p, "azurerm_signalr_service", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Snapshot{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("snapshotID", "disk_size_gb", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name", "source_resource_id", "source_uri", "storage_account_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::SnapshotHandler", bridge.NewTFHandler(p, "azurerm_snapshot", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Sql_active_directory_administrator{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("sql_active_directory_administratorID")
		b.ImmutableAttributes("resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Sql_active_directory_administratorHandler", bridge.NewTFHandler(p, "azurerm_sql_active_directory_administrator", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Sql_database{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("sql_databaseID", "collation", "creation_date", "default_secondary_location", "edition", "elastic_pool_name", "encryption", "max_size_bytes", "requested_service_objective_id", "requested_service_objective_name", "restore_point_in_time", "source_database_deletion_date", "source_database_id", "tags", "threat_detection_policy")
		b.ImmutableAttributes("collation", "location", "name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Sql_databaseHandler", bridge.NewTFHandler(p, "azurerm_sql_database", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Sql_elasticpool{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("sql_elasticpoolID", "creation_date", "db_dtu_max", "db_dtu_min", "pool_size", "tags")
		b.ImmutableAttributes("edition", "location", "name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Sql_elasticpoolHandler", bridge.NewTFHandler(p, "azurerm_sql_elasticpool", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Sql_firewall_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("sql_firewall_ruleID")
		b.ImmutableAttributes("name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Sql_firewall_ruleHandler", bridge.NewTFHandler(p, "azurerm_sql_firewall_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Sql_server{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("sql_serverID", "fully_qualified_domain_name", "tags")
		b.ImmutableAttributes("administrator_login", "location", "name", "resource_group_name", "version")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Sql_serverHandler", bridge.NewTFHandler(p, "azurerm_sql_server", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Sql_virtual_network_rule{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("sql_virtual_network_ruleID")
		b.ImmutableAttributes("name", "resource_group_name", "server_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Sql_virtual_network_ruleHandler", bridge.NewTFHandler(p, "azurerm_sql_virtual_network_rule", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Storage_account{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("storage_accountID", "access_tier", "account_type", "identity", "primary_access_key", "primary_blob_connection_string", "primary_blob_endpoint", "primary_connection_string", "primary_file_endpoint", "primary_location", "primary_queue_endpoint", "primary_table_endpoint", "secondary_access_key", "secondary_blob_connection_string", "secondary_blob_endpoint", "secondary_connection_string", "secondary_location", "secondary_queue_endpoint", "secondary_table_endpoint", "tags")
		b.ImmutableAttributes("account_kind", "account_tier", "location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Storage_accountHandler", bridge.NewTFHandler(p, "azurerm_storage_account", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Storage_blob{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("storage_blobID", "url")
		b.ImmutableAttributes("attempts", "name", "parallelism", "resource_group_name", "size", "source", "source_uri", "storage_account_name", "storage_container_name", "type")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Storage_blobHandler", bridge.NewTFHandler(p, "azurerm_storage_blob", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Storage_container{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("storage_containerID", "properties")
		b.ImmutableAttributes("name", "resource_group_name", "storage_account_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Storage_containerHandler", bridge.NewTFHandler(p, "azurerm_storage_container", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Storage_queue{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("storage_queueID")
		b.ImmutableAttributes("name", "resource_group_name", "storage_account_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Storage_queueHandler", bridge.NewTFHandler(p, "azurerm_storage_queue", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Storage_share{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("storage_shareID", "url")
		b.ImmutableAttributes("name", "resource_group_name", "storage_account_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Storage_shareHandler", bridge.NewTFHandler(p, "azurerm_storage_share", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Storage_table{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("storage_tableID")
		b.ImmutableAttributes("name", "resource_group_name", "storage_account_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Storage_tableHandler", bridge.NewTFHandler(p, "azurerm_storage_table", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Subnet{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("subnetID", "ip_configurations")
		b.ImmutableAttributes("name", "resource_group_name", "virtual_network_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::SubnetHandler", bridge.NewTFHandler(p, "azurerm_subnet", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Subnet_network_security_group_association{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("subnet_network_security_group_associationID")
		b.ImmutableAttributes("network_security_group_id", "subnet_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Subnet_network_security_group_associationHandler", bridge.NewTFHandler(p, "azurerm_subnet_network_security_group_association", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Subnet_route_table_association{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("subnet_route_table_associationID")
		b.ImmutableAttributes("route_table_id", "subnet_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Subnet_route_table_associationHandler", bridge.NewTFHandler(p, "azurerm_subnet_route_table_association", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Template_deployment{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("template_deploymentID", "outputs", "template_body")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Template_deploymentHandler", bridge.NewTFHandler(p, "azurerm_template_deployment", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Traffic_manager_endpoint{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("traffic_manager_endpointID", "endpoint_location", "endpoint_monitor_status", "endpoint_status", "priority", "target", "weight")
		b.ImmutableAttributes("name", "profile_name", "resource_group_name", "type")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Traffic_manager_endpointHandler", bridge.NewTFHandler(p, "azurerm_traffic_manager_endpoint", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Traffic_manager_profile{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("traffic_manager_profileID", "fqdn", "profile_status", "tags")
		b.ImmutableAttributes("name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Traffic_manager_profileHandler", bridge.NewTFHandler(p, "azurerm_traffic_manager_profile", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&User_assigned_identity{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("user_assigned_identityID", "client_id", "principal_id", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::User_assigned_identityHandler", bridge.NewTFHandler(p, "azurerm_user_assigned_identity", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Virtual_machine{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("virtual_machineID", "availability_set_id", "identity", "license_type", "storage_data_disk", "storage_image_reference", "tags")
		b.ImmutableAttributes("availability_set_id", "location", "name", "resource_group_name", "storage_image_reference", "zones")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Virtual_machineHandler", bridge.NewTFHandler(p, "azurerm_virtual_machine", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Virtual_machine_data_disk_attachment{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("virtual_machine_data_disk_attachmentID")
		b.ImmutableAttributes("create_option", "lun", "managed_disk_id", "virtual_machine_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Virtual_machine_data_disk_attachmentHandler", bridge.NewTFHandler(p, "azurerm_virtual_machine_data_disk_attachment", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Virtual_machine_extension{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("virtual_machine_extensionID", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name", "virtual_machine_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Virtual_machine_extensionHandler", bridge.NewTFHandler(p, "azurerm_virtual_machine_extension", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Virtual_machine_scale_set{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("virtual_machine_scale_setID", "identity", "license_type", "os_profile_linux_config", "storage_profile_image_reference", "tags")
		b.ImmutableAttributes("eviction_policy", "location", "name", "priority", "resource_group_name", "single_placement_group", "zones")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Virtual_machine_scale_setHandler", bridge.NewTFHandler(p, "azurerm_virtual_machine_scale_set", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Virtual_network{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("virtual_networkID", "subnet", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Virtual_networkHandler", bridge.NewTFHandler(p, "azurerm_virtual_network", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Virtual_network_gateway{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("virtual_network_gatewayID", "active_active", "bgp_settings", "enable_bgp", "tags")
		b.ImmutableAttributes("location", "name", "resource_group_name", "type", "vpn_type")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Virtual_network_gatewayHandler", bridge.NewTFHandler(p, "azurerm_virtual_network_gateway", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Virtual_network_gateway_connection{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("virtual_network_gateway_connectionID", "enable_bgp", "routing_weight", "tags", "use_policy_based_traffic_selectors")
		b.ImmutableAttributes("express_route_circuit_id", "location", "name", "peer_virtual_network_gateway_id", "resource_group_name", "type", "virtual_network_gateway_id")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Virtual_network_gateway_connectionHandler", bridge.NewTFHandler(p, "azurerm_virtual_network_gateway_connection", rt), rt)

	rt = sb.RegisterTypes("TerraformAzureRM", sb.BuildResource(&Virtual_network_peering{}, func(b service.ResourceTypeBuilder) {
		b.ProvidedAttributes("virtual_network_peeringID", "allow_forwarded_traffic", "allow_gateway_transit", "allow_virtual_network_access", "use_remote_gateways")
		b.ImmutableAttributes("name", "remote_virtual_network_id", "resource_group_name", "virtual_network_name")
	}))[0]
	sb.RegisterHandler("TerraformAzureRM::Virtual_network_peeringHandler", bridge.NewTFHandler(p, "azurerm_virtual_network_peering", rt), rt)

	// Registration of non-resource types
	sb.RegisterTypes("TerraformAzureRM",
		&Api_management__additional_location{},
		&Api_management__certificate{},
		&Api_management__hostname_configuration__management{},
		&Api_management__hostname_configuration__portal{},
		&Api_management__hostname_configuration__proxy{},
		&Api_management__hostname_configuration__scm{},
		&Api_management__hostname_configuration{},
		&Api_management__identity{},
		&Api_management__security{},
		&Api_management__sku{},
		&App_service__connection_string{},
		&App_service__identity{},
		&App_service__site_config__ip_restriction{},
		&App_service__site_config{},
		&App_service__site_credential{},
		&App_service__source_control{},
		&App_service_plan__properties{},
		&App_service_plan__sku{},
		&App_service_slot__connection_string{},
		&App_service_slot__identity{},
		&App_service_slot__site_config__ip_restriction{},
		&App_service_slot__site_config{},
		&Application_gateway__authentication_certificate{},
		&Application_gateway__backend_address_pool{},
		&Application_gateway__backend_http_settings__authentication_certificate{},
		&Application_gateway__backend_http_settings{},
		&Application_gateway__frontend_ip_configuration{},
		&Application_gateway__frontend_port{},
		&Application_gateway__gateway_ip_configuration{},
		&Application_gateway__http_listener{},
		&Application_gateway__probe__match{},
		&Application_gateway__probe{},
		&Application_gateway__request_routing_rule{},
		&Application_gateway__sku{},
		&Application_gateway__ssl_certificate{},
		&Application_gateway__url_path_map__path_rule{},
		&Application_gateway__url_path_map{},
		&Application_gateway__waf_configuration{},
		&Automation_account__sku{},
		&Automation_module__module_link__hash{},
		&Automation_module__module_link{},
		&Automation_runbook__publish_content_link__hash{},
		&Automation_runbook__publish_content_link{},
		&Automation_schedule__monthly_occurrence{},
		&Autoscale_setting__notification__email{},
		&Autoscale_setting__notification__webhook{},
		&Autoscale_setting__notification{},
		&Autoscale_setting__profile__capacity{},
		&Autoscale_setting__profile__fixed_date{},
		&Autoscale_setting__profile__recurrence{},
		&Autoscale_setting__profile__rule__metric_trigger{},
		&Autoscale_setting__profile__rule__scale_action{},
		&Autoscale_setting__profile__rule{},
		&Autoscale_setting__profile{},
		&Batch_pool__auto_scale{},
		&Batch_pool__fixed_scale{},
		&Batch_pool__start_task__user_identity__auto_user{},
		&Batch_pool__start_task__user_identity{},
		&Batch_pool__start_task{},
		&Batch_pool__storage_image_reference{},
		&Cdn_endpoint__geo_filter{},
		&Cdn_endpoint__origin{},
		&Cognitive_account__sku{},
		&Container_group__container__ports{},
		&Container_group__container__volume{},
		&Container_group__container{},
		&Container_group__image_registry_credential{},
		&Container_registry__storage_account{},
		&Container_service__agent_pool_profile{},
		&Container_service__diagnostics_profile{},
		&Container_service__linux_profile__ssh_key{},
		&Container_service__linux_profile{},
		&Container_service__master_profile{},
		&Container_service__service_principal{},
		&Cosmosdb_account__capabilities{},
		&Cosmosdb_account__consistency_policy{},
		&Cosmosdb_account__failover_policy{},
		&Cosmosdb_account__geo_location{},
		&Cosmosdb_account__virtual_network_rule{},
		&Dev_test_linux_virtual_machine__gallery_image_reference{},
		&Dev_test_linux_virtual_machine__inbound_nat_rule{},
		&Dev_test_virtual_network__subnet{},
		&Dev_test_windows_virtual_machine__gallery_image_reference{},
		&Dev_test_windows_virtual_machine__inbound_nat_rule{},
		&Devspace_controller__sku{},
		&Dns_caa_record__record{},
		&Dns_mx_record__record{},
		&Dns_ns_record__record{},
		&Dns_srv_record__record{},
		&Dns_txt_record__record{},
		&Eventhub__capture_description__destination{},
		&Eventhub__capture_description{},
		&Express_route_circuit__sku{},
		&Express_route_circuit_peering__microsoft_peering_config{},
		&Firewall__ip_configuration{},
		&Firewall_application_rule_collection__rule__protocol{},
		&Firewall_application_rule_collection__rule{},
		&Firewall_network_rule_collection__rule{},
		&Function_app__connection_string{},
		&Function_app__identity{},
		&Function_app__site_config{},
		&Function_app__site_credential{},
		&Image__data_disk{},
		&Image__os_disk{},
		&Iothub__endpoint{},
		&Iothub__route{},
		&Iothub__shared_access_policy{},
		&Iothub__sku{},
		&Key_vault__access_policy{},
		&Key_vault__network_acls{},
		&Key_vault__sku{},
		&Key_vault_certificate__certificate{},
		&Key_vault_certificate__certificate_policy__issuer_parameters{},
		&Key_vault_certificate__certificate_policy__key_properties{},
		&Key_vault_certificate__certificate_policy__lifetime_action__action{},
		&Key_vault_certificate__certificate_policy__lifetime_action__trigger{},
		&Key_vault_certificate__certificate_policy__lifetime_action{},
		&Key_vault_certificate__certificate_policy__secret_properties{},
		&Key_vault_certificate__certificate_policy__x509_certificate_properties__subject_alternative_names{},
		&Key_vault_certificate__certificate_policy__x509_certificate_properties{},
		&Key_vault_certificate__certificate_policy{},
		&Kubernetes_cluster__addon_profile__aci_connector_linux{},
		&Kubernetes_cluster__addon_profile__http_application_routing{},
		&Kubernetes_cluster__addon_profile__oms_agent{},
		&Kubernetes_cluster__addon_profile{},
		&Kubernetes_cluster__agent_pool_profile{},
		&Kubernetes_cluster__kube_admin_config{},
		&Kubernetes_cluster__kube_config{},
		&Kubernetes_cluster__linux_profile__ssh_key{},
		&Kubernetes_cluster__linux_profile{},
		&Kubernetes_cluster__network_profile{},
		&Kubernetes_cluster__role_based_access_control__azure_active_directory{},
		&Kubernetes_cluster__role_based_access_control{},
		&Kubernetes_cluster__service_principal{},
		&Lb__frontend_ip_configuration{},
		&Local_network_gateway__bgp_settings{},
		&Log_analytics_solution__plan{},
		&Log_analytics_workspace_linked_service__linked_service_properties{},
		&Managed_disk__encryption_settings__disk_encryption_key{},
		&Managed_disk__encryption_settings__key_encryption_key{},
		&Managed_disk__encryption_settings{},
		&Mariadb_server__sku{},
		&Mariadb_server__storage_profile{},
		&Metric_alertrule__email_action{},
		&Metric_alertrule__webhook_action{},
		&Monitor_action_group__email_receiver{},
		&Monitor_action_group__sms_receiver{},
		&Monitor_action_group__webhook_receiver{},
		&Monitor_activity_log_alert__action{},
		&Monitor_activity_log_alert__criteria{},
		&Monitor_diagnostic_setting__log__retention_policy{},
		&Monitor_diagnostic_setting__log{},
		&Monitor_diagnostic_setting__metric__retention_policy{},
		&Monitor_diagnostic_setting__metric{},
		&Monitor_log_profile__retention_policy{},
		&Monitor_metric_alert__action{},
		&Monitor_metric_alert__criteria__dimension{},
		&Monitor_metric_alert__criteria{},
		&Mssql_elasticpool__elastic_pool_properties{},
		&Mssql_elasticpool__per_database_settings{},
		&Mssql_elasticpool__sku{},
		&Mysql_server__sku{},
		&Mysql_server__storage_profile{},
		&Network_interface__ip_configuration{},
		&Network_security_group__security_rule{},
		&Notification_hub__apns_credential{},
		&Notification_hub__gcm_credential{},
		&Notification_hub_namespace__sku{},
		&Packet_capture__filter{},
		&Packet_capture__storage_location{},
		&Policy_assignment__identity{},
		&Postgresql_server__sku{},
		&Postgresql_server__storage_profile{},
		&Recovery_services_protection_policy_vm__backup{},
		&Recovery_services_protection_policy_vm__retention_daily{},
		&Recovery_services_protection_policy_vm__retention_monthly{},
		&Recovery_services_protection_policy_vm__retention_weekly{},
		&Recovery_services_protection_policy_vm__retention_yearly{},
		&Redis_cache__patch_schedule{},
		&Redis_cache__redis_configuration{},
		&Relay_namespace__sku{},
		&Role_definition__permissions{},
		&Route_table__route{},
		&Scheduler_job__action_storage_queue{},
		&Scheduler_job__action_web__authentication_active_directory{},
		&Scheduler_job__action_web__authentication_basic{},
		&Scheduler_job__action_web__authentication_certificate{},
		&Scheduler_job__action_web{},
		&Scheduler_job__error_action_storage_queue{},
		&Scheduler_job__error_action_web__authentication_active_directory{},
		&Scheduler_job__error_action_web__authentication_basic{},
		&Scheduler_job__error_action_web__authentication_certificate{},
		&Scheduler_job__error_action_web{},
		&Scheduler_job__recurrence__monthly_occurrences{},
		&Scheduler_job__recurrence{},
		&Scheduler_job__retry{},
		&Scheduler_job_collection__quota{},
		&Service_fabric_cluster__azure_active_directory{},
		&Service_fabric_cluster__certificate{},
		&Service_fabric_cluster__client_certificate_thumbprint{},
		&Service_fabric_cluster__diagnostics_config{},
		&Service_fabric_cluster__fabric_settings{},
		&Service_fabric_cluster__node_type__application_ports{},
		&Service_fabric_cluster__node_type__ephemeral_ports{},
		&Service_fabric_cluster__node_type{},
		&Service_fabric_cluster__reverse_proxy_certificate{},
		&Servicebus_subscription_rule__correlation_filter{},
		&Shared_image__identifier{},
		&Shared_image_version__target_region{},
		&Signalr_service__sku{},
		&Snapshot__encryption_settings__disk_encryption_key{},
		&Snapshot__encryption_settings__key_encryption_key{},
		&Snapshot__encryption_settings{},
		&Sql_database__import{},
		&Sql_database__threat_detection_policy{},
		&Storage_account__custom_domain{},
		&Storage_account__identity{},
		&Storage_account__network_rules{},
		&Subnet__delegation__service_delegation{},
		&Subnet__delegation{},
		&Traffic_manager_profile__dns_config{},
		&Traffic_manager_profile__monitor_config{},
		&Virtual_machine__boot_diagnostics{},
		&Virtual_machine__identity{},
		&Virtual_machine__os_profile{},
		&Virtual_machine__os_profile_linux_config__ssh_keys{},
		&Virtual_machine__os_profile_linux_config{},
		&Virtual_machine__os_profile_secrets__vault_certificates{},
		&Virtual_machine__os_profile_secrets{},
		&Virtual_machine__os_profile_windows_config__additional_unattend_config{},
		&Virtual_machine__os_profile_windows_config__winrm{},
		&Virtual_machine__os_profile_windows_config{},
		&Virtual_machine__plan{},
		&Virtual_machine__storage_data_disk{},
		&Virtual_machine__storage_image_reference{},
		&Virtual_machine__storage_os_disk{},
		&Virtual_machine_scale_set__boot_diagnostics{},
		&Virtual_machine_scale_set__extension{},
		&Virtual_machine_scale_set__identity{},
		&Virtual_machine_scale_set__network_profile__dns_settings{},
		&Virtual_machine_scale_set__network_profile__ip_configuration__public_ip_address_configuration{},
		&Virtual_machine_scale_set__network_profile__ip_configuration{},
		&Virtual_machine_scale_set__network_profile{},
		&Virtual_machine_scale_set__os_profile{},
		&Virtual_machine_scale_set__os_profile_linux_config__ssh_keys{},
		&Virtual_machine_scale_set__os_profile_linux_config{},
		&Virtual_machine_scale_set__os_profile_secrets__vault_certificates{},
		&Virtual_machine_scale_set__os_profile_secrets{},
		&Virtual_machine_scale_set__os_profile_windows_config__additional_unattend_config{},
		&Virtual_machine_scale_set__os_profile_windows_config__winrm{},
		&Virtual_machine_scale_set__os_profile_windows_config{},
		&Virtual_machine_scale_set__plan{},
		&Virtual_machine_scale_set__rolling_upgrade_policy{},
		&Virtual_machine_scale_set__sku{},
		&Virtual_machine_scale_set__storage_profile_data_disk{},
		&Virtual_machine_scale_set__storage_profile_image_reference{},
		&Virtual_machine_scale_set__storage_profile_os_disk{},
		&Virtual_network__subnet{},
		&Virtual_network_gateway__bgp_settings{},
		&Virtual_network_gateway__ip_configuration{},
		&Virtual_network_gateway__vpn_client_configuration__revoked_certificate{},
		&Virtual_network_gateway__vpn_client_configuration__root_certificate{},
		&Virtual_network_gateway__vpn_client_configuration{},
		&Virtual_network_gateway_connection__ipsec_policy{})
}
